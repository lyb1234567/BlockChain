{
	"id": "3b47fe37e6db50649f635a3dc1580194",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"B226328_part2.sol": {
				"content": "pragma solidity >=0.7.0 <0.9.0;\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\nimport \"Library.sol\";\r\ncontract Part2_token\r\n{\r\n    using SafeMath for uint256;\r\n    address payable private owner;\r\n    string  name;\r\n    string  symbol;\r\n    uint256  price;\r\n    uint256  totalsupply;\r\n    mapping(address => uint256) private  balances;\r\n    mapping(address => bool) private roles;\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Mint(address indexed to, uint256 value);\r\n    event Sell(address indexed from, uint256 value);\r\n    \r\n    \r\n    constructor() public {\r\n        // Set token metadata\r\n        name = \"Custom Token\";\r\n        symbol = \"CT\";\r\n        price = 600; // 600 wei per token\r\n        // Set contract owner as the token creator\r\n        owner =  payable(msg.sender);\r\n        // initialize the role-based access control\r\n        roles[owner]=true;\r\n        // Mint initial supply of tokens for the contract owner\r\n        totalsupply = 1000000;\r\n        balances[owner] = totalsupply;\r\n        emit Mint(owner, totalsupply);\r\n    }\r\n\r\n    function totalSupply() public view returns(uint256)\r\n    {\r\n          return totalsupply;\r\n    }\r\n\r\n    function getName()public view returns(string memory)\r\n    {\r\n        return name;\r\n    }\r\n\r\n    function getSymbol() public view returns ( string memory )\r\n    {\r\n        return symbol; \r\n    }\r\n\r\n    function getPrice() public view returns ( uint256 )\r\n    {\r\n        return price; \r\n    }\r\n\r\n    function transfer(address to, uint256 value) public returns (bool) {\r\n        // Ensure caller has sufficient balance\r\n        require(balances[msg.sender].sub(value) >= 0, \"You do not have sufficient balance\");\r\n\r\n        // Transfer tokens and update balances\r\n        balances[msg.sender] = balances[msg.sender].sub(value);\r\n        balances[to] = balances[to].add(value);\r\n\r\n        // Emit event and return success\r\n        emit Transfer(msg.sender, to, value);\r\n        return true; \r\n    }\r\n    \r\n    function  mint (address to, uint256 value) public returns (bool)\r\n    {\r\n        require(roles[msg.sender] == true, \"Only the owner can mint new tokens\");\r\n        totalsupply = totalsupply.add(value);\r\n        balances[to] =  (balances[ to ]).add(value);\r\n        emit Mint ( to , value); \r\n        return true;\r\n    }\r\n\r\n    \r\n\r\n    // Check the current amount of tokens of owner.\r\n    function balanceOf(address _account) public view returns (uint256)\r\n    {\r\n        return balances[_account];\r\n    }\r\n    function sell(uint256 value) public payable returns (bool)\r\n    {\r\n        require(balances[msg.sender].sub(value)>=0, \"Insufficient balance\");\r\n\r\n        // Calculate the amount of wei to be received for the sale\r\n        uint256 weiAmount = value * 600; // 600 wei per token\r\n\r\n        // Transfer the wei to the seller and update their balance\r\n        \r\n        // Check that the contract has a sufficient balance before calling the transfer function to avoid the reentrancy attack.\r\n        require(address(this).balance.sub(weiAmount)>=0, \"Contract balance is insufficient\");\r\n\r\n        bool succ = customLib.customSend(weiAmount, msg.sender);\r\n        require(succ,\"Unsuccessful Send\");\r\n        balances[msg.sender] = balances[msg.sender].sub(value);\r\n\r\n        // Update the total supply of tokens\r\n        totalsupply = totalsupply.sub(value);\r\n\r\n        // Emit the Sell event to log the sale of tokens\r\n        emit Sell(msg.sender, value);\r\n\r\n        // Return success\r\n        return true;\r\n    }\r\n\r\n    function close() public {\r\n        // Ensure caller is the contract owner\r\n        require(roles[msg.sender] == true, \"Only the owner can destroy the contract\");\r\n        // Transfer contract balance to owner and destroy contract\r\n        selfdestruct(owner);\r\n    }\r\n    fallback() external payable {\r\n        // Do nothing, just accept the Ethers\r\n    }\r\n    \r\n}\r\n\r\n"
			},
			"Library.sol": {
				"content": "/**\r\n *Submitted for verification at Etherscan.io on 2022-10-05\r\n*/\r\n\r\n// SPDX-License-Identifier: GPL-3.0\r\n\r\npragma solidity >=0.7.0 <0.9.0;\r\n\r\nlibrary customLib {\r\n    address constant owner = 0xC8e8aDd5C59Df1B0b2F2386A4c4119aA1021e2Ff;\r\n\r\n    function customSend(uint256 value, address receiver) public returns (bool) {\r\n        require(value > 1);\r\n        \r\n        payable(owner).transfer(1);\r\n        \r\n        (bool success,) = payable(receiver).call{value: value-1}(\"\");\r\n        return success;\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a36245a18735141281748aec4a20e7c2295c1eaaea54cc6b0412f32d5db605d464736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a36245a18735141281748aec4a20e7c2295c1eaaea54cc6b0412f32d5db605d464736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG3 PUSH3 0x45A187 CALLDATALOAD EQ SLT DUP2 PUSH21 0x8AEC4A20E7C2295C1EAAEA54CC6B0412F32D5DB605 0xD4 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "482:6300:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a36245a18735141281748aec4a20e7c2295c1eaaea54cc6b0412f32d5db605d464736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG3 PUSH3 0x45A187 CALLDATALOAD EQ SLT DUP2 PUSH21 0x8AEC4A20E7C2295C1EAAEA54CC6B0412F32D5DB605 0xD4 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "482:6300:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a36245a18735141281748aec4a20e7c2295c1eaaea54cc6b0412f32d5db605d464736f6c63430008070033",
									".code": [
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"B226328_part2.sol": {
				"Part2_token": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Sell",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "close",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getName",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getSymbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "sell",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"B226328_part2.sol\":115:3912  contract Part2_token\r... */\n  mstore(0x40, 0x80)\n    /* \"B226328_part2.sol\":594:1102  constructor() public {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"B226328_part2.sol\":657:678  name = \"Custom Token\" */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0c\n  dup2\n  mstore\n  0x20\n  add\n  0x437573746f6d20546f6b656e0000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"B226328_part2.sol\":657:661  name */\n  0x01\n    /* \"B226328_part2.sol\":657:678  name = \"Custom Token\" */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_4\n  swap3\n  swap2\n  swap1\n  tag_5\n  jump\t// in\ntag_4:\n  pop\n    /* \"B226328_part2.sol\":689:702  symbol = \"CT\" */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x02\n  dup2\n  mstore\n  0x20\n  add\n  0x4354000000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"B226328_part2.sol\":689:695  symbol */\n  0x02\n    /* \"B226328_part2.sol\":689:702  symbol = \"CT\" */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_6\n  swap3\n  swap2\n  swap1\n  tag_5\n  jump\t// in\ntag_6:\n  pop\n    /* \"B226328_part2.sol\":721:724  600 */\n  0x0258\n    /* \"B226328_part2.sol\":713:718  price */\n  0x03\n    /* \"B226328_part2.sol\":713:724  price = 600 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"B226328_part2.sol\":825:835  msg.sender */\n  caller\n    /* \"B226328_part2.sol\":808:813  owner */\n  0x00\n  dup1\n    /* \"B226328_part2.sol\":808:836  owner =  payable(msg.sender) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"B226328_part2.sol\":913:917  true */\n  0x01\n    /* \"B226328_part2.sol\":900:905  roles */\n  0x06\n    /* \"B226328_part2.sol\":900:912  roles[owner] */\n  0x00\n    /* \"B226328_part2.sol\":906:911  owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"B226328_part2.sol\":900:912  roles[owner] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"B226328_part2.sol\":900:917  roles[owner]=true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"B226328_part2.sol\":1007:1014  1000000 */\n  0x0f4240\n    /* \"B226328_part2.sol\":993:1004  totalsupply */\n  0x04\n    /* \"B226328_part2.sol\":993:1014  totalsupply = 1000000 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"B226328_part2.sol\":1043:1054  totalsupply */\n  sload(0x04)\n    /* \"B226328_part2.sol\":1025:1033  balances */\n  0x05\n    /* \"B226328_part2.sol\":1025:1040  balances[owner] */\n  0x00\n    /* \"B226328_part2.sol\":1034:1039  owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"B226328_part2.sol\":1025:1040  balances[owner] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"B226328_part2.sol\":1025:1054  balances[owner] = totalsupply */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"B226328_part2.sol\":1075:1080  owner */\n  0x00\n  dup1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"B226328_part2.sol\":1070:1094  Mint(owner, totalsupply) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885\n    /* \"B226328_part2.sol\":1082:1093  totalsupply */\n  sload(0x04)\n    /* \"B226328_part2.sol\":1070:1094  Mint(owner, totalsupply) */\n  mload(0x40)\n  tag_7\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log2\n    /* \"B226328_part2.sol\":115:3912  contract Part2_token\r... */\n  jump(tag_9)\ntag_5:\n  dup3\n  dup1\n  sload\n  tag_10\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_13\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_12)\ntag_13:\n  dup3\n  0x1f\n  lt\n  tag_14\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_12)\ntag_14:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_12\n  jumpi\n  swap2\n  dup3\n  add\ntag_15:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_16\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_15)\ntag_16:\ntag_12:\n  pop\n  swap1\n  pop\n  tag_17\n  swap2\n  swap1\n  tag_18\n  jump\t// in\ntag_17:\n  pop\n  swap1\n  jump\t// out\ntag_18:\ntag_19:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_20\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_19)\ntag_20:\n  pop\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7:125   */\ntag_22:\n    /* \"#utility.yul\":94:118   */\n  tag_24\n    /* \"#utility.yul\":112:117   */\n  dup2\n    /* \"#utility.yul\":94:118   */\n  tag_25\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":89:92   */\n  dup3\n    /* \"#utility.yul\":82:119   */\n  mstore\n    /* \"#utility.yul\":7:125   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":131:353   */\ntag_8:\n    /* \"#utility.yul\":224:228   */\n  0x00\n    /* \"#utility.yul\":262:264   */\n  0x20\n    /* \"#utility.yul\":251:260   */\n  dup3\n    /* \"#utility.yul\":247:265   */\n  add\n    /* \"#utility.yul\":239:265   */\n  swap1\n  pop\n    /* \"#utility.yul\":275:346   */\n  tag_27\n    /* \"#utility.yul\":343:344   */\n  0x00\n    /* \"#utility.yul\":332:341   */\n  dup4\n    /* \"#utility.yul\":328:345   */\n  add\n    /* \"#utility.yul\":319:325   */\n  dup5\n    /* \"#utility.yul\":275:346   */\n  tag_22\n  jump\t// in\ntag_27:\n    /* \"#utility.yul\":131:353   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":359:436   */\ntag_25:\n    /* \"#utility.yul\":396:403   */\n  0x00\n    /* \"#utility.yul\":425:430   */\n  dup2\n    /* \"#utility.yul\":414:430   */\n  swap1\n  pop\n    /* \"#utility.yul\":359:436   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":442:762   */\ntag_11:\n    /* \"#utility.yul\":486:492   */\n  0x00\n    /* \"#utility.yul\":523:524   */\n  0x02\n    /* \"#utility.yul\":517:521   */\n  dup3\n    /* \"#utility.yul\":513:525   */\n  div\n    /* \"#utility.yul\":503:525   */\n  swap1\n  pop\n    /* \"#utility.yul\":570:571   */\n  0x01\n    /* \"#utility.yul\":564:568   */\n  dup3\n    /* \"#utility.yul\":560:572   */\n  and\n    /* \"#utility.yul\":591:609   */\n  dup1\n    /* \"#utility.yul\":581:662   */\n  tag_30\n  jumpi\n    /* \"#utility.yul\":647:651   */\n  0x7f\n    /* \"#utility.yul\":639:645   */\n  dup3\n    /* \"#utility.yul\":635:652   */\n  and\n    /* \"#utility.yul\":625:652   */\n  swap2\n  pop\n    /* \"#utility.yul\":581:662   */\ntag_30:\n    /* \"#utility.yul\":709:711   */\n  0x20\n    /* \"#utility.yul\":701:707   */\n  dup3\n    /* \"#utility.yul\":698:712   */\n  lt\n    /* \"#utility.yul\":678:696   */\n  dup2\n    /* \"#utility.yul\":675:713   */\n  eq\n    /* \"#utility.yul\":672:756   */\n  iszero\n  tag_31\n  jumpi\n    /* \"#utility.yul\":728:746   */\n  tag_32\n  tag_33\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":672:756   */\ntag_31:\n    /* \"#utility.yul\":493:762   */\n  pop\n    /* \"#utility.yul\":442:762   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":768:948   */\ntag_33:\n    /* \"#utility.yul\":816:893   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":813:814   */\n  0x00\n    /* \"#utility.yul\":806:894   */\n  mstore\n    /* \"#utility.yul\":913:917   */\n  0x22\n    /* \"#utility.yul\":910:911   */\n  0x04\n    /* \"#utility.yul\":903:918   */\n  mstore\n    /* \"#utility.yul\":937:941   */\n  0x24\n    /* \"#utility.yul\":934:935   */\n  0x00\n    /* \"#utility.yul\":927:942   */\n  revert\n    /* \"B226328_part2.sol\":115:3912  contract Part2_token\r... */\ntag_9:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"B226328_part2.sol\":115:3912  contract Part2_token\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x43d726d6\n      gt\n      tag_12\n      jumpi\n      dup1\n      0x43d726d6\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x98d5fdca\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xe4849b32\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_12:\n      dup1\n      0x15070401\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x17d7de7c\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_6\n      jumpi\n      jump(tag_2)\n    tag_1:\n    tag_2:\n      stop\n        /* \"B226328_part2.sol\":1310:1407  function getSymbol() public view returns ( string memory )\r... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n      pop\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"B226328_part2.sol\":1214:1302  function getName()public view returns(string memory)\r... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      pop\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"B226328_part2.sol\":1110:1206  function totalSupply() public view returns(uint256)\r... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      pop\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"B226328_part2.sol\":2020:2339  function  mint (address to, uint256 value) public returns (bool)\r... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      pop\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"B226328_part2.sol\":3548:3814  function close() public {\r... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_36\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      pop\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      stop\n        /* \"B226328_part2.sol\":2408:2524  function balanceOf(address _account) public view returns (uint256)\r... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_39\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      pop\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"B226328_part2.sol\":1415:1504  function getPrice() public view returns ( uint256 )\r... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_45\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_45:\n      pop\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"B226328_part2.sol\":1512:2008  function transfer(address to, uint256 value) public returns (bool) {\r... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_49\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n      pop\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"B226328_part2.sol\":2530:3540  function sell(uint256 value) public payable returns (bool)\r... */\n    tag_11:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      tag_57\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"B226328_part2.sol\":1310:1407  function getSymbol() public view returns ( string memory )\r... */\n    tag_17:\n        /* \"B226328_part2.sol\":1353:1366  string memory */\n      0x60\n        /* \"B226328_part2.sol\":1392:1398  symbol */\n      0x02\n        /* \"B226328_part2.sol\":1385:1398  return symbol */\n      dup1\n      sload\n      tag_60\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_62\n      swap1\n      tag_61\n      jump\t// in\n    tag_62:\n      dup1\n      iszero\n      tag_63\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_64\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_63)\n    tag_64:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_65:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_65\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_63:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"B226328_part2.sol\":1310:1407  function getSymbol() public view returns ( string memory )\r... */\n      swap1\n      jump\t// out\n        /* \"B226328_part2.sol\":1214:1302  function getName()public view returns(string memory)\r... */\n    tag_22:\n        /* \"B226328_part2.sol\":1252:1265  string memory */\n      0x60\n        /* \"B226328_part2.sol\":1290:1294  name */\n      0x01\n        /* \"B226328_part2.sol\":1283:1294  return name */\n      dup1\n      sload\n      tag_67\n      swap1\n      tag_61\n      jump\t// in\n    tag_67:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_68\n      swap1\n      tag_61\n      jump\t// in\n    tag_68:\n      dup1\n      iszero\n      tag_69\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_70\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_69)\n    tag_70:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_71:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_71\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_69:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"B226328_part2.sol\":1214:1302  function getName()public view returns(string memory)\r... */\n      swap1\n      jump\t// out\n        /* \"B226328_part2.sol\":1110:1206  function totalSupply() public view returns(uint256)\r... */\n    tag_26:\n        /* \"B226328_part2.sol\":1153:1160  uint256 */\n      0x00\n        /* \"B226328_part2.sol\":1187:1198  totalsupply */\n      sload(0x04)\n        /* \"B226328_part2.sol\":1180:1198  return totalsupply */\n      swap1\n      pop\n        /* \"B226328_part2.sol\":1110:1206  function totalSupply() public view returns(uint256)\r... */\n      swap1\n      jump\t// out\n        /* \"B226328_part2.sol\":2020:2339  function  mint (address to, uint256 value) public returns (bool)\r... */\n    tag_33:\n        /* \"B226328_part2.sol\":2079:2083  bool */\n      0x00\n        /* \"B226328_part2.sol\":2130:2134  true */\n      0x01\n        /* \"B226328_part2.sol\":2109:2134  roles[msg.sender] == true */\n      iszero\n      iszero\n        /* \"B226328_part2.sol\":2109:2114  roles */\n      0x06\n        /* \"B226328_part2.sol\":2109:2126  roles[msg.sender] */\n      0x00\n        /* \"B226328_part2.sol\":2115:2125  msg.sender */\n      caller\n        /* \"B226328_part2.sol\":2109:2126  roles[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"B226328_part2.sol\":2109:2134  roles[msg.sender] == true */\n      iszero\n      iszero\n      eq\n        /* \"B226328_part2.sol\":2101:2173  require(roles[msg.sender] == true, \"Only the owner can mint new tokens\") */\n      tag_74\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_75\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_74:\n        /* \"B226328_part2.sol\":2198:2220  totalsupply.add(value) */\n      tag_77\n        /* \"B226328_part2.sol\":2214:2219  value */\n      dup3\n        /* \"B226328_part2.sol\":2198:2209  totalsupply */\n      sload(0x04)\n        /* \"B226328_part2.sol\":2198:2213  totalsupply.add */\n      tag_78\n      swap1\n        /* \"B226328_part2.sol\":2198:2220  totalsupply.add(value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_77:\n        /* \"B226328_part2.sol\":2184:2195  totalsupply */\n      0x04\n        /* \"B226328_part2.sol\":2184:2220  totalsupply = totalsupply.add(value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"B226328_part2.sol\":2247:2274  (balances[ to ]).add(value) */\n      tag_79\n        /* \"B226328_part2.sol\":2268:2273  value */\n      dup3\n        /* \"B226328_part2.sol\":2248:2256  balances */\n      0x05\n        /* \"B226328_part2.sol\":2248:2262  balances[ to ] */\n      0x00\n        /* \"B226328_part2.sol\":2258:2260  to */\n      dup7\n        /* \"B226328_part2.sol\":2248:2262  balances[ to ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"B226328_part2.sol\":2247:2267  (balances[ to ]).add */\n      tag_78\n      swap1\n        /* \"B226328_part2.sol\":2247:2274  (balances[ to ]).add(value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_79:\n        /* \"B226328_part2.sol\":2231:2239  balances */\n      0x05\n        /* \"B226328_part2.sol\":2231:2243  balances[to] */\n      0x00\n        /* \"B226328_part2.sol\":2240:2242  to */\n      dup6\n        /* \"B226328_part2.sol\":2231:2243  balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"B226328_part2.sol\":2231:2274  balances[to] =  (balances[ to ]).add(value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"B226328_part2.sol\":2297:2299  to */\n      dup3\n        /* \"B226328_part2.sol\":2290:2308  Mint ( to , value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885\n        /* \"B226328_part2.sol\":2302:2307  value */\n      dup4\n        /* \"B226328_part2.sol\":2290:2308  Mint ( to , value) */\n      mload(0x40)\n      tag_80\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"B226328_part2.sol\":2327:2331  true */\n      0x01\n        /* \"B226328_part2.sol\":2320:2331  return true */\n      swap1\n      pop\n        /* \"B226328_part2.sol\":2020:2339  function  mint (address to, uint256 value) public returns (bool)\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"B226328_part2.sol\":3548:3814  function close() public {\r... */\n    tag_38:\n        /* \"B226328_part2.sol\":3660:3664  true */\n      0x01\n        /* \"B226328_part2.sol\":3639:3664  roles[msg.sender] == true */\n      iszero\n      iszero\n        /* \"B226328_part2.sol\":3639:3644  roles */\n      0x06\n        /* \"B226328_part2.sol\":3639:3656  roles[msg.sender] */\n      0x00\n        /* \"B226328_part2.sol\":3645:3655  msg.sender */\n      caller\n        /* \"B226328_part2.sol\":3639:3656  roles[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"B226328_part2.sol\":3639:3664  roles[msg.sender] == true */\n      iszero\n      iszero\n      eq\n        /* \"B226328_part2.sol\":3631:3708  require(roles[msg.sender] == true, \"Only the owner can destroy the contract\") */\n      tag_82\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_83\n      swap1\n      tag_84\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_82:\n        /* \"B226328_part2.sol\":3800:3805  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"B226328_part2.sol\":3787:3806  selfdestruct(owner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      selfdestruct\n        /* \"B226328_part2.sol\":2408:2524  function balanceOf(address _account) public view returns (uint256)\r... */\n    tag_43:\n        /* \"B226328_part2.sol\":2466:2473  uint256 */\n      0x00\n        /* \"B226328_part2.sol\":2498:2506  balances */\n      0x05\n        /* \"B226328_part2.sol\":2498:2516  balances[_account] */\n      0x00\n        /* \"B226328_part2.sol\":2507:2515  _account */\n      dup4\n        /* \"B226328_part2.sol\":2498:2516  balances[_account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"B226328_part2.sol\":2491:2516  return balances[_account] */\n      swap1\n      pop\n        /* \"B226328_part2.sol\":2408:2524  function balanceOf(address _account) public view returns (uint256)\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"B226328_part2.sol\":1415:1504  function getPrice() public view returns ( uint256 )\r... */\n    tag_47:\n        /* \"B226328_part2.sol\":1457:1464  uint256 */\n      0x00\n        /* \"B226328_part2.sol\":1490:1495  price */\n      sload(0x03)\n        /* \"B226328_part2.sol\":1483:1495  return price */\n      swap1\n      pop\n        /* \"B226328_part2.sol\":1415:1504  function getPrice() public view returns ( uint256 )\r... */\n      swap1\n      jump\t// out\n        /* \"B226328_part2.sol\":1512:2008  function transfer(address to, uint256 value) public returns (bool) {\r... */\n    tag_52:\n        /* \"B226328_part2.sol\":1573:1577  bool */\n      0x00\n        /* \"B226328_part2.sol\":1682:1683  0 */\n      dup1\n        /* \"B226328_part2.sol\":1647:1678  balances[msg.sender].sub(value) */\n      tag_88\n        /* \"B226328_part2.sol\":1672:1677  value */\n      dup4\n        /* \"B226328_part2.sol\":1647:1655  balances */\n      0x05\n        /* \"B226328_part2.sol\":1647:1667  balances[msg.sender] */\n      0x00\n        /* \"B226328_part2.sol\":1656:1666  msg.sender */\n      caller\n        /* \"B226328_part2.sol\":1647:1667  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"B226328_part2.sol\":1647:1671  balances[msg.sender].sub */\n      tag_89\n      swap1\n        /* \"B226328_part2.sol\":1647:1678  balances[msg.sender].sub(value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_88:\n        /* \"B226328_part2.sol\":1647:1683  balances[msg.sender].sub(value) >= 0 */\n      lt\n      iszero\n        /* \"B226328_part2.sol\":1639:1722  require(balances[msg.sender].sub(value) >= 0, \"You do not have sufficient balance\") */\n      tag_90\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_91\n      swap1\n      tag_92\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_90:\n        /* \"B226328_part2.sol\":1806:1837  balances[msg.sender].sub(value) */\n      tag_93\n        /* \"B226328_part2.sol\":1831:1836  value */\n      dup3\n        /* \"B226328_part2.sol\":1806:1814  balances */\n      0x05\n        /* \"B226328_part2.sol\":1806:1826  balances[msg.sender] */\n      0x00\n        /* \"B226328_part2.sol\":1815:1825  msg.sender */\n      caller\n        /* \"B226328_part2.sol\":1806:1826  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"B226328_part2.sol\":1806:1830  balances[msg.sender].sub */\n      tag_89\n      swap1\n        /* \"B226328_part2.sol\":1806:1837  balances[msg.sender].sub(value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_93:\n        /* \"B226328_part2.sol\":1783:1791  balances */\n      0x05\n        /* \"B226328_part2.sol\":1783:1803  balances[msg.sender] */\n      0x00\n        /* \"B226328_part2.sol\":1792:1802  msg.sender */\n      caller\n        /* \"B226328_part2.sol\":1783:1803  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"B226328_part2.sol\":1783:1837  balances[msg.sender] = balances[msg.sender].sub(value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"B226328_part2.sol\":1863:1886  balances[to].add(value) */\n      tag_94\n        /* \"B226328_part2.sol\":1880:1885  value */\n      dup3\n        /* \"B226328_part2.sol\":1863:1871  balances */\n      0x05\n        /* \"B226328_part2.sol\":1863:1875  balances[to] */\n      0x00\n        /* \"B226328_part2.sol\":1872:1874  to */\n      dup7\n        /* \"B226328_part2.sol\":1863:1875  balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"B226328_part2.sol\":1863:1879  balances[to].add */\n      tag_78\n      swap1\n        /* \"B226328_part2.sol\":1863:1886  balances[to].add(value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_94:\n        /* \"B226328_part2.sol\":1848:1856  balances */\n      0x05\n        /* \"B226328_part2.sol\":1848:1860  balances[to] */\n      0x00\n        /* \"B226328_part2.sol\":1857:1859  to */\n      dup6\n        /* \"B226328_part2.sol\":1848:1860  balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"B226328_part2.sol\":1848:1886  balances[to] = balances[to].add(value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"B226328_part2.sol\":1967:1969  to */\n      dup3\n        /* \"B226328_part2.sol\":1946:1977  Transfer(msg.sender, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"B226328_part2.sol\":1955:1965  msg.sender */\n      caller\n        /* \"B226328_part2.sol\":1946:1977  Transfer(msg.sender, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"B226328_part2.sol\":1971:1976  value */\n      dup5\n        /* \"B226328_part2.sol\":1946:1977  Transfer(msg.sender, to, value) */\n      mload(0x40)\n      tag_95\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"B226328_part2.sol\":1995:1999  true */\n      0x01\n        /* \"B226328_part2.sol\":1988:1999  return true */\n      swap1\n      pop\n        /* \"B226328_part2.sol\":1512:2008  function transfer(address to, uint256 value) public returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"B226328_part2.sol\":2530:3540  function sell(uint256 value) public payable returns (bool)\r... */\n    tag_57:\n        /* \"B226328_part2.sol\":2583:2587  bool */\n      0x00\n        /* \"B226328_part2.sol\":2646:2647  0 */\n      dup1\n        /* \"B226328_part2.sol\":2613:2644  balances[msg.sender].sub(value) */\n      tag_97\n        /* \"B226328_part2.sol\":2638:2643  value */\n      dup4\n        /* \"B226328_part2.sol\":2613:2621  balances */\n      0x05\n        /* \"B226328_part2.sol\":2613:2633  balances[msg.sender] */\n      0x00\n        /* \"B226328_part2.sol\":2622:2632  msg.sender */\n      caller\n        /* \"B226328_part2.sol\":2613:2633  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"B226328_part2.sol\":2613:2637  balances[msg.sender].sub */\n      tag_89\n      swap1\n        /* \"B226328_part2.sol\":2613:2644  balances[msg.sender].sub(value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_97:\n        /* \"B226328_part2.sol\":2613:2647  balances[msg.sender].sub(value)>=0 */\n      lt\n      iszero\n        /* \"B226328_part2.sol\":2605:2672  require(balances[msg.sender].sub(value)>=0, \"Insufficient balance\") */\n      tag_98\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_99\n      swap1\n      tag_100\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_98:\n        /* \"B226328_part2.sol\":2753:2770  uint256 weiAmount */\n      0x00\n        /* \"B226328_part2.sol\":2781:2784  600 */\n      0x0258\n        /* \"B226328_part2.sol\":2773:2778  value */\n      dup4\n        /* \"B226328_part2.sol\":2773:2784  value * 600 */\n      tag_101\n      swap2\n      swap1\n      tag_102\n      jump\t// in\n    tag_101:\n        /* \"B226328_part2.sol\":2753:2784  uint256 weiAmount = value * 600 */\n      swap1\n      pop\n        /* \"B226328_part2.sol\":3072:3073  0 */\n      0x00\n        /* \"B226328_part2.sol\":3034:3070  address(this).balance.sub(weiAmount) */\n      tag_103\n        /* \"B226328_part2.sol\":3060:3069  weiAmount */\n      dup3\n        /* \"B226328_part2.sol\":3034:3055  address(this).balance */\n      selfbalance\n        /* \"B226328_part2.sol\":3034:3059  address(this).balance.sub */\n      tag_89\n      swap1\n        /* \"B226328_part2.sol\":3034:3070  address(this).balance.sub(weiAmount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_103:\n        /* \"B226328_part2.sol\":3034:3073  address(this).balance.sub(weiAmount)>=0 */\n      lt\n      iszero\n        /* \"B226328_part2.sol\":3026:3110  require(address(this).balance.sub(weiAmount)>=0, \"Contract balance is insufficient\") */\n      tag_104\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_105\n      swap1\n      tag_106\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_104:\n        /* \"B226328_part2.sol\":3123:3132  bool succ */\n      0x00\n        /* \"B226328_part2.sol\":3135:3144  customLib */\n      linkerSymbol(\"97e65d3ecb950a85cbb8a7b3a778484171d931f41ffa125c13e0cd3fea5f016e\")\n        /* \"B226328_part2.sol\":3135:3155  customLib.customSend */\n      0xc0ba8f42\n        /* \"B226328_part2.sol\":3156:3165  weiAmount */\n      dup4\n        /* \"B226328_part2.sol\":3167:3177  msg.sender */\n      caller\n        /* \"B226328_part2.sol\":3135:3178  customLib.customSend(weiAmount, msg.sender) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_107\n      swap3\n      swap2\n      swap1\n      tag_108\n      jump\t// in\n    tag_107:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_109\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_109:\n      pop\n      gas\n      delegatecall\n      iszero\n      dup1\n      iszero\n      tag_111\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_111:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_112\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_112:\n        /* \"B226328_part2.sol\":3123:3178  bool succ = customLib.customSend(weiAmount, msg.sender) */\n      swap1\n      pop\n        /* \"B226328_part2.sol\":3197:3201  succ */\n      dup1\n        /* \"B226328_part2.sol\":3189:3222  require(succ,\"Unsuccessful Send\") */\n      tag_114\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_115\n      swap1\n      tag_116\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_114:\n        /* \"B226328_part2.sol\":3256:3287  balances[msg.sender].sub(value) */\n      tag_117\n        /* \"B226328_part2.sol\":3281:3286  value */\n      dup5\n        /* \"B226328_part2.sol\":3256:3264  balances */\n      0x05\n        /* \"B226328_part2.sol\":3256:3276  balances[msg.sender] */\n      0x00\n        /* \"B226328_part2.sol\":3265:3275  msg.sender */\n      caller\n        /* \"B226328_part2.sol\":3256:3276  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"B226328_part2.sol\":3256:3280  balances[msg.sender].sub */\n      tag_89\n      swap1\n        /* \"B226328_part2.sol\":3256:3287  balances[msg.sender].sub(value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_117:\n        /* \"B226328_part2.sol\":3233:3241  balances */\n      0x05\n        /* \"B226328_part2.sol\":3233:3253  balances[msg.sender] */\n      0x00\n        /* \"B226328_part2.sol\":3242:3252  msg.sender */\n      caller\n        /* \"B226328_part2.sol\":3233:3253  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"B226328_part2.sol\":3233:3287  balances[msg.sender] = balances[msg.sender].sub(value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"B226328_part2.sol\":3360:3382  totalsupply.sub(value) */\n      tag_118\n        /* \"B226328_part2.sol\":3376:3381  value */\n      dup5\n        /* \"B226328_part2.sol\":3360:3371  totalsupply */\n      sload(0x04)\n        /* \"B226328_part2.sol\":3360:3375  totalsupply.sub */\n      tag_89\n      swap1\n        /* \"B226328_part2.sol\":3360:3382  totalsupply.sub(value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_118:\n        /* \"B226328_part2.sol\":3346:3357  totalsupply */\n      0x04\n        /* \"B226328_part2.sol\":3346:3382  totalsupply = totalsupply.sub(value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"B226328_part2.sol\":3463:3473  msg.sender */\n      caller\n        /* \"B226328_part2.sol\":3458:3481  Sell(msg.sender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x5e5e995ce3133561afceaa51a9a154d5db228cd7525d34df5185582c18d3df09\n        /* \"B226328_part2.sol\":3475:3480  value */\n      dup6\n        /* \"B226328_part2.sol\":3458:3481  Sell(msg.sender, value) */\n      mload(0x40)\n      tag_119\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"B226328_part2.sol\":3528:3532  true */\n      0x01\n        /* \"B226328_part2.sol\":3521:3532  return true */\n      swap3\n      pop\n      pop\n      pop\n        /* \"B226328_part2.sol\":2530:3540  function sell(uint256 value) public payable returns (bool)\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_78:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2813:2820  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2843:2844  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2840  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_121\n      swap2\n      swap1\n      tag_122\n      jump\t// in\n    tag_121:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2832:2844  return a + b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_89:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3180:3187  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3210:3211  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3207  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3211  a - b */\n      tag_124\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_124:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3199:3211  return a - b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_127:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_129\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_130\n      jump\t// in\n    tag_129:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:289   */\n    tag_131:\n        /* \"#utility.yul\":206:211   */\n      0x00\n        /* \"#utility.yul\":237:243   */\n      dup2\n        /* \"#utility.yul\":231:244   */\n      mload\n        /* \"#utility.yul\":222:244   */\n      swap1\n      pop\n        /* \"#utility.yul\":253:283   */\n      tag_133\n        /* \"#utility.yul\":277:282   */\n      dup2\n        /* \"#utility.yul\":253:283   */\n      tag_134\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":152:289   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":295:434   */\n    tag_135:\n        /* \"#utility.yul\":341:346   */\n      0x00\n        /* \"#utility.yul\":379:385   */\n      dup2\n        /* \"#utility.yul\":366:386   */\n      calldataload\n        /* \"#utility.yul\":357:386   */\n      swap1\n      pop\n        /* \"#utility.yul\":395:428   */\n      tag_137\n        /* \"#utility.yul\":422:427   */\n      dup2\n        /* \"#utility.yul\":395:428   */\n      tag_138\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":295:434   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":440:769   */\n    tag_42:\n        /* \"#utility.yul\":499:505   */\n      0x00\n        /* \"#utility.yul\":548:550   */\n      0x20\n        /* \"#utility.yul\":536:545   */\n      dup3\n        /* \"#utility.yul\":527:534   */\n      dup5\n        /* \"#utility.yul\":523:546   */\n      sub\n        /* \"#utility.yul\":519:551   */\n      slt\n        /* \"#utility.yul\":516:635   */\n      iszero\n      tag_140\n      jumpi\n        /* \"#utility.yul\":554:633   */\n      tag_141\n      tag_142\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":516:635   */\n    tag_140:\n        /* \"#utility.yul\":674:675   */\n      0x00\n        /* \"#utility.yul\":699:752   */\n      tag_143\n        /* \"#utility.yul\":744:751   */\n      dup5\n        /* \"#utility.yul\":735:741   */\n      dup3\n        /* \"#utility.yul\":724:733   */\n      dup6\n        /* \"#utility.yul\":720:742   */\n      add\n        /* \"#utility.yul\":699:752   */\n      tag_127\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":689:752   */\n      swap2\n      pop\n        /* \"#utility.yul\":645:762   */\n      pop\n        /* \"#utility.yul\":440:769   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":775:1249   */\n    tag_32:\n        /* \"#utility.yul\":843:849   */\n      0x00\n        /* \"#utility.yul\":851:857   */\n      dup1\n        /* \"#utility.yul\":900:902   */\n      0x40\n        /* \"#utility.yul\":888:897   */\n      dup4\n        /* \"#utility.yul\":879:886   */\n      dup6\n        /* \"#utility.yul\":875:898   */\n      sub\n        /* \"#utility.yul\":871:903   */\n      slt\n        /* \"#utility.yul\":868:987   */\n      iszero\n      tag_145\n      jumpi\n        /* \"#utility.yul\":906:985   */\n      tag_146\n      tag_142\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":868:987   */\n    tag_145:\n        /* \"#utility.yul\":1026:1027   */\n      0x00\n        /* \"#utility.yul\":1051:1104   */\n      tag_147\n        /* \"#utility.yul\":1096:1103   */\n      dup6\n        /* \"#utility.yul\":1087:1093   */\n      dup3\n        /* \"#utility.yul\":1076:1085   */\n      dup7\n        /* \"#utility.yul\":1072:1094   */\n      add\n        /* \"#utility.yul\":1051:1104   */\n      tag_127\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":1041:1104   */\n      swap3\n      pop\n        /* \"#utility.yul\":997:1114   */\n      pop\n        /* \"#utility.yul\":1153:1155   */\n      0x20\n        /* \"#utility.yul\":1179:1232   */\n      tag_148\n        /* \"#utility.yul\":1224:1231   */\n      dup6\n        /* \"#utility.yul\":1215:1221   */\n      dup3\n        /* \"#utility.yul\":1204:1213   */\n      dup7\n        /* \"#utility.yul\":1200:1222   */\n      add\n        /* \"#utility.yul\":1179:1232   */\n      tag_135\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":1169:1232   */\n      swap2\n      pop\n        /* \"#utility.yul\":1124:1242   */\n      pop\n        /* \"#utility.yul\":775:1249   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1255:1600   */\n    tag_113:\n        /* \"#utility.yul\":1322:1328   */\n      0x00\n        /* \"#utility.yul\":1371:1373   */\n      0x20\n        /* \"#utility.yul\":1359:1368   */\n      dup3\n        /* \"#utility.yul\":1350:1357   */\n      dup5\n        /* \"#utility.yul\":1346:1369   */\n      sub\n        /* \"#utility.yul\":1342:1374   */\n      slt\n        /* \"#utility.yul\":1339:1458   */\n      iszero\n      tag_150\n      jumpi\n        /* \"#utility.yul\":1377:1456   */\n      tag_151\n      tag_142\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":1339:1458   */\n    tag_150:\n        /* \"#utility.yul\":1497:1498   */\n      0x00\n        /* \"#utility.yul\":1522:1583   */\n      tag_152\n        /* \"#utility.yul\":1575:1582   */\n      dup5\n        /* \"#utility.yul\":1566:1572   */\n      dup3\n        /* \"#utility.yul\":1555:1564   */\n      dup6\n        /* \"#utility.yul\":1551:1573   */\n      add\n        /* \"#utility.yul\":1522:1583   */\n      tag_131\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":1512:1583   */\n      swap2\n      pop\n        /* \"#utility.yul\":1468:1593   */\n      pop\n        /* \"#utility.yul\":1255:1600   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1606:1935   */\n    tag_56:\n        /* \"#utility.yul\":1665:1671   */\n      0x00\n        /* \"#utility.yul\":1714:1716   */\n      0x20\n        /* \"#utility.yul\":1702:1711   */\n      dup3\n        /* \"#utility.yul\":1693:1700   */\n      dup5\n        /* \"#utility.yul\":1689:1712   */\n      sub\n        /* \"#utility.yul\":1685:1717   */\n      slt\n        /* \"#utility.yul\":1682:1801   */\n      iszero\n      tag_154\n      jumpi\n        /* \"#utility.yul\":1720:1799   */\n      tag_155\n      tag_142\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":1682:1801   */\n    tag_154:\n        /* \"#utility.yul\":1840:1841   */\n      0x00\n        /* \"#utility.yul\":1865:1918   */\n      tag_156\n        /* \"#utility.yul\":1910:1917   */\n      dup5\n        /* \"#utility.yul\":1901:1907   */\n      dup3\n        /* \"#utility.yul\":1890:1899   */\n      dup6\n        /* \"#utility.yul\":1886:1908   */\n      add\n        /* \"#utility.yul\":1865:1918   */\n      tag_135\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":1855:1918   */\n      swap2\n      pop\n        /* \"#utility.yul\":1811:1928   */\n      pop\n        /* \"#utility.yul\":1606:1935   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1941:2067   */\n    tag_157:\n        /* \"#utility.yul\":2036:2060   */\n      tag_159\n        /* \"#utility.yul\":2054:2059   */\n      dup2\n        /* \"#utility.yul\":2036:2060   */\n      tag_160\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":2031:2034   */\n      dup3\n        /* \"#utility.yul\":2024:2061   */\n      mstore\n        /* \"#utility.yul\":1941:2067   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2073:2182   */\n    tag_161:\n        /* \"#utility.yul\":2154:2175   */\n      tag_163\n        /* \"#utility.yul\":2169:2174   */\n      dup2\n        /* \"#utility.yul\":2154:2175   */\n      tag_164\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":2149:2152   */\n      dup3\n        /* \"#utility.yul\":2142:2176   */\n      mstore\n        /* \"#utility.yul\":2073:2182   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2188:2552   */\n    tag_165:\n        /* \"#utility.yul\":2276:2279   */\n      0x00\n        /* \"#utility.yul\":2304:2343   */\n      tag_167\n        /* \"#utility.yul\":2337:2342   */\n      dup3\n        /* \"#utility.yul\":2304:2343   */\n      tag_168\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":2359:2430   */\n      tag_169\n        /* \"#utility.yul\":2423:2429   */\n      dup2\n        /* \"#utility.yul\":2418:2421   */\n      dup6\n        /* \"#utility.yul\":2359:2430   */\n      tag_170\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":2352:2430   */\n      swap4\n      pop\n        /* \"#utility.yul\":2439:2491   */\n      tag_171\n        /* \"#utility.yul\":2484:2490   */\n      dup2\n        /* \"#utility.yul\":2479:2482   */\n      dup6\n        /* \"#utility.yul\":2472:2476   */\n      0x20\n        /* \"#utility.yul\":2465:2470   */\n      dup7\n        /* \"#utility.yul\":2461:2477   */\n      add\n        /* \"#utility.yul\":2439:2491   */\n      tag_172\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":2516:2545   */\n      tag_173\n        /* \"#utility.yul\":2538:2544   */\n      dup2\n        /* \"#utility.yul\":2516:2545   */\n      tag_174\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":2511:2514   */\n      dup5\n        /* \"#utility.yul\":2507:2546   */\n      add\n        /* \"#utility.yul\":2500:2546   */\n      swap2\n      pop\n        /* \"#utility.yul\":2280:2552   */\n      pop\n        /* \"#utility.yul\":2188:2552   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2558:2924   */\n    tag_175:\n        /* \"#utility.yul\":2700:2703   */\n      0x00\n        /* \"#utility.yul\":2721:2788   */\n      tag_177\n        /* \"#utility.yul\":2785:2787   */\n      0x22\n        /* \"#utility.yul\":2780:2783   */\n      dup4\n        /* \"#utility.yul\":2721:2788   */\n      tag_170\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":2714:2788   */\n      swap2\n      pop\n        /* \"#utility.yul\":2797:2890   */\n      tag_178\n        /* \"#utility.yul\":2886:2889   */\n      dup3\n        /* \"#utility.yul\":2797:2890   */\n      tag_179\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":2915:2917   */\n      0x40\n        /* \"#utility.yul\":2910:2913   */\n      dup3\n        /* \"#utility.yul\":2906:2918   */\n      add\n        /* \"#utility.yul\":2899:2918   */\n      swap1\n      pop\n        /* \"#utility.yul\":2558:2924   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2930:3296   */\n    tag_180:\n        /* \"#utility.yul\":3072:3075   */\n      0x00\n        /* \"#utility.yul\":3093:3160   */\n      tag_182\n        /* \"#utility.yul\":3157:3159   */\n      0x14\n        /* \"#utility.yul\":3152:3155   */\n      dup4\n        /* \"#utility.yul\":3093:3160   */\n      tag_170\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":3086:3160   */\n      swap2\n      pop\n        /* \"#utility.yul\":3169:3262   */\n      tag_183\n        /* \"#utility.yul\":3258:3261   */\n      dup3\n        /* \"#utility.yul\":3169:3262   */\n      tag_184\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":3287:3289   */\n      0x20\n        /* \"#utility.yul\":3282:3285   */\n      dup3\n        /* \"#utility.yul\":3278:3290   */\n      add\n        /* \"#utility.yul\":3271:3290   */\n      swap1\n      pop\n        /* \"#utility.yul\":2930:3296   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3302:3668   */\n    tag_185:\n        /* \"#utility.yul\":3444:3447   */\n      0x00\n        /* \"#utility.yul\":3465:3532   */\n      tag_187\n        /* \"#utility.yul\":3529:3531   */\n      0x20\n        /* \"#utility.yul\":3524:3527   */\n      dup4\n        /* \"#utility.yul\":3465:3532   */\n      tag_170\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":3458:3532   */\n      swap2\n      pop\n        /* \"#utility.yul\":3541:3634   */\n      tag_188\n        /* \"#utility.yul\":3630:3633   */\n      dup3\n        /* \"#utility.yul\":3541:3634   */\n      tag_189\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":3659:3661   */\n      0x20\n        /* \"#utility.yul\":3654:3657   */\n      dup3\n        /* \"#utility.yul\":3650:3662   */\n      add\n        /* \"#utility.yul\":3643:3662   */\n      swap1\n      pop\n        /* \"#utility.yul\":3302:3668   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3674:4040   */\n    tag_190:\n        /* \"#utility.yul\":3816:3819   */\n      0x00\n        /* \"#utility.yul\":3837:3904   */\n      tag_192\n        /* \"#utility.yul\":3901:3903   */\n      0x11\n        /* \"#utility.yul\":3896:3899   */\n      dup4\n        /* \"#utility.yul\":3837:3904   */\n      tag_170\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":3830:3904   */\n      swap2\n      pop\n        /* \"#utility.yul\":3913:4006   */\n      tag_193\n        /* \"#utility.yul\":4002:4005   */\n      dup3\n        /* \"#utility.yul\":3913:4006   */\n      tag_194\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":4031:4033   */\n      0x20\n        /* \"#utility.yul\":4026:4029   */\n      dup3\n        /* \"#utility.yul\":4022:4034   */\n      add\n        /* \"#utility.yul\":4015:4034   */\n      swap1\n      pop\n        /* \"#utility.yul\":3674:4040   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4046:4412   */\n    tag_195:\n        /* \"#utility.yul\":4188:4191   */\n      0x00\n        /* \"#utility.yul\":4209:4276   */\n      tag_197\n        /* \"#utility.yul\":4273:4275   */\n      0x27\n        /* \"#utility.yul\":4268:4271   */\n      dup4\n        /* \"#utility.yul\":4209:4276   */\n      tag_170\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":4202:4276   */\n      swap2\n      pop\n        /* \"#utility.yul\":4285:4378   */\n      tag_198\n        /* \"#utility.yul\":4374:4377   */\n      dup3\n        /* \"#utility.yul\":4285:4378   */\n      tag_199\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":4403:4405   */\n      0x40\n        /* \"#utility.yul\":4398:4401   */\n      dup3\n        /* \"#utility.yul\":4394:4406   */\n      add\n        /* \"#utility.yul\":4387:4406   */\n      swap1\n      pop\n        /* \"#utility.yul\":4046:4412   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4418:4784   */\n    tag_200:\n        /* \"#utility.yul\":4560:4563   */\n      0x00\n        /* \"#utility.yul\":4581:4648   */\n      tag_202\n        /* \"#utility.yul\":4645:4647   */\n      0x22\n        /* \"#utility.yul\":4640:4643   */\n      dup4\n        /* \"#utility.yul\":4581:4648   */\n      tag_170\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":4574:4648   */\n      swap2\n      pop\n        /* \"#utility.yul\":4657:4750   */\n      tag_203\n        /* \"#utility.yul\":4746:4749   */\n      dup3\n        /* \"#utility.yul\":4657:4750   */\n      tag_204\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":4775:4777   */\n      0x40\n        /* \"#utility.yul\":4770:4773   */\n      dup3\n        /* \"#utility.yul\":4766:4778   */\n      add\n        /* \"#utility.yul\":4759:4778   */\n      swap1\n      pop\n        /* \"#utility.yul\":4418:4784   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4790:4908   */\n    tag_205:\n        /* \"#utility.yul\":4877:4901   */\n      tag_207\n        /* \"#utility.yul\":4895:4900   */\n      dup2\n        /* \"#utility.yul\":4877:4901   */\n      tag_208\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":4872:4875   */\n      dup3\n        /* \"#utility.yul\":4865:4902   */\n      mstore\n        /* \"#utility.yul\":4790:4908   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4914:5040   */\n    tag_209:\n        /* \"#utility.yul\":5009:5033   */\n      tag_211\n        /* \"#utility.yul\":5027:5032   */\n      dup2\n        /* \"#utility.yul\":5009:5033   */\n      tag_208\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":5004:5007   */\n      dup3\n        /* \"#utility.yul\":4997:5034   */\n      mstore\n        /* \"#utility.yul\":4914:5040   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5046:5256   */\n    tag_35:\n        /* \"#utility.yul\":5133:5137   */\n      0x00\n        /* \"#utility.yul\":5171:5173   */\n      0x20\n        /* \"#utility.yul\":5160:5169   */\n      dup3\n        /* \"#utility.yul\":5156:5174   */\n      add\n        /* \"#utility.yul\":5148:5174   */\n      swap1\n      pop\n        /* \"#utility.yul\":5184:5249   */\n      tag_213\n        /* \"#utility.yul\":5246:5247   */\n      0x00\n        /* \"#utility.yul\":5235:5244   */\n      dup4\n        /* \"#utility.yul\":5231:5248   */\n      add\n        /* \"#utility.yul\":5222:5228   */\n      dup5\n        /* \"#utility.yul\":5184:5249   */\n      tag_161\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":5046:5256   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5262:5575   */\n    tag_19:\n        /* \"#utility.yul\":5375:5379   */\n      0x00\n        /* \"#utility.yul\":5413:5415   */\n      0x20\n        /* \"#utility.yul\":5402:5411   */\n      dup3\n        /* \"#utility.yul\":5398:5416   */\n      add\n        /* \"#utility.yul\":5390:5416   */\n      swap1\n      pop\n        /* \"#utility.yul\":5462:5471   */\n      dup2\n        /* \"#utility.yul\":5456:5460   */\n      dup2\n        /* \"#utility.yul\":5452:5472   */\n      sub\n        /* \"#utility.yul\":5448:5449   */\n      0x00\n        /* \"#utility.yul\":5437:5446   */\n      dup4\n        /* \"#utility.yul\":5433:5450   */\n      add\n        /* \"#utility.yul\":5426:5473   */\n      mstore\n        /* \"#utility.yul\":5490:5568   */\n      tag_215\n        /* \"#utility.yul\":5563:5567   */\n      dup2\n        /* \"#utility.yul\":5554:5560   */\n      dup5\n        /* \"#utility.yul\":5490:5568   */\n      tag_165\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":5482:5568   */\n      swap1\n      pop\n        /* \"#utility.yul\":5262:5575   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5581:6000   */\n    tag_92:\n        /* \"#utility.yul\":5747:5751   */\n      0x00\n        /* \"#utility.yul\":5785:5787   */\n      0x20\n        /* \"#utility.yul\":5774:5783   */\n      dup3\n        /* \"#utility.yul\":5770:5788   */\n      add\n        /* \"#utility.yul\":5762:5788   */\n      swap1\n      pop\n        /* \"#utility.yul\":5834:5843   */\n      dup2\n        /* \"#utility.yul\":5828:5832   */\n      dup2\n        /* \"#utility.yul\":5824:5844   */\n      sub\n        /* \"#utility.yul\":5820:5821   */\n      0x00\n        /* \"#utility.yul\":5809:5818   */\n      dup4\n        /* \"#utility.yul\":5805:5822   */\n      add\n        /* \"#utility.yul\":5798:5845   */\n      mstore\n        /* \"#utility.yul\":5862:5993   */\n      tag_217\n        /* \"#utility.yul\":5988:5992   */\n      dup2\n        /* \"#utility.yul\":5862:5993   */\n      tag_175\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":5854:5993   */\n      swap1\n      pop\n        /* \"#utility.yul\":5581:6000   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6006:6425   */\n    tag_100:\n        /* \"#utility.yul\":6172:6176   */\n      0x00\n        /* \"#utility.yul\":6210:6212   */\n      0x20\n        /* \"#utility.yul\":6199:6208   */\n      dup3\n        /* \"#utility.yul\":6195:6213   */\n      add\n        /* \"#utility.yul\":6187:6213   */\n      swap1\n      pop\n        /* \"#utility.yul\":6259:6268   */\n      dup2\n        /* \"#utility.yul\":6253:6257   */\n      dup2\n        /* \"#utility.yul\":6249:6269   */\n      sub\n        /* \"#utility.yul\":6245:6246   */\n      0x00\n        /* \"#utility.yul\":6234:6243   */\n      dup4\n        /* \"#utility.yul\":6230:6247   */\n      add\n        /* \"#utility.yul\":6223:6270   */\n      mstore\n        /* \"#utility.yul\":6287:6418   */\n      tag_219\n        /* \"#utility.yul\":6413:6417   */\n      dup2\n        /* \"#utility.yul\":6287:6418   */\n      tag_180\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":6279:6418   */\n      swap1\n      pop\n        /* \"#utility.yul\":6006:6425   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6431:6850   */\n    tag_106:\n        /* \"#utility.yul\":6597:6601   */\n      0x00\n        /* \"#utility.yul\":6635:6637   */\n      0x20\n        /* \"#utility.yul\":6624:6633   */\n      dup3\n        /* \"#utility.yul\":6620:6638   */\n      add\n        /* \"#utility.yul\":6612:6638   */\n      swap1\n      pop\n        /* \"#utility.yul\":6684:6693   */\n      dup2\n        /* \"#utility.yul\":6678:6682   */\n      dup2\n        /* \"#utility.yul\":6674:6694   */\n      sub\n        /* \"#utility.yul\":6670:6671   */\n      0x00\n        /* \"#utility.yul\":6659:6668   */\n      dup4\n        /* \"#utility.yul\":6655:6672   */\n      add\n        /* \"#utility.yul\":6648:6695   */\n      mstore\n        /* \"#utility.yul\":6712:6843   */\n      tag_221\n        /* \"#utility.yul\":6838:6842   */\n      dup2\n        /* \"#utility.yul\":6712:6843   */\n      tag_185\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":6704:6843   */\n      swap1\n      pop\n        /* \"#utility.yul\":6431:6850   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6856:7275   */\n    tag_116:\n        /* \"#utility.yul\":7022:7026   */\n      0x00\n        /* \"#utility.yul\":7060:7062   */\n      0x20\n        /* \"#utility.yul\":7049:7058   */\n      dup3\n        /* \"#utility.yul\":7045:7063   */\n      add\n        /* \"#utility.yul\":7037:7063   */\n      swap1\n      pop\n        /* \"#utility.yul\":7109:7118   */\n      dup2\n        /* \"#utility.yul\":7103:7107   */\n      dup2\n        /* \"#utility.yul\":7099:7119   */\n      sub\n        /* \"#utility.yul\":7095:7096   */\n      0x00\n        /* \"#utility.yul\":7084:7093   */\n      dup4\n        /* \"#utility.yul\":7080:7097   */\n      add\n        /* \"#utility.yul\":7073:7120   */\n      mstore\n        /* \"#utility.yul\":7137:7268   */\n      tag_223\n        /* \"#utility.yul\":7263:7267   */\n      dup2\n        /* \"#utility.yul\":7137:7268   */\n      tag_190\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":7129:7268   */\n      swap1\n      pop\n        /* \"#utility.yul\":6856:7275   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7281:7700   */\n    tag_84:\n        /* \"#utility.yul\":7447:7451   */\n      0x00\n        /* \"#utility.yul\":7485:7487   */\n      0x20\n        /* \"#utility.yul\":7474:7483   */\n      dup3\n        /* \"#utility.yul\":7470:7488   */\n      add\n        /* \"#utility.yul\":7462:7488   */\n      swap1\n      pop\n        /* \"#utility.yul\":7534:7543   */\n      dup2\n        /* \"#utility.yul\":7528:7532   */\n      dup2\n        /* \"#utility.yul\":7524:7544   */\n      sub\n        /* \"#utility.yul\":7520:7521   */\n      0x00\n        /* \"#utility.yul\":7509:7518   */\n      dup4\n        /* \"#utility.yul\":7505:7522   */\n      add\n        /* \"#utility.yul\":7498:7545   */\n      mstore\n        /* \"#utility.yul\":7562:7693   */\n      tag_225\n        /* \"#utility.yul\":7688:7692   */\n      dup2\n        /* \"#utility.yul\":7562:7693   */\n      tag_195\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":7554:7693   */\n      swap1\n      pop\n        /* \"#utility.yul\":7281:7700   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7706:8125   */\n    tag_76:\n        /* \"#utility.yul\":7872:7876   */\n      0x00\n        /* \"#utility.yul\":7910:7912   */\n      0x20\n        /* \"#utility.yul\":7899:7908   */\n      dup3\n        /* \"#utility.yul\":7895:7913   */\n      add\n        /* \"#utility.yul\":7887:7913   */\n      swap1\n      pop\n        /* \"#utility.yul\":7959:7968   */\n      dup2\n        /* \"#utility.yul\":7953:7957   */\n      dup2\n        /* \"#utility.yul\":7949:7969   */\n      sub\n        /* \"#utility.yul\":7945:7946   */\n      0x00\n        /* \"#utility.yul\":7934:7943   */\n      dup4\n        /* \"#utility.yul\":7930:7947   */\n      add\n        /* \"#utility.yul\":7923:7970   */\n      mstore\n        /* \"#utility.yul\":7987:8118   */\n      tag_227\n        /* \"#utility.yul\":8113:8117   */\n      dup2\n        /* \"#utility.yul\":7987:8118   */\n      tag_200\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":7979:8118   */\n      swap1\n      pop\n        /* \"#utility.yul\":7706:8125   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8131:8353   */\n    tag_28:\n        /* \"#utility.yul\":8224:8228   */\n      0x00\n        /* \"#utility.yul\":8262:8264   */\n      0x20\n        /* \"#utility.yul\":8251:8260   */\n      dup3\n        /* \"#utility.yul\":8247:8265   */\n      add\n        /* \"#utility.yul\":8239:8265   */\n      swap1\n      pop\n        /* \"#utility.yul\":8275:8346   */\n      tag_229\n        /* \"#utility.yul\":8343:8344   */\n      0x00\n        /* \"#utility.yul\":8332:8341   */\n      dup4\n        /* \"#utility.yul\":8328:8345   */\n      add\n        /* \"#utility.yul\":8319:8325   */\n      dup5\n        /* \"#utility.yul\":8275:8346   */\n      tag_205\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":8131:8353   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8359:8715   */\n    tag_108:\n        /* \"#utility.yul\":8488:8492   */\n      0x00\n        /* \"#utility.yul\":8526:8528   */\n      0x40\n        /* \"#utility.yul\":8515:8524   */\n      dup3\n        /* \"#utility.yul\":8511:8529   */\n      add\n        /* \"#utility.yul\":8503:8529   */\n      swap1\n      pop\n        /* \"#utility.yul\":8539:8618   */\n      tag_231\n        /* \"#utility.yul\":8615:8616   */\n      0x00\n        /* \"#utility.yul\":8604:8613   */\n      dup4\n        /* \"#utility.yul\":8600:8617   */\n      add\n        /* \"#utility.yul\":8591:8597   */\n      dup6\n        /* \"#utility.yul\":8539:8618   */\n      tag_209\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":8628:8708   */\n      tag_232\n        /* \"#utility.yul\":8704:8706   */\n      0x20\n        /* \"#utility.yul\":8693:8702   */\n      dup4\n        /* \"#utility.yul\":8689:8707   */\n      add\n        /* \"#utility.yul\":8680:8686   */\n      dup5\n        /* \"#utility.yul\":8628:8708   */\n      tag_157\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":8359:8715   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8802:8901   */\n    tag_168:\n        /* \"#utility.yul\":8854:8860   */\n      0x00\n        /* \"#utility.yul\":8888:8893   */\n      dup2\n        /* \"#utility.yul\":8882:8894   */\n      mload\n        /* \"#utility.yul\":8872:8894   */\n      swap1\n      pop\n        /* \"#utility.yul\":8802:8901   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8907:9076   */\n    tag_170:\n        /* \"#utility.yul\":8991:9002   */\n      0x00\n        /* \"#utility.yul\":9025:9031   */\n      dup3\n        /* \"#utility.yul\":9020:9023   */\n      dup3\n        /* \"#utility.yul\":9013:9032   */\n      mstore\n        /* \"#utility.yul\":9065:9069   */\n      0x20\n        /* \"#utility.yul\":9060:9063   */\n      dup3\n        /* \"#utility.yul\":9056:9070   */\n      add\n        /* \"#utility.yul\":9041:9070   */\n      swap1\n      pop\n        /* \"#utility.yul\":8907:9076   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9082:9387   */\n    tag_122:\n        /* \"#utility.yul\":9122:9125   */\n      0x00\n        /* \"#utility.yul\":9141:9161   */\n      tag_238\n        /* \"#utility.yul\":9159:9160   */\n      dup3\n        /* \"#utility.yul\":9141:9161   */\n      tag_208\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":9136:9161   */\n      swap2\n      pop\n        /* \"#utility.yul\":9175:9195   */\n      tag_239\n        /* \"#utility.yul\":9193:9194   */\n      dup4\n        /* \"#utility.yul\":9175:9195   */\n      tag_208\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":9170:9195   */\n      swap3\n      pop\n        /* \"#utility.yul\":9329:9330   */\n      dup3\n        /* \"#utility.yul\":9261:9327   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":9257:9331   */\n      sub\n        /* \"#utility.yul\":9254:9255   */\n      dup3\n        /* \"#utility.yul\":9251:9332   */\n      gt\n        /* \"#utility.yul\":9248:9355   */\n      iszero\n      tag_240\n      jumpi\n        /* \"#utility.yul\":9335:9353   */\n      tag_241\n      tag_242\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":9248:9355   */\n    tag_240:\n        /* \"#utility.yul\":9379:9380   */\n      dup3\n        /* \"#utility.yul\":9376:9377   */\n      dup3\n        /* \"#utility.yul\":9372:9381   */\n      add\n        /* \"#utility.yul\":9365:9381   */\n      swap1\n      pop\n        /* \"#utility.yul\":9082:9387   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9393:9741   */\n    tag_102:\n        /* \"#utility.yul\":9433:9440   */\n      0x00\n        /* \"#utility.yul\":9456:9476   */\n      tag_244\n        /* \"#utility.yul\":9474:9475   */\n      dup3\n        /* \"#utility.yul\":9456:9476   */\n      tag_208\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":9451:9476   */\n      swap2\n      pop\n        /* \"#utility.yul\":9490:9510   */\n      tag_245\n        /* \"#utility.yul\":9508:9509   */\n      dup4\n        /* \"#utility.yul\":9490:9510   */\n      tag_208\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":9485:9510   */\n      swap3\n      pop\n        /* \"#utility.yul\":9678:9679   */\n      dup2\n        /* \"#utility.yul\":9610:9676   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":9606:9680   */\n      div\n        /* \"#utility.yul\":9603:9604   */\n      dup4\n        /* \"#utility.yul\":9600:9681   */\n      gt\n        /* \"#utility.yul\":9595:9596   */\n      dup3\n        /* \"#utility.yul\":9588:9597   */\n      iszero\n        /* \"#utility.yul\":9581:9598   */\n      iszero\n        /* \"#utility.yul\":9577:9682   */\n      and\n        /* \"#utility.yul\":9574:9705   */\n      iszero\n      tag_246\n      jumpi\n        /* \"#utility.yul\":9685:9703   */\n      tag_247\n      tag_242\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":9574:9705   */\n    tag_246:\n        /* \"#utility.yul\":9733:9734   */\n      dup3\n        /* \"#utility.yul\":9730:9731   */\n      dup3\n        /* \"#utility.yul\":9726:9735   */\n      mul\n        /* \"#utility.yul\":9715:9735   */\n      swap1\n      pop\n        /* \"#utility.yul\":9393:9741   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9747:9938   */\n    tag_125:\n        /* \"#utility.yul\":9787:9791   */\n      0x00\n        /* \"#utility.yul\":9807:9827   */\n      tag_249\n        /* \"#utility.yul\":9825:9826   */\n      dup3\n        /* \"#utility.yul\":9807:9827   */\n      tag_208\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":9802:9827   */\n      swap2\n      pop\n        /* \"#utility.yul\":9841:9861   */\n      tag_250\n        /* \"#utility.yul\":9859:9860   */\n      dup4\n        /* \"#utility.yul\":9841:9861   */\n      tag_208\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":9836:9861   */\n      swap3\n      pop\n        /* \"#utility.yul\":9880:9881   */\n      dup3\n        /* \"#utility.yul\":9877:9878   */\n      dup3\n        /* \"#utility.yul\":9874:9882   */\n      lt\n        /* \"#utility.yul\":9871:9905   */\n      iszero\n      tag_251\n      jumpi\n        /* \"#utility.yul\":9885:9903   */\n      tag_252\n      tag_242\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":9871:9905   */\n    tag_251:\n        /* \"#utility.yul\":9930:9931   */\n      dup3\n        /* \"#utility.yul\":9927:9928   */\n      dup3\n        /* \"#utility.yul\":9923:9932   */\n      sub\n        /* \"#utility.yul\":9915:9932   */\n      swap1\n      pop\n        /* \"#utility.yul\":9747:9938   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9944:10040   */\n    tag_160:\n        /* \"#utility.yul\":9981:9988   */\n      0x00\n        /* \"#utility.yul\":10010:10034   */\n      tag_254\n        /* \"#utility.yul\":10028:10033   */\n      dup3\n        /* \"#utility.yul\":10010:10034   */\n      tag_255\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":9999:10034   */\n      swap1\n      pop\n        /* \"#utility.yul\":9944:10040   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10046:10136   */\n    tag_164:\n        /* \"#utility.yul\":10080:10087   */\n      0x00\n        /* \"#utility.yul\":10123:10128   */\n      dup2\n        /* \"#utility.yul\":10116:10129   */\n      iszero\n        /* \"#utility.yul\":10109:10130   */\n      iszero\n        /* \"#utility.yul\":10098:10130   */\n      swap1\n      pop\n        /* \"#utility.yul\":10046:10136   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10142:10268   */\n    tag_255:\n        /* \"#utility.yul\":10179:10186   */\n      0x00\n        /* \"#utility.yul\":10219:10261   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":10212:10217   */\n      dup3\n        /* \"#utility.yul\":10208:10262   */\n      and\n        /* \"#utility.yul\":10197:10262   */\n      swap1\n      pop\n        /* \"#utility.yul\":10142:10268   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10274:10351   */\n    tag_208:\n        /* \"#utility.yul\":10311:10318   */\n      0x00\n        /* \"#utility.yul\":10340:10345   */\n      dup2\n        /* \"#utility.yul\":10329:10345   */\n      swap1\n      pop\n        /* \"#utility.yul\":10274:10351   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10357:10664   */\n    tag_172:\n        /* \"#utility.yul\":10425:10426   */\n      0x00\n        /* \"#utility.yul\":10435:10548   */\n    tag_260:\n        /* \"#utility.yul\":10449:10455   */\n      dup4\n        /* \"#utility.yul\":10446:10447   */\n      dup2\n        /* \"#utility.yul\":10443:10456   */\n      lt\n        /* \"#utility.yul\":10435:10548   */\n      iszero\n      tag_262\n      jumpi\n        /* \"#utility.yul\":10534:10535   */\n      dup1\n        /* \"#utility.yul\":10529:10532   */\n      dup3\n        /* \"#utility.yul\":10525:10536   */\n      add\n        /* \"#utility.yul\":10519:10537   */\n      mload\n        /* \"#utility.yul\":10515:10516   */\n      dup2\n        /* \"#utility.yul\":10510:10513   */\n      dup5\n        /* \"#utility.yul\":10506:10517   */\n      add\n        /* \"#utility.yul\":10499:10538   */\n      mstore\n        /* \"#utility.yul\":10471:10473   */\n      0x20\n        /* \"#utility.yul\":10468:10469   */\n      dup2\n        /* \"#utility.yul\":10464:10474   */\n      add\n        /* \"#utility.yul\":10459:10474   */\n      swap1\n      pop\n        /* \"#utility.yul\":10435:10548   */\n      jump(tag_260)\n    tag_262:\n        /* \"#utility.yul\":10566:10572   */\n      dup4\n        /* \"#utility.yul\":10563:10564   */\n      dup2\n        /* \"#utility.yul\":10560:10573   */\n      gt\n        /* \"#utility.yul\":10557:10658   */\n      iszero\n      tag_263\n      jumpi\n        /* \"#utility.yul\":10646:10647   */\n      0x00\n        /* \"#utility.yul\":10637:10643   */\n      dup5\n        /* \"#utility.yul\":10632:10635   */\n      dup5\n        /* \"#utility.yul\":10628:10644   */\n      add\n        /* \"#utility.yul\":10621:10648   */\n      mstore\n        /* \"#utility.yul\":10557:10658   */\n    tag_263:\n        /* \"#utility.yul\":10406:10664   */\n      pop\n        /* \"#utility.yul\":10357:10664   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10670:10990   */\n    tag_61:\n        /* \"#utility.yul\":10714:10720   */\n      0x00\n        /* \"#utility.yul\":10751:10752   */\n      0x02\n        /* \"#utility.yul\":10745:10749   */\n      dup3\n        /* \"#utility.yul\":10741:10753   */\n      div\n        /* \"#utility.yul\":10731:10753   */\n      swap1\n      pop\n        /* \"#utility.yul\":10798:10799   */\n      0x01\n        /* \"#utility.yul\":10792:10796   */\n      dup3\n        /* \"#utility.yul\":10788:10800   */\n      and\n        /* \"#utility.yul\":10819:10837   */\n      dup1\n        /* \"#utility.yul\":10809:10890   */\n      tag_265\n      jumpi\n        /* \"#utility.yul\":10875:10879   */\n      0x7f\n        /* \"#utility.yul\":10867:10873   */\n      dup3\n        /* \"#utility.yul\":10863:10880   */\n      and\n        /* \"#utility.yul\":10853:10880   */\n      swap2\n      pop\n        /* \"#utility.yul\":10809:10890   */\n    tag_265:\n        /* \"#utility.yul\":10937:10939   */\n      0x20\n        /* \"#utility.yul\":10929:10935   */\n      dup3\n        /* \"#utility.yul\":10926:10940   */\n      lt\n        /* \"#utility.yul\":10906:10924   */\n      dup2\n        /* \"#utility.yul\":10903:10941   */\n      eq\n        /* \"#utility.yul\":10900:10984   */\n      iszero\n      tag_266\n      jumpi\n        /* \"#utility.yul\":10956:10974   */\n      tag_267\n      tag_268\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":10900:10984   */\n    tag_266:\n        /* \"#utility.yul\":10721:10990   */\n      pop\n        /* \"#utility.yul\":10670:10990   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10996:11176   */\n    tag_242:\n        /* \"#utility.yul\":11044:11121   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11041:11042   */\n      0x00\n        /* \"#utility.yul\":11034:11122   */\n      mstore\n        /* \"#utility.yul\":11141:11145   */\n      0x11\n        /* \"#utility.yul\":11138:11139   */\n      0x04\n        /* \"#utility.yul\":11131:11146   */\n      mstore\n        /* \"#utility.yul\":11165:11169   */\n      0x24\n        /* \"#utility.yul\":11162:11163   */\n      0x00\n        /* \"#utility.yul\":11155:11170   */\n      revert\n        /* \"#utility.yul\":11182:11362   */\n    tag_268:\n        /* \"#utility.yul\":11230:11307   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11227:11228   */\n      0x00\n        /* \"#utility.yul\":11220:11308   */\n      mstore\n        /* \"#utility.yul\":11327:11331   */\n      0x22\n        /* \"#utility.yul\":11324:11325   */\n      0x04\n        /* \"#utility.yul\":11317:11332   */\n      mstore\n        /* \"#utility.yul\":11351:11355   */\n      0x24\n        /* \"#utility.yul\":11348:11349   */\n      0x00\n        /* \"#utility.yul\":11341:11356   */\n      revert\n        /* \"#utility.yul\":11491:11608   */\n    tag_142:\n        /* \"#utility.yul\":11600:11601   */\n      0x00\n        /* \"#utility.yul\":11597:11598   */\n      dup1\n        /* \"#utility.yul\":11590:11602   */\n      revert\n        /* \"#utility.yul\":11614:11716   */\n    tag_174:\n        /* \"#utility.yul\":11655:11661   */\n      0x00\n        /* \"#utility.yul\":11706:11708   */\n      0x1f\n        /* \"#utility.yul\":11702:11709   */\n      not\n        /* \"#utility.yul\":11697:11699   */\n      0x1f\n        /* \"#utility.yul\":11690:11695   */\n      dup4\n        /* \"#utility.yul\":11686:11700   */\n      add\n        /* \"#utility.yul\":11682:11710   */\n      and\n        /* \"#utility.yul\":11672:11710   */\n      swap1\n      pop\n        /* \"#utility.yul\":11614:11716   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11722:11943   */\n    tag_179:\n        /* \"#utility.yul\":11862:11896   */\n      0x596f7520646f206e6f7420686176652073756666696369656e742062616c616e\n        /* \"#utility.yul\":11858:11859   */\n      0x00\n        /* \"#utility.yul\":11850:11856   */\n      dup3\n        /* \"#utility.yul\":11846:11860   */\n      add\n        /* \"#utility.yul\":11839:11897   */\n      mstore\n        /* \"#utility.yul\":11931:11935   */\n      0x6365000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11926:11928   */\n      0x20\n        /* \"#utility.yul\":11918:11924   */\n      dup3\n        /* \"#utility.yul\":11914:11929   */\n      add\n        /* \"#utility.yul\":11907:11936   */\n      mstore\n        /* \"#utility.yul\":11722:11943   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11949:12119   */\n    tag_184:\n        /* \"#utility.yul\":12089:12111   */\n      0x496e73756666696369656e742062616c616e6365000000000000000000000000\n        /* \"#utility.yul\":12085:12086   */\n      0x00\n        /* \"#utility.yul\":12077:12083   */\n      dup3\n        /* \"#utility.yul\":12073:12087   */\n      add\n        /* \"#utility.yul\":12066:12112   */\n      mstore\n        /* \"#utility.yul\":11949:12119   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12125:12307   */\n    tag_189:\n        /* \"#utility.yul\":12265:12299   */\n      0x436f6e74726163742062616c616e636520697320696e73756666696369656e74\n        /* \"#utility.yul\":12261:12262   */\n      0x00\n        /* \"#utility.yul\":12253:12259   */\n      dup3\n        /* \"#utility.yul\":12249:12263   */\n      add\n        /* \"#utility.yul\":12242:12300   */\n      mstore\n        /* \"#utility.yul\":12125:12307   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12313:12480   */\n    tag_194:\n        /* \"#utility.yul\":12453:12472   */\n      0x556e7375636365737366756c2053656e64000000000000000000000000000000\n        /* \"#utility.yul\":12449:12450   */\n      0x00\n        /* \"#utility.yul\":12441:12447   */\n      dup3\n        /* \"#utility.yul\":12437:12451   */\n      add\n        /* \"#utility.yul\":12430:12473   */\n      mstore\n        /* \"#utility.yul\":12313:12480   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12486:12712   */\n    tag_199:\n        /* \"#utility.yul\":12626:12660   */\n      0x4f6e6c7920746865206f776e65722063616e2064657374726f79207468652063\n        /* \"#utility.yul\":12622:12623   */\n      0x00\n        /* \"#utility.yul\":12614:12620   */\n      dup3\n        /* \"#utility.yul\":12610:12624   */\n      add\n        /* \"#utility.yul\":12603:12661   */\n      mstore\n        /* \"#utility.yul\":12695:12704   */\n      0x6f6e747261637400000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12690:12692   */\n      0x20\n        /* \"#utility.yul\":12682:12688   */\n      dup3\n        /* \"#utility.yul\":12678:12693   */\n      add\n        /* \"#utility.yul\":12671:12705   */\n      mstore\n        /* \"#utility.yul\":12486:12712   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12718:12939   */\n    tag_204:\n        /* \"#utility.yul\":12858:12892   */\n      0x4f6e6c7920746865206f776e65722063616e206d696e74206e657720746f6b65\n        /* \"#utility.yul\":12854:12855   */\n      0x00\n        /* \"#utility.yul\":12846:12852   */\n      dup3\n        /* \"#utility.yul\":12842:12856   */\n      add\n        /* \"#utility.yul\":12835:12893   */\n      mstore\n        /* \"#utility.yul\":12927:12931   */\n      0x6e73000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12922:12924   */\n      0x20\n        /* \"#utility.yul\":12914:12920   */\n      dup3\n        /* \"#utility.yul\":12910:12925   */\n      add\n        /* \"#utility.yul\":12903:12932   */\n      mstore\n        /* \"#utility.yul\":12718:12939   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12945:13067   */\n    tag_130:\n        /* \"#utility.yul\":13018:13042   */\n      tag_282\n        /* \"#utility.yul\":13036:13041   */\n      dup2\n        /* \"#utility.yul\":13018:13042   */\n      tag_160\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":13011:13016   */\n      dup2\n        /* \"#utility.yul\":13008:13043   */\n      eq\n        /* \"#utility.yul\":12998:13061   */\n      tag_283\n      jumpi\n        /* \"#utility.yul\":13057:13058   */\n      0x00\n        /* \"#utility.yul\":13054:13055   */\n      dup1\n        /* \"#utility.yul\":13047:13059   */\n      revert\n        /* \"#utility.yul\":12998:13061   */\n    tag_283:\n        /* \"#utility.yul\":12945:13067   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13073:13189   */\n    tag_134:\n        /* \"#utility.yul\":13143:13164   */\n      tag_285\n        /* \"#utility.yul\":13158:13163   */\n      dup2\n        /* \"#utility.yul\":13143:13164   */\n      tag_164\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":13136:13141   */\n      dup2\n        /* \"#utility.yul\":13133:13165   */\n      eq\n        /* \"#utility.yul\":13123:13183   */\n      tag_286\n      jumpi\n        /* \"#utility.yul\":13179:13180   */\n      0x00\n        /* \"#utility.yul\":13176:13177   */\n      dup1\n        /* \"#utility.yul\":13169:13181   */\n      revert\n        /* \"#utility.yul\":13123:13183   */\n    tag_286:\n        /* \"#utility.yul\":13073:13189   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13195:13317   */\n    tag_138:\n        /* \"#utility.yul\":13268:13292   */\n      tag_288\n        /* \"#utility.yul\":13286:13291   */\n      dup2\n        /* \"#utility.yul\":13268:13292   */\n      tag_208\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":13261:13266   */\n      dup2\n        /* \"#utility.yul\":13258:13293   */\n      eq\n        /* \"#utility.yul\":13248:13311   */\n      tag_289\n      jumpi\n        /* \"#utility.yul\":13307:13308   */\n      0x00\n        /* \"#utility.yul\":13304:13305   */\n      dup1\n        /* \"#utility.yul\":13297:13309   */\n      revert\n        /* \"#utility.yul\":13248:13311   */\n    tag_289:\n        /* \"#utility.yul\":13195:13317   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212205ee20f76ce4fedaaf9f53b50fc9504c3f7d1ef3d2cc9e54abb39850a57b0d62b64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_401": {
									"entryPoint": null,
									"id": 401,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 777,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 794,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 823,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 833,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 887,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:951:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "72:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "89:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "112:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "94:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "94:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "82:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "82:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "60:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "67:3:3",
														"type": ""
													}
												],
												"src": "7:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "229:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "239:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "251:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "262:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "247:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "247:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "239:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "319:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "332:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "343:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "328:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "328:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "275:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "275:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "275:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "201:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "213:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "224:4:3",
														"type": ""
													}
												],
												"src": "131:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "404:32:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "414:16:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "425:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "414:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "386:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "396:7:3",
														"type": ""
													}
												],
												"src": "359:77:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "493:269:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "503:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "517:4:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "523:1:3",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "513:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "513:12:3"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "503:6:3"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "534:38:3",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "564:4:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "570:1:3",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "560:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "560:12:3"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "538:18:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "611:51:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "625:27:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "639:6:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "647:4:3",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "635:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "635:17:3"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "625:6:3"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "591:18:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "584:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "584:26:3"
															},
															"nodeType": "YulIf",
															"src": "581:81:3"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "714:42:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "728:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "728:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "728:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "678:18:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "701:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "709:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "698:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "698:14:3"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "675:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "675:38:3"
															},
															"nodeType": "YulIf",
															"src": "672:84:3"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "477:4:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "486:6:3",
														"type": ""
													}
												],
												"src": "442:320:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "796:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "813:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "816:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "806:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "806:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "806:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "910:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "913:4:3",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "903:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "903:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "903:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "934:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "937:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "927:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "927:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "927:15:3"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "768:180:3"
											}
										]
									},
									"contents": "{\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {
								"Library.sol": {
									"customLib": [
										{
											"length": 20,
											"start": 3336
										}
									]
								}
							},
							"object": "60806040523480156200001157600080fd5b506040518060400160405280600c81526020017f437573746f6d20546f6b656e0000000000000000000000000000000000000000815250600190805190602001906200005f92919062000259565b506040518060400160405280600281526020017f435400000000000000000000000000000000000000000000000000000000000081525060029080519060200190620000ad92919062000259565b50610258600381905550336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600660008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550620f4240600481905550600454600560008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d41213968856004546040516200024b91906200031a565b60405180910390a2620003a6565b828054620002679062000341565b90600052602060002090601f0160209004810192826200028b5760008555620002d7565b82601f10620002a657805160ff1916838001178555620002d7565b82800160010185558215620002d7579182015b82811115620002d6578251825591602001919060010190620002b9565b5b509050620002e69190620002ea565b5090565b5b8082111562000305576000816000905550600101620002eb565b5090565b620003148162000337565b82525050565b600060208201905062000331600083018462000309565b92915050565b6000819050919050565b600060028204905060018216806200035a57607f821691505b6020821081141562000371576200037062000377565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6112e280620003b66000396000f3fe60806040526004361061008a5760003560e01c806343d726d61161005957806343d726d61461014b57806370a082311461016257806398d5fdca1461019f578063a9059cbb146101ca578063e4849b32146102075761008b565b8063150704011461008d57806317d7de7c146100b857806318160ddd146100e357806340c10f191461010e5761008b565b5b005b34801561009957600080fd5b506100a2610237565b6040516100af9190610db8565b60405180910390f35b3480156100c457600080fd5b506100cd6102c9565b6040516100da9190610db8565b60405180910390f35b3480156100ef57600080fd5b506100f861035b565b6040516101059190610e9a565b60405180910390f35b34801561011a57600080fd5b5061013560048036038101906101309190610bbc565b610365565b6040516101429190610d9d565b60405180910390f35b34801561015757600080fd5b50610160610502565b005b34801561016e57600080fd5b5061018960048036038101906101849190610b8f565b6105ce565b6040516101969190610e9a565b60405180910390f35b3480156101ab57600080fd5b506101b4610617565b6040516101c19190610e9a565b60405180910390f35b3480156101d657600080fd5b506101f160048036038101906101ec9190610bbc565b610621565b6040516101fe9190610d9d565b60405180910390f35b610221600480360381019061021c9190610c29565b610850565b60405161022e9190610d9d565b60405180910390f35b60606002805461024690611059565b80601f016020809104026020016040519081016040528092919081815260200182805461027290611059565b80156102bf5780601f10610294576101008083540402835291602001916102bf565b820191906000526020600020905b8154815290600101906020018083116102a257829003601f168201915b5050505050905090565b6060600180546102d890611059565b80601f016020809104026020016040519081016040528092919081815260200182805461030490611059565b80156103515780601f1061032657610100808354040283529160200191610351565b820191906000526020600020905b81548152906001019060200180831161033457829003601f168201915b5050505050905090565b6000600454905090565b600060011515600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515146103fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103f190610e7a565b60405180910390fd5b61040f82600454610b2490919063ffffffff16565b60048190555061046782600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610b2490919063ffffffff16565b600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff167f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885836040516104f09190610e9a565b60405180910390a26001905092915050565b60011515600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514610595576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058c90610e5a565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b6000600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600354905090565b60008061067683600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610b3a90919063ffffffff16565b10156106b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ae90610dda565b60405180910390fd5b61070982600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610b3a90919063ffffffff16565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061079e82600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610b2490919063ffffffff16565b600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161083e9190610e9a565b60405180910390a36001905092915050565b6000806108a583600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610b3a90919063ffffffff16565b10156108e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108dd90610dfa565b60405180910390fd5b6000610258836108f69190610f50565b9050600061090d8247610b3a90919063ffffffff16565b101561094e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161094590610e1a565b60405180910390fd5b600073__$97e65d3ecb950a85cbb8a7b3a778484171$__63c0ba8f4283336040518363ffffffff1660e01b8152600401610989929190610eb5565b60206040518083038186803b1580156109a157600080fd5b505af41580156109b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109d99190610bfc565b905080610a1b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a1290610e3a565b60405180910390fd5b610a6d84600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610b3a90919063ffffffff16565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610ac584600454610b3a90919063ffffffff16565b6004819055503373ffffffffffffffffffffffffffffffffffffffff167f5e5e995ce3133561afceaa51a9a154d5db228cd7525d34df5185582c18d3df0985604051610b119190610e9a565b60405180910390a2600192505050919050565b60008183610b329190610efa565b905092915050565b60008183610b489190610faa565b905092915050565b600081359050610b5f81611267565b92915050565b600081519050610b748161127e565b92915050565b600081359050610b8981611295565b92915050565b600060208284031215610ba557610ba46110e9565b5b6000610bb384828501610b50565b91505092915050565b60008060408385031215610bd357610bd26110e9565b5b6000610be185828601610b50565b9250506020610bf285828601610b7a565b9150509250929050565b600060208284031215610c1257610c116110e9565b5b6000610c2084828501610b65565b91505092915050565b600060208284031215610c3f57610c3e6110e9565b5b6000610c4d84828501610b7a565b91505092915050565b610c5f81610fde565b82525050565b610c6e81610ff0565b82525050565b6000610c7f82610ede565b610c898185610ee9565b9350610c99818560208601611026565b610ca2816110ee565b840191505092915050565b6000610cba602283610ee9565b9150610cc5826110ff565b604082019050919050565b6000610cdd601483610ee9565b9150610ce88261114e565b602082019050919050565b6000610d00602083610ee9565b9150610d0b82611177565b602082019050919050565b6000610d23601183610ee9565b9150610d2e826111a0565b602082019050919050565b6000610d46602783610ee9565b9150610d51826111c9565b604082019050919050565b6000610d69602283610ee9565b9150610d7482611218565b604082019050919050565b610d888161101c565b82525050565b610d978161101c565b82525050565b6000602082019050610db26000830184610c65565b92915050565b60006020820190508181036000830152610dd28184610c74565b905092915050565b60006020820190508181036000830152610df381610cad565b9050919050565b60006020820190508181036000830152610e1381610cd0565b9050919050565b60006020820190508181036000830152610e3381610cf3565b9050919050565b60006020820190508181036000830152610e5381610d16565b9050919050565b60006020820190508181036000830152610e7381610d39565b9050919050565b60006020820190508181036000830152610e9381610d5c565b9050919050565b6000602082019050610eaf6000830184610d7f565b92915050565b6000604082019050610eca6000830185610d8e565b610ed76020830184610c56565b9392505050565b600081519050919050565b600082825260208201905092915050565b6000610f058261101c565b9150610f108361101c565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610f4557610f4461108b565b5b828201905092915050565b6000610f5b8261101c565b9150610f668361101c565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610f9f57610f9e61108b565b5b828202905092915050565b6000610fb58261101c565b9150610fc08361101c565b925082821015610fd357610fd261108b565b5b828203905092915050565b6000610fe982610ffc565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b83811015611044578082015181840152602081019050611029565b83811115611053576000848401525b50505050565b6000600282049050600182168061107157607f821691505b60208210811415611085576110846110ba565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f596f7520646f206e6f7420686176652073756666696369656e742062616c616e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b7f496e73756666696369656e742062616c616e6365000000000000000000000000600082015250565b7f436f6e74726163742062616c616e636520697320696e73756666696369656e74600082015250565b7f556e7375636365737366756c2053656e64000000000000000000000000000000600082015250565b7f4f6e6c7920746865206f776e65722063616e2064657374726f7920746865206360008201527f6f6e747261637400000000000000000000000000000000000000000000000000602082015250565b7f4f6e6c7920746865206f776e65722063616e206d696e74206e657720746f6b6560008201527f6e73000000000000000000000000000000000000000000000000000000000000602082015250565b61127081610fde565b811461127b57600080fd5b50565b61128781610ff0565b811461129257600080fd5b50565b61129e8161101c565b81146112a957600080fd5b5056fea26469706673582212205ee20f76ce4fedaaf9f53b50fc9504c3f7d1ef3d2cc9e54abb39850a57b0d62b64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x437573746F6D20546F6B656E0000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x1 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x5F SWAP3 SWAP2 SWAP1 PUSH3 0x259 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4354000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0xAD SWAP3 SWAP2 SWAP1 PUSH3 0x259 JUMP JUMPDEST POP PUSH2 0x258 PUSH1 0x3 DUP2 SWAP1 SSTORE POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x6 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH3 0xF4240 PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH1 0x4 SLOAD PUSH1 0x5 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF6798A560793A54C3BCFE86A93CDE1E73087D944C0EA20544137D4121396885 PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH3 0x24B SWAP2 SWAP1 PUSH3 0x31A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH3 0x3A6 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x267 SWAP1 PUSH3 0x341 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x28B JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x2D7 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x2A6 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x2D7 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x2D7 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x2D6 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x2B9 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x2E6 SWAP2 SWAP1 PUSH3 0x2EA JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x305 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x2EB JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH3 0x314 DUP2 PUSH3 0x337 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x331 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x309 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x35A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x371 JUMPI PUSH3 0x370 PUSH3 0x377 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x12E2 DUP1 PUSH3 0x3B6 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x8A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x43D726D6 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x43D726D6 EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0x98D5FDCA EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1CA JUMPI DUP1 PUSH4 0xE4849B32 EQ PUSH2 0x207 JUMPI PUSH2 0x8B JUMP JUMPDEST DUP1 PUSH4 0x15070401 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x17D7DE7C EQ PUSH2 0xB8 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xE3 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x10E JUMPI PUSH2 0x8B JUMP JUMPDEST JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x99 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA2 PUSH2 0x237 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAF SWAP2 SWAP1 PUSH2 0xDB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xCD PUSH2 0x2C9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDA SWAP2 SWAP1 PUSH2 0xDB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF8 PUSH2 0x35B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x105 SWAP2 SWAP1 PUSH2 0xE9A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x135 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x130 SWAP2 SWAP1 PUSH2 0xBBC JUMP JUMPDEST PUSH2 0x365 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x142 SWAP2 SWAP1 PUSH2 0xD9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x157 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x160 PUSH2 0x502 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x189 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x184 SWAP2 SWAP1 PUSH2 0xB8F JUMP JUMPDEST PUSH2 0x5CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x196 SWAP2 SWAP1 PUSH2 0xE9A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B4 PUSH2 0x617 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C1 SWAP2 SWAP1 PUSH2 0xE9A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EC SWAP2 SWAP1 PUSH2 0xBBC JUMP JUMPDEST PUSH2 0x621 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FE SWAP2 SWAP1 PUSH2 0xD9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x221 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21C SWAP2 SWAP1 PUSH2 0xC29 JUMP JUMPDEST PUSH2 0x850 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22E SWAP2 SWAP1 PUSH2 0xD9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x246 SWAP1 PUSH2 0x1059 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x272 SWAP1 PUSH2 0x1059 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2BF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x294 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2BF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2A2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x2D8 SWAP1 PUSH2 0x1059 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x304 SWAP1 PUSH2 0x1059 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x351 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x326 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x351 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x334 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 ISZERO ISZERO PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x3FA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F1 SWAP1 PUSH2 0xE7A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x40F DUP3 PUSH1 0x4 SLOAD PUSH2 0xB24 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH2 0x467 DUP3 PUSH1 0x5 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xB24 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF6798A560793A54C3BCFE86A93CDE1E73087D944C0EA20544137D4121396885 DUP4 PUSH1 0x40 MLOAD PUSH2 0x4F0 SWAP2 SWAP1 PUSH2 0xE9A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x595 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58C SWAP1 PUSH2 0xE5A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x676 DUP4 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xB3A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST LT ISZERO PUSH2 0x6B7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AE SWAP1 PUSH2 0xDDA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x709 DUP3 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xB3A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x79E DUP3 PUSH1 0x5 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xB24 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x83E SWAP2 SWAP1 PUSH2 0xE9A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x8A5 DUP4 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xB3A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST LT ISZERO PUSH2 0x8E6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8DD SWAP1 PUSH2 0xDFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x258 DUP4 PUSH2 0x8F6 SWAP2 SWAP1 PUSH2 0xF50 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x90D DUP3 SELFBALANCE PUSH2 0xB3A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST LT ISZERO PUSH2 0x94E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x945 SWAP1 PUSH2 0xE1A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0x0 PUSH4 0xC0BA8F42 DUP4 CALLER PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x989 SWAP3 SWAP2 SWAP1 PUSH2 0xEB5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x9B5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9D9 SWAP2 SWAP1 PUSH2 0xBFC JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xA1B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA12 SWAP1 PUSH2 0xE3A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA6D DUP5 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xB3A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xAC5 DUP5 PUSH1 0x4 SLOAD PUSH2 0xB3A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5E5E995CE3133561AFCEAA51A9A154D5DB228CD7525D34DF5185582C18D3DF09 DUP6 PUSH1 0x40 MLOAD PUSH2 0xB11 SWAP2 SWAP1 PUSH2 0xE9A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xB32 SWAP2 SWAP1 PUSH2 0xEFA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xB48 SWAP2 SWAP1 PUSH2 0xFAA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB5F DUP2 PUSH2 0x1267 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xB74 DUP2 PUSH2 0x127E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB89 DUP2 PUSH2 0x1295 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBA5 JUMPI PUSH2 0xBA4 PUSH2 0x10E9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBB3 DUP5 DUP3 DUP6 ADD PUSH2 0xB50 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBD3 JUMPI PUSH2 0xBD2 PUSH2 0x10E9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBE1 DUP6 DUP3 DUP7 ADD PUSH2 0xB50 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xBF2 DUP6 DUP3 DUP7 ADD PUSH2 0xB7A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC12 JUMPI PUSH2 0xC11 PUSH2 0x10E9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC20 DUP5 DUP3 DUP6 ADD PUSH2 0xB65 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC3F JUMPI PUSH2 0xC3E PUSH2 0x10E9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC4D DUP5 DUP3 DUP6 ADD PUSH2 0xB7A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC5F DUP2 PUSH2 0xFDE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xC6E DUP2 PUSH2 0xFF0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC7F DUP3 PUSH2 0xEDE JUMP JUMPDEST PUSH2 0xC89 DUP2 DUP6 PUSH2 0xEE9 JUMP JUMPDEST SWAP4 POP PUSH2 0xC99 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1026 JUMP JUMPDEST PUSH2 0xCA2 DUP2 PUSH2 0x10EE JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCBA PUSH1 0x22 DUP4 PUSH2 0xEE9 JUMP JUMPDEST SWAP2 POP PUSH2 0xCC5 DUP3 PUSH2 0x10FF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCDD PUSH1 0x14 DUP4 PUSH2 0xEE9 JUMP JUMPDEST SWAP2 POP PUSH2 0xCE8 DUP3 PUSH2 0x114E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD00 PUSH1 0x20 DUP4 PUSH2 0xEE9 JUMP JUMPDEST SWAP2 POP PUSH2 0xD0B DUP3 PUSH2 0x1177 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD23 PUSH1 0x11 DUP4 PUSH2 0xEE9 JUMP JUMPDEST SWAP2 POP PUSH2 0xD2E DUP3 PUSH2 0x11A0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD46 PUSH1 0x27 DUP4 PUSH2 0xEE9 JUMP JUMPDEST SWAP2 POP PUSH2 0xD51 DUP3 PUSH2 0x11C9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD69 PUSH1 0x22 DUP4 PUSH2 0xEE9 JUMP JUMPDEST SWAP2 POP PUSH2 0xD74 DUP3 PUSH2 0x1218 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD88 DUP2 PUSH2 0x101C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xD97 DUP2 PUSH2 0x101C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDB2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC65 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xDD2 DUP2 DUP5 PUSH2 0xC74 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xDF3 DUP2 PUSH2 0xCAD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE13 DUP2 PUSH2 0xCD0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE33 DUP2 PUSH2 0xCF3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE53 DUP2 PUSH2 0xD16 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE73 DUP2 PUSH2 0xD39 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE93 DUP2 PUSH2 0xD5C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEAF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD7F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xECA PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xD8E JUMP JUMPDEST PUSH2 0xED7 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xC56 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF05 DUP3 PUSH2 0x101C JUMP JUMPDEST SWAP2 POP PUSH2 0xF10 DUP4 PUSH2 0x101C JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0xF45 JUMPI PUSH2 0xF44 PUSH2 0x108B JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF5B DUP3 PUSH2 0x101C JUMP JUMPDEST SWAP2 POP PUSH2 0xF66 DUP4 PUSH2 0x101C JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xF9F JUMPI PUSH2 0xF9E PUSH2 0x108B JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFB5 DUP3 PUSH2 0x101C JUMP JUMPDEST SWAP2 POP PUSH2 0xFC0 DUP4 PUSH2 0x101C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0xFD3 JUMPI PUSH2 0xFD2 PUSH2 0x108B JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFE9 DUP3 PUSH2 0xFFC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1044 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1029 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1053 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1071 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1085 JUMPI PUSH2 0x1084 PUSH2 0x10BA JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x596F7520646F206E6F7420686176652073756666696369656E742062616C616E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6365000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x436F6E74726163742062616C616E636520697320696E73756666696369656E74 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x556E7375636365737366756C2053656E64000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F6E6C7920746865206F776E65722063616E2064657374726F79207468652063 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F6E747261637400000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F6E6C7920746865206F776E65722063616E206D696E74206E657720746F6B65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E73000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x1270 DUP2 PUSH2 0xFDE JUMP JUMPDEST DUP2 EQ PUSH2 0x127B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1287 DUP2 PUSH2 0xFF0 JUMP JUMPDEST DUP2 EQ PUSH2 0x1292 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x129E DUP2 PUSH2 0x101C JUMP JUMPDEST DUP2 EQ PUSH2 0x12A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5E 0xE2 0xF PUSH23 0xCE4FEDAAF9F53B50FC9504C3F7D1EF3D2CC9E54ABB3985 EXP JUMPI 0xB0 0xD6 0x2B PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "115:3797:1:-:0;;;594:508;;;;;;;;;;657:21;;;;;;;;;;;;;;;;;:4;:21;;;;;;;;;;;;:::i;:::-;;689:13;;;;;;;;;;;;;;;;;:6;:13;;;;;;;;;;;;:::i;:::-;;721:3;713:5;:11;;;;825:10;808:5;;:28;;;;;;;;;;;;;;;;;;913:4;900:5;:12;906:5;;;;;;;;;;;900:12;;;;;;;;;;;;;;;;:17;;;;;;;;;;;;;;;;;;1007:7;993:11;:21;;;;1043:11;;1025:8;:15;1034:5;;;;;;;;;;;1025:15;;;;;;;;;;;;;;;:29;;;;1075:5;;;;;;;;;;1070:24;;;1082:11;;1070:24;;;;;;:::i;:::-;;;;;;;;115:3797;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:118:3:-;94:24;112:5;94:24;:::i;:::-;89:3;82:37;7:118;;:::o;131:222::-;224:4;262:2;251:9;247:18;239:26;;275:71;343:1;332:9;328:17;319:6;275:71;:::i;:::-;131:222;;;;:::o;359:77::-;396:7;425:5;414:16;;359:77;;;:::o;442:320::-;486:6;523:1;517:4;513:12;503:22;;570:1;564:4;560:12;591:18;581:81;;647:4;639:6;635:17;625:27;;581:81;709:2;701:6;698:14;678:18;675:38;672:84;;;728:18;;:::i;:::-;672:84;493:269;442:320;;;:::o;768:180::-;816:77;813:1;806:88;913:4;910:1;903:15;937:4;934:1;927:15;115:3797:1;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_652": {
									"entryPoint": null,
									"id": 652,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@add_175": {
									"entryPoint": 2852,
									"id": 175,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_547": {
									"entryPoint": 1486,
									"id": 547,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@close_648": {
									"entryPoint": 1282,
									"id": 648,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getName_417": {
									"entryPoint": 713,
									"id": 417,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getPrice_433": {
									"entryPoint": 1559,
									"id": 433,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getSymbol_425": {
									"entryPoint": 567,
									"id": 425,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@mint_535": {
									"entryPoint": 869,
									"id": 535,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@sell_630": {
									"entryPoint": 2128,
									"id": 630,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@sub_190": {
									"entryPoint": 2874,
									"id": 190,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@totalSupply_409": {
									"entryPoint": 859,
									"id": 409,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transfer_489": {
									"entryPoint": 1569,
									"id": 489,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 2896,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 2917,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2938,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2959,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3004,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 3068,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3113,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack_library": {
									"entryPoint": 3158,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 3173,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3188,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1cfe29335417d58430919310476bd047bd59346b3a9c3737faf69e319ee4efb7_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3245,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3280,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_63580c8f2f353fc5b6490d467132dc04a523d5a3d9a1206eea4b2a39c4d766db_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3315,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_93da4a8725cabb0c6def937e69cb0e26d00d98c431219d1ddb6799a41a68cc19_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3350,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ab5f331f6ba431abbea29f740d3c5ab5f38e45bf730065272d8e796b7e3904ce_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3385,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_dbe0e75e0af93930a70b9625aa5f5d0f68d46c213206bbd891b8ca2b2a563776_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3420,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3455,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack_library": {
									"entryPoint": 3470,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 3485,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3512,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1cfe29335417d58430919310476bd047bd59346b3a9c3737faf69e319ee4efb7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3546,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3578,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_63580c8f2f353fc5b6490d467132dc04a523d5a3d9a1206eea4b2a39c4d766db__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3610,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_93da4a8725cabb0c6def937e69cb0e26d00d98c431219d1ddb6799a41a68cc19__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3642,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ab5f331f6ba431abbea29f740d3c5ab5f38e45bf730065272d8e796b7e3904ce__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3674,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_dbe0e75e0af93930a70b9625aa5f5d0f68d46c213206bbd891b8ca2b2a563776__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3706,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3738,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_library_reversed": {
									"entryPoint": 3765,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 3806,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3817,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3834,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 3920,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4010,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4062,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4080,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4092,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4124,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 4134,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 4185,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4235,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 4282,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4329,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 4334,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_1cfe29335417d58430919310476bd047bd59346b3a9c3737faf69e319ee4efb7": {
									"entryPoint": 4351,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5": {
									"entryPoint": 4430,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_63580c8f2f353fc5b6490d467132dc04a523d5a3d9a1206eea4b2a39c4d766db": {
									"entryPoint": 4471,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_93da4a8725cabb0c6def937e69cb0e26d00d98c431219d1ddb6799a41a68cc19": {
									"entryPoint": 4512,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ab5f331f6ba431abbea29f740d3c5ab5f38e45bf730065272d8e796b7e3904ce": {
									"entryPoint": 4553,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_dbe0e75e0af93930a70b9625aa5f5d0f68d46c213206bbd891b8ca2b2a563776": {
									"entryPoint": 4632,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 4711,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 4734,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4757,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:13320:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:3"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:3",
														"type": ""
													}
												],
												"src": "7:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "212:77:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "222:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "237:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "231:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "222:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "277:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "253:23:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "253:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "253:30:3"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "190:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "198:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "206:5:3",
														"type": ""
													}
												],
												"src": "152:137:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "347:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "357:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "379:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "366:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "366:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "357:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "422:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "395:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "395:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "395:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "325:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "333:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "341:5:3",
														"type": ""
													}
												],
												"src": "295:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "506:263:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "552:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "554:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "554:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "554:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "527:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "536:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "523:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "523:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "548:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "519:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "519:32:3"
															},
															"nodeType": "YulIf",
															"src": "516:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "645:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "660:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "674:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "664:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "689:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "724:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "735:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "720:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "720:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "744:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "699:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "699:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "689:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "476:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "487:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "499:6:3",
														"type": ""
													}
												],
												"src": "440:329:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "858:391:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "904:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "906:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "906:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "906:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "879:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "888:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "875:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "875:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "900:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "871:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "871:32:3"
															},
															"nodeType": "YulIf",
															"src": "868:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "997:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1012:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1026:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1016:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1041:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1076:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1087:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1072:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1072:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1096:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1051:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1051:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1041:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1124:118:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1139:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1153:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1143:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1169:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1204:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1215:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1200:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1200:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1224:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1179:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1179:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1169:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "820:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "831:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "843:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "851:6:3",
														"type": ""
													}
												],
												"src": "775:474:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1329:271:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1375:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1377:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1377:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1377:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1350:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1359:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1346:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1346:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1371:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1342:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1342:32:3"
															},
															"nodeType": "YulIf",
															"src": "1339:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "1468:125:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1483:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1497:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1487:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1512:71:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1555:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1566:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1551:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1551:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1575:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1522:28:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1522:61:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1512:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1299:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1310:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1322:6:3",
														"type": ""
													}
												],
												"src": "1255:345:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1672:263:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1718:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1720:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1720:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1720:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1693:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1702:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1689:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1689:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1714:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1685:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1685:32:3"
															},
															"nodeType": "YulIf",
															"src": "1682:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "1811:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1826:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1840:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1830:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1855:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1890:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1901:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1886:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1886:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1910:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1865:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1865:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1855:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1642:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1653:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1665:6:3",
														"type": ""
													}
												],
												"src": "1606:329:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2014:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2031:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2054:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2036:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2036:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2024:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2024:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2024:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack_library",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2002:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2009:3:3",
														"type": ""
													}
												],
												"src": "1941:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2132:50:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2149:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2169:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "2154:14:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2154:21:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2142:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2142:34:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2142:34:3"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2120:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2127:3:3",
														"type": ""
													}
												],
												"src": "2073:109:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2280:272:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2290:53:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2337:5:3"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2304:32:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2304:39:3"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2294:6:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2352:78:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2418:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2423:6:3"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2359:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2359:71:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2352:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2465:5:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2472:4:3",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2461:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2461:16:3"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2479:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2484:6:3"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2439:21:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2439:52:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2439:52:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2500:46:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2511:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2538:6:3"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "2516:21:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2516:29:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2507:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2507:39:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2500:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2261:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2268:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2276:3:3",
														"type": ""
													}
												],
												"src": "2188:364:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2704:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2714:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2780:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2785:2:3",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2721:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2721:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2714:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2886:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1cfe29335417d58430919310476bd047bd59346b3a9c3737faf69e319ee4efb7",
																	"nodeType": "YulIdentifier",
																	"src": "2797:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2797:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2797:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2899:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2910:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2915:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2906:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2906:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2899:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1cfe29335417d58430919310476bd047bd59346b3a9c3737faf69e319ee4efb7_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2692:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2700:3:3",
														"type": ""
													}
												],
												"src": "2558:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3076:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3086:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3152:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3157:2:3",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3093:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3093:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3086:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3258:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																	"nodeType": "YulIdentifier",
																	"src": "3169:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3169:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3169:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3271:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3282:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3287:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3278:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3278:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3271:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3064:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3072:3:3",
														"type": ""
													}
												],
												"src": "2930:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3448:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3458:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3524:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3529:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3465:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3465:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3458:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3630:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_63580c8f2f353fc5b6490d467132dc04a523d5a3d9a1206eea4b2a39c4d766db",
																	"nodeType": "YulIdentifier",
																	"src": "3541:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3541:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3541:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3643:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3654:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3659:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3650:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3650:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3643:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_63580c8f2f353fc5b6490d467132dc04a523d5a3d9a1206eea4b2a39c4d766db_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3436:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3444:3:3",
														"type": ""
													}
												],
												"src": "3302:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3820:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3830:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3896:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3901:2:3",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3837:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3837:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3830:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4002:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_93da4a8725cabb0c6def937e69cb0e26d00d98c431219d1ddb6799a41a68cc19",
																	"nodeType": "YulIdentifier",
																	"src": "3913:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3913:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3913:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4015:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4026:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4031:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4022:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4022:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4015:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_93da4a8725cabb0c6def937e69cb0e26d00d98c431219d1ddb6799a41a68cc19_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3808:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3816:3:3",
														"type": ""
													}
												],
												"src": "3674:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4192:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4202:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4268:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4273:2:3",
																		"type": "",
																		"value": "39"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4209:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4209:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4202:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4374:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ab5f331f6ba431abbea29f740d3c5ab5f38e45bf730065272d8e796b7e3904ce",
																	"nodeType": "YulIdentifier",
																	"src": "4285:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4285:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4285:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4387:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4398:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4403:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4394:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4394:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4387:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ab5f331f6ba431abbea29f740d3c5ab5f38e45bf730065272d8e796b7e3904ce_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4180:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4188:3:3",
														"type": ""
													}
												],
												"src": "4046:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4564:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4574:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4640:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4645:2:3",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4581:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4581:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4574:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4746:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_dbe0e75e0af93930a70b9625aa5f5d0f68d46c213206bbd891b8ca2b2a563776",
																	"nodeType": "YulIdentifier",
																	"src": "4657:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4657:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4657:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4759:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4770:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4775:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4766:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4766:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4759:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_dbe0e75e0af93930a70b9625aa5f5d0f68d46c213206bbd891b8ca2b2a563776_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4552:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4560:3:3",
														"type": ""
													}
												],
												"src": "4418:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4855:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4872:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4895:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4877:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4877:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4865:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4865:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4865:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4843:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4850:3:3",
														"type": ""
													}
												],
												"src": "4790:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4987:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5004:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5027:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5009:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5009:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4997:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4997:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4997:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack_library",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4975:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4982:3:3",
														"type": ""
													}
												],
												"src": "4914:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5138:118:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5148:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5160:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5171:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5156:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5156:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5148:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5222:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5235:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5246:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5231:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5231:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5184:37:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5184:65:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5184:65:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5110:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5122:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5133:4:3",
														"type": ""
													}
												],
												"src": "5046:210:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5380:195:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5390:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5402:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5413:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5398:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5398:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5390:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5437:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5448:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5433:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5433:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5456:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5462:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5452:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5452:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5426:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5426:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5426:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5482:86:3",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5554:6:3"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "5563:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5490:63:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5490:78:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5482:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5352:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5364:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5375:4:3",
														"type": ""
													}
												],
												"src": "5262:313:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5752:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5762:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5774:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5785:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5770:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5770:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5762:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5809:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5820:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5805:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5805:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5828:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5834:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5824:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5824:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5798:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5798:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5798:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5854:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "5988:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1cfe29335417d58430919310476bd047bd59346b3a9c3737faf69e319ee4efb7_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5862:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5862:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5854:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1cfe29335417d58430919310476bd047bd59346b3a9c3737faf69e319ee4efb7__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5732:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5747:4:3",
														"type": ""
													}
												],
												"src": "5581:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6177:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6187:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6199:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6210:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6195:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6195:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6187:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6234:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6245:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6230:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6230:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6253:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6259:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6249:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6249:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6223:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6223:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6223:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6279:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6413:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6287:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6287:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6279:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6157:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6172:4:3",
														"type": ""
													}
												],
												"src": "6006:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6602:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6612:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6624:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6635:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6620:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6620:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6612:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6659:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6670:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6655:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6655:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6678:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6684:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6674:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6674:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6648:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6648:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6648:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6704:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6838:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_63580c8f2f353fc5b6490d467132dc04a523d5a3d9a1206eea4b2a39c4d766db_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6712:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6712:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6704:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_63580c8f2f353fc5b6490d467132dc04a523d5a3d9a1206eea4b2a39c4d766db__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6582:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6597:4:3",
														"type": ""
													}
												],
												"src": "6431:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7027:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7037:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7049:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7060:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7045:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7045:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7037:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7084:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7095:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7080:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7080:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7103:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7109:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7099:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7099:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7073:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7073:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7073:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7129:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7263:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_93da4a8725cabb0c6def937e69cb0e26d00d98c431219d1ddb6799a41a68cc19_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7137:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7137:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7129:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_93da4a8725cabb0c6def937e69cb0e26d00d98c431219d1ddb6799a41a68cc19__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7007:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7022:4:3",
														"type": ""
													}
												],
												"src": "6856:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7452:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7462:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7474:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7485:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7470:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7470:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7462:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7509:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7520:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7505:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7505:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7528:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7534:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7524:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7524:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7498:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7498:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7498:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7554:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7688:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ab5f331f6ba431abbea29f740d3c5ab5f38e45bf730065272d8e796b7e3904ce_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7562:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7562:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7554:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ab5f331f6ba431abbea29f740d3c5ab5f38e45bf730065272d8e796b7e3904ce__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7432:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7447:4:3",
														"type": ""
													}
												],
												"src": "7281:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7877:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7887:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7899:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7910:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7895:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7895:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7887:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7934:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7945:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7930:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7930:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7953:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7959:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7949:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7949:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7923:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7923:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7923:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7979:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8113:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_dbe0e75e0af93930a70b9625aa5f5d0f68d46c213206bbd891b8ca2b2a563776_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7987:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7987:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7979:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_dbe0e75e0af93930a70b9625aa5f5d0f68d46c213206bbd891b8ca2b2a563776__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7857:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7872:4:3",
														"type": ""
													}
												],
												"src": "7706:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8229:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8239:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8251:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8262:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8247:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8247:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8239:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8319:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8332:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8343:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8328:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8328:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8275:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8275:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8275:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8201:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8213:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8224:4:3",
														"type": ""
													}
												],
												"src": "8131:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8493:222:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8503:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8515:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8526:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8511:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8511:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8503:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8591:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8604:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8615:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8600:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8600:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack_library",
																	"nodeType": "YulIdentifier",
																	"src": "8539:51:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8539:79:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8539:79:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "8680:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8693:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8704:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8689:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8689:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack_library",
																	"nodeType": "YulIdentifier",
																	"src": "8628:51:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8628:80:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8628:80:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_library_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8457:9:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8469:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8477:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8488:4:3",
														"type": ""
													}
												],
												"src": "8359:356:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8761:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8771:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8787:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "8781:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8781:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "8771:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8754:6:3",
														"type": ""
													}
												],
												"src": "8721:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8861:40:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8872:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8888:5:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "8882:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8882:12:3"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "8872:6:3"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8844:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8854:6:3",
														"type": ""
													}
												],
												"src": "8802:99:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9003:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9020:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9025:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9013:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9013:19:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9013:19:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9041:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9060:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9065:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9056:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9056:14:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "9041:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8975:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8980:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "8991:11:3",
														"type": ""
													}
												],
												"src": "8907:169:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9126:261:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9136:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9159:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9141:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9141:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "9136:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9170:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9193:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9175:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9175:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "9170:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9333:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9335:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9335:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9335:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9254:1:3"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9261:66:3",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "9329:1:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9257:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9257:74:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9251:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9251:81:3"
															},
															"nodeType": "YulIf",
															"src": "9248:107:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9365:16:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9376:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9379:1:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9372:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9372:9:3"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "9365:3:3"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9113:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9116:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "9122:3:3",
														"type": ""
													}
												],
												"src": "9082:305:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9441:300:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9451:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9474:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9456:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9456:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "9451:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9485:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9508:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9490:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9490:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "9485:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9683:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9685:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9685:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9685:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "9595:1:3"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "9588:6:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9588:9:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "9581:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9581:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "9603:1:3"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9610:66:3",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "9678:1:3"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "9606:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9606:74:3"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "9600:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9600:81:3"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "9577:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9577:105:3"
															},
															"nodeType": "YulIf",
															"src": "9574:131:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9715:20:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9730:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9733:1:3"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "9726:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9726:9:3"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "9715:7:3"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9424:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9427:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "9433:7:3",
														"type": ""
													}
												],
												"src": "9393:348:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9792:146:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9802:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9825:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9807:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9807:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "9802:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9836:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9859:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9841:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9841:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "9836:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9883:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9885:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9885:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9885:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9877:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9880:1:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "9874:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9874:8:3"
															},
															"nodeType": "YulIf",
															"src": "9871:34:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9915:17:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9927:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9930:1:3"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "9923:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9923:9:3"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "9915:4:3"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9778:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9781:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "9787:4:3",
														"type": ""
													}
												],
												"src": "9747:191:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9989:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9999:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10028:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "10010:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10010:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "9999:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9971:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "9981:7:3",
														"type": ""
													}
												],
												"src": "9944:96:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10088:48:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10098:32:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10123:5:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "10116:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10116:13:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10109:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10109:21:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "10098:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10070:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "10080:7:3",
														"type": ""
													}
												],
												"src": "10046:90:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10187:81:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10197:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10212:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10219:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10208:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10208:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "10197:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10169:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "10179:7:3",
														"type": ""
													}
												],
												"src": "10142:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10319:32:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10329:16:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "10340:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "10329:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10301:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "10311:7:3",
														"type": ""
													}
												],
												"src": "10274:77:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10406:258:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10416:10:3",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "10425:1:3",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "10420:1:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10485:63:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "10510:3:3"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "10515:1:3"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "10506:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10506:11:3"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "10529:3:3"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "10534:1:3"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "10525:3:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "10525:11:3"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "10519:5:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10519:18:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "10499:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10499:39:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10499:39:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "10446:1:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10449:6:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "10443:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10443:13:3"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "10457:19:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "10459:15:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "10468:1:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10471:2:3",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "10464:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10464:10:3"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "10459:1:3"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "10439:3:3",
																"statements": []
															},
															"src": "10435:113:3"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10582:76:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "10632:3:3"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "10637:6:3"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "10628:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10628:16:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10646:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "10621:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10621:27:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10621:27:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "10563:1:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10566:6:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10560:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10560:13:3"
															},
															"nodeType": "YulIf",
															"src": "10557:101:3"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "10388:3:3",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "10393:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10398:6:3",
														"type": ""
													}
												],
												"src": "10357:307:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10721:269:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10731:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "10745:4:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10751:1:3",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "10741:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10741:12:3"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "10731:6:3"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10762:38:3",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "10792:4:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10798:1:3",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10788:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10788:12:3"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "10766:18:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10839:51:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "10853:27:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "10867:6:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10875:4:3",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "10863:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10863:17:3"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10853:6:3"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "10819:18:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10812:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10812:26:3"
															},
															"nodeType": "YulIf",
															"src": "10809:81:3"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10942:42:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "10956:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10956:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10956:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "10906:18:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10929:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10937:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "10926:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10926:14:3"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "10903:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10903:38:3"
															},
															"nodeType": "YulIf",
															"src": "10900:84:3"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "10705:4:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10714:6:3",
														"type": ""
													}
												],
												"src": "10670:320:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11024:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11041:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11044:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11034:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11034:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11034:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11138:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11141:4:3",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11131:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11131:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11131:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11162:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11165:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11155:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11155:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11155:15:3"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "10996:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11210:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11227:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11230:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11220:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11220:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11220:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11324:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11327:4:3",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11317:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11317:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11317:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11348:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11351:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11341:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11341:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11341:15:3"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "11182:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11457:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11474:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11477:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11467:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11467:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11467:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "11368:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11580:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11597:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11600:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11590:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11590:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11590:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "11491:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11662:54:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11672:38:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11690:5:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11697:2:3",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11686:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11686:14:3"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11706:2:3",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "11702:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11702:7:3"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "11682:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11682:28:3"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "11672:6:3"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11645:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "11655:6:3",
														"type": ""
													}
												],
												"src": "11614:102:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11828:115:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11850:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11858:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11846:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11846:14:3"
																	},
																	{
																		"hexValue": "596f7520646f206e6f7420686176652073756666696369656e742062616c616e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11862:34:3",
																		"type": "",
																		"value": "You do not have sufficient balan"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11839:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11839:58:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11839:58:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11918:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11926:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11914:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11914:15:3"
																	},
																	{
																		"hexValue": "6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11931:4:3",
																		"type": "",
																		"value": "ce"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11907:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11907:29:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11907:29:3"
														}
													]
												},
												"name": "store_literal_in_memory_1cfe29335417d58430919310476bd047bd59346b3a9c3737faf69e319ee4efb7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11820:6:3",
														"type": ""
													}
												],
												"src": "11722:221:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12055:64:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12077:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12085:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12073:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12073:14:3"
																	},
																	{
																		"hexValue": "496e73756666696369656e742062616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12089:22:3",
																		"type": "",
																		"value": "Insufficient balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12066:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12066:46:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12066:46:3"
														}
													]
												},
												"name": "store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12047:6:3",
														"type": ""
													}
												],
												"src": "11949:170:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12231:76:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12253:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12261:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12249:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12249:14:3"
																	},
																	{
																		"hexValue": "436f6e74726163742062616c616e636520697320696e73756666696369656e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12265:34:3",
																		"type": "",
																		"value": "Contract balance is insufficient"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12242:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12242:58:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12242:58:3"
														}
													]
												},
												"name": "store_literal_in_memory_63580c8f2f353fc5b6490d467132dc04a523d5a3d9a1206eea4b2a39c4d766db",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12223:6:3",
														"type": ""
													}
												],
												"src": "12125:182:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12419:61:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12441:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12449:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12437:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12437:14:3"
																	},
																	{
																		"hexValue": "556e7375636365737366756c2053656e64",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12453:19:3",
																		"type": "",
																		"value": "Unsuccessful Send"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12430:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12430:43:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12430:43:3"
														}
													]
												},
												"name": "store_literal_in_memory_93da4a8725cabb0c6def937e69cb0e26d00d98c431219d1ddb6799a41a68cc19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12411:6:3",
														"type": ""
													}
												],
												"src": "12313:167:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12592:120:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12614:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12622:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12610:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12610:14:3"
																	},
																	{
																		"hexValue": "4f6e6c7920746865206f776e65722063616e2064657374726f79207468652063",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12626:34:3",
																		"type": "",
																		"value": "Only the owner can destroy the c"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12603:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12603:58:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12603:58:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12682:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12690:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12678:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12678:15:3"
																	},
																	{
																		"hexValue": "6f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12695:9:3",
																		"type": "",
																		"value": "ontract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12671:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12671:34:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12671:34:3"
														}
													]
												},
												"name": "store_literal_in_memory_ab5f331f6ba431abbea29f740d3c5ab5f38e45bf730065272d8e796b7e3904ce",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12584:6:3",
														"type": ""
													}
												],
												"src": "12486:226:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12824:115:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12846:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12854:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12842:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12842:14:3"
																	},
																	{
																		"hexValue": "4f6e6c7920746865206f776e65722063616e206d696e74206e657720746f6b65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12858:34:3",
																		"type": "",
																		"value": "Only the owner can mint new toke"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12835:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12835:58:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12835:58:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12914:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12922:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12910:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12910:15:3"
																	},
																	{
																		"hexValue": "6e73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12927:4:3",
																		"type": "",
																		"value": "ns"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12903:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12903:29:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12903:29:3"
														}
													]
												},
												"name": "store_literal_in_memory_dbe0e75e0af93930a70b9625aa5f5d0f68d46c213206bbd891b8ca2b2a563776",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12816:6:3",
														"type": ""
													}
												],
												"src": "12718:221:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12988:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13045:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13054:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13057:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13047:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13047:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13047:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13011:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "13036:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "13018:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13018:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "13008:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13008:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13001:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13001:43:3"
															},
															"nodeType": "YulIf",
															"src": "12998:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12981:5:3",
														"type": ""
													}
												],
												"src": "12945:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13113:76:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13167:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13176:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13179:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13169:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13169:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13169:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13136:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "13158:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "13143:14:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13143:21:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "13133:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13133:32:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13126:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13126:40:3"
															},
															"nodeType": "YulIf",
															"src": "13123:60:3"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13106:5:3",
														"type": ""
													}
												],
												"src": "13073:116:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13238:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13295:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13304:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13307:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13297:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13297:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13297:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13261:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "13286:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "13268:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13268:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "13258:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13258:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13251:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13251:43:3"
															},
															"nodeType": "YulIf",
															"src": "13248:63:3"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13231:5:3",
														"type": ""
													}
												],
												"src": "13195:122:3"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack_library(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_1cfe29335417d58430919310476bd047bd59346b3a9c3737faf69e319ee4efb7_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_1cfe29335417d58430919310476bd047bd59346b3a9c3737faf69e319ee4efb7(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_63580c8f2f353fc5b6490d467132dc04a523d5a3d9a1206eea4b2a39c4d766db_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_63580c8f2f353fc5b6490d467132dc04a523d5a3d9a1206eea4b2a39c4d766db(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_93da4a8725cabb0c6def937e69cb0e26d00d98c431219d1ddb6799a41a68cc19_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_93da4a8725cabb0c6def937e69cb0e26d00d98c431219d1ddb6799a41a68cc19(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_ab5f331f6ba431abbea29f740d3c5ab5f38e45bf730065272d8e796b7e3904ce_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 39)\n        store_literal_in_memory_ab5f331f6ba431abbea29f740d3c5ab5f38e45bf730065272d8e796b7e3904ce(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_dbe0e75e0af93930a70b9625aa5f5d0f68d46c213206bbd891b8ca2b2a563776_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_dbe0e75e0af93930a70b9625aa5f5d0f68d46c213206bbd891b8ca2b2a563776(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack_library(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_1cfe29335417d58430919310476bd047bd59346b3a9c3737faf69e319ee4efb7__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1cfe29335417d58430919310476bd047bd59346b3a9c3737faf69e319ee4efb7_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_63580c8f2f353fc5b6490d467132dc04a523d5a3d9a1206eea4b2a39c4d766db__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_63580c8f2f353fc5b6490d467132dc04a523d5a3d9a1206eea4b2a39c4d766db_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_93da4a8725cabb0c6def937e69cb0e26d00d98c431219d1ddb6799a41a68cc19__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_93da4a8725cabb0c6def937e69cb0e26d00d98c431219d1ddb6799a41a68cc19_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_ab5f331f6ba431abbea29f740d3c5ab5f38e45bf730065272d8e796b7e3904ce__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ab5f331f6ba431abbea29f740d3c5ab5f38e45bf730065272d8e796b7e3904ce_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_dbe0e75e0af93930a70b9625aa5f5d0f68d46c213206bbd891b8ca2b2a563776__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_dbe0e75e0af93930a70b9625aa5f5d0f68d46c213206bbd891b8ca2b2a563776_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_library_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack_library(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack_library(value1,  add(headStart, 32))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_1cfe29335417d58430919310476bd047bd59346b3a9c3737faf69e319ee4efb7(memPtr) {\n\n        mstore(add(memPtr, 0), \"You do not have sufficient balan\")\n\n        mstore(add(memPtr, 32), \"ce\")\n\n    }\n\n    function store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient balance\")\n\n    }\n\n    function store_literal_in_memory_63580c8f2f353fc5b6490d467132dc04a523d5a3d9a1206eea4b2a39c4d766db(memPtr) {\n\n        mstore(add(memPtr, 0), \"Contract balance is insufficient\")\n\n    }\n\n    function store_literal_in_memory_93da4a8725cabb0c6def937e69cb0e26d00d98c431219d1ddb6799a41a68cc19(memPtr) {\n\n        mstore(add(memPtr, 0), \"Unsuccessful Send\")\n\n    }\n\n    function store_literal_in_memory_ab5f331f6ba431abbea29f740d3c5ab5f38e45bf730065272d8e796b7e3904ce(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only the owner can destroy the c\")\n\n        mstore(add(memPtr, 32), \"ontract\")\n\n    }\n\n    function store_literal_in_memory_dbe0e75e0af93930a70b9625aa5f5d0f68d46c213206bbd891b8ca2b2a563776(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only the owner can mint new toke\")\n\n        mstore(add(memPtr, 32), \"ns\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {
								"Library.sol": {
									"customLib": [
										{
											"length": 20,
											"start": 2386
										}
									]
								}
							},
							"object": "60806040526004361061008a5760003560e01c806343d726d61161005957806343d726d61461014b57806370a082311461016257806398d5fdca1461019f578063a9059cbb146101ca578063e4849b32146102075761008b565b8063150704011461008d57806317d7de7c146100b857806318160ddd146100e357806340c10f191461010e5761008b565b5b005b34801561009957600080fd5b506100a2610237565b6040516100af9190610db8565b60405180910390f35b3480156100c457600080fd5b506100cd6102c9565b6040516100da9190610db8565b60405180910390f35b3480156100ef57600080fd5b506100f861035b565b6040516101059190610e9a565b60405180910390f35b34801561011a57600080fd5b5061013560048036038101906101309190610bbc565b610365565b6040516101429190610d9d565b60405180910390f35b34801561015757600080fd5b50610160610502565b005b34801561016e57600080fd5b5061018960048036038101906101849190610b8f565b6105ce565b6040516101969190610e9a565b60405180910390f35b3480156101ab57600080fd5b506101b4610617565b6040516101c19190610e9a565b60405180910390f35b3480156101d657600080fd5b506101f160048036038101906101ec9190610bbc565b610621565b6040516101fe9190610d9d565b60405180910390f35b610221600480360381019061021c9190610c29565b610850565b60405161022e9190610d9d565b60405180910390f35b60606002805461024690611059565b80601f016020809104026020016040519081016040528092919081815260200182805461027290611059565b80156102bf5780601f10610294576101008083540402835291602001916102bf565b820191906000526020600020905b8154815290600101906020018083116102a257829003601f168201915b5050505050905090565b6060600180546102d890611059565b80601f016020809104026020016040519081016040528092919081815260200182805461030490611059565b80156103515780601f1061032657610100808354040283529160200191610351565b820191906000526020600020905b81548152906001019060200180831161033457829003601f168201915b5050505050905090565b6000600454905090565b600060011515600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515146103fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103f190610e7a565b60405180910390fd5b61040f82600454610b2490919063ffffffff16565b60048190555061046782600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610b2490919063ffffffff16565b600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff167f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885836040516104f09190610e9a565b60405180910390a26001905092915050565b60011515600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514610595576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058c90610e5a565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b6000600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600354905090565b60008061067683600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610b3a90919063ffffffff16565b10156106b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ae90610dda565b60405180910390fd5b61070982600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610b3a90919063ffffffff16565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061079e82600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610b2490919063ffffffff16565b600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161083e9190610e9a565b60405180910390a36001905092915050565b6000806108a583600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610b3a90919063ffffffff16565b10156108e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108dd90610dfa565b60405180910390fd5b6000610258836108f69190610f50565b9050600061090d8247610b3a90919063ffffffff16565b101561094e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161094590610e1a565b60405180910390fd5b600073__$97e65d3ecb950a85cbb8a7b3a778484171$__63c0ba8f4283336040518363ffffffff1660e01b8152600401610989929190610eb5565b60206040518083038186803b1580156109a157600080fd5b505af41580156109b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109d99190610bfc565b905080610a1b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a1290610e3a565b60405180910390fd5b610a6d84600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610b3a90919063ffffffff16565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610ac584600454610b3a90919063ffffffff16565b6004819055503373ffffffffffffffffffffffffffffffffffffffff167f5e5e995ce3133561afceaa51a9a154d5db228cd7525d34df5185582c18d3df0985604051610b119190610e9a565b60405180910390a2600192505050919050565b60008183610b329190610efa565b905092915050565b60008183610b489190610faa565b905092915050565b600081359050610b5f81611267565b92915050565b600081519050610b748161127e565b92915050565b600081359050610b8981611295565b92915050565b600060208284031215610ba557610ba46110e9565b5b6000610bb384828501610b50565b91505092915050565b60008060408385031215610bd357610bd26110e9565b5b6000610be185828601610b50565b9250506020610bf285828601610b7a565b9150509250929050565b600060208284031215610c1257610c116110e9565b5b6000610c2084828501610b65565b91505092915050565b600060208284031215610c3f57610c3e6110e9565b5b6000610c4d84828501610b7a565b91505092915050565b610c5f81610fde565b82525050565b610c6e81610ff0565b82525050565b6000610c7f82610ede565b610c898185610ee9565b9350610c99818560208601611026565b610ca2816110ee565b840191505092915050565b6000610cba602283610ee9565b9150610cc5826110ff565b604082019050919050565b6000610cdd601483610ee9565b9150610ce88261114e565b602082019050919050565b6000610d00602083610ee9565b9150610d0b82611177565b602082019050919050565b6000610d23601183610ee9565b9150610d2e826111a0565b602082019050919050565b6000610d46602783610ee9565b9150610d51826111c9565b604082019050919050565b6000610d69602283610ee9565b9150610d7482611218565b604082019050919050565b610d888161101c565b82525050565b610d978161101c565b82525050565b6000602082019050610db26000830184610c65565b92915050565b60006020820190508181036000830152610dd28184610c74565b905092915050565b60006020820190508181036000830152610df381610cad565b9050919050565b60006020820190508181036000830152610e1381610cd0565b9050919050565b60006020820190508181036000830152610e3381610cf3565b9050919050565b60006020820190508181036000830152610e5381610d16565b9050919050565b60006020820190508181036000830152610e7381610d39565b9050919050565b60006020820190508181036000830152610e9381610d5c565b9050919050565b6000602082019050610eaf6000830184610d7f565b92915050565b6000604082019050610eca6000830185610d8e565b610ed76020830184610c56565b9392505050565b600081519050919050565b600082825260208201905092915050565b6000610f058261101c565b9150610f108361101c565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610f4557610f4461108b565b5b828201905092915050565b6000610f5b8261101c565b9150610f668361101c565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610f9f57610f9e61108b565b5b828202905092915050565b6000610fb58261101c565b9150610fc08361101c565b925082821015610fd357610fd261108b565b5b828203905092915050565b6000610fe982610ffc565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b83811015611044578082015181840152602081019050611029565b83811115611053576000848401525b50505050565b6000600282049050600182168061107157607f821691505b60208210811415611085576110846110ba565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f596f7520646f206e6f7420686176652073756666696369656e742062616c616e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b7f496e73756666696369656e742062616c616e6365000000000000000000000000600082015250565b7f436f6e74726163742062616c616e636520697320696e73756666696369656e74600082015250565b7f556e7375636365737366756c2053656e64000000000000000000000000000000600082015250565b7f4f6e6c7920746865206f776e65722063616e2064657374726f7920746865206360008201527f6f6e747261637400000000000000000000000000000000000000000000000000602082015250565b7f4f6e6c7920746865206f776e65722063616e206d696e74206e657720746f6b6560008201527f6e73000000000000000000000000000000000000000000000000000000000000602082015250565b61127081610fde565b811461127b57600080fd5b50565b61128781610ff0565b811461129257600080fd5b50565b61129e8161101c565b81146112a957600080fd5b5056fea26469706673582212205ee20f76ce4fedaaf9f53b50fc9504c3f7d1ef3d2cc9e54abb39850a57b0d62b64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x8A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x43D726D6 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x43D726D6 EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0x98D5FDCA EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1CA JUMPI DUP1 PUSH4 0xE4849B32 EQ PUSH2 0x207 JUMPI PUSH2 0x8B JUMP JUMPDEST DUP1 PUSH4 0x15070401 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x17D7DE7C EQ PUSH2 0xB8 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xE3 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x10E JUMPI PUSH2 0x8B JUMP JUMPDEST JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x99 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA2 PUSH2 0x237 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAF SWAP2 SWAP1 PUSH2 0xDB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xCD PUSH2 0x2C9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDA SWAP2 SWAP1 PUSH2 0xDB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF8 PUSH2 0x35B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x105 SWAP2 SWAP1 PUSH2 0xE9A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x135 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x130 SWAP2 SWAP1 PUSH2 0xBBC JUMP JUMPDEST PUSH2 0x365 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x142 SWAP2 SWAP1 PUSH2 0xD9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x157 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x160 PUSH2 0x502 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x189 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x184 SWAP2 SWAP1 PUSH2 0xB8F JUMP JUMPDEST PUSH2 0x5CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x196 SWAP2 SWAP1 PUSH2 0xE9A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B4 PUSH2 0x617 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C1 SWAP2 SWAP1 PUSH2 0xE9A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EC SWAP2 SWAP1 PUSH2 0xBBC JUMP JUMPDEST PUSH2 0x621 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FE SWAP2 SWAP1 PUSH2 0xD9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x221 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21C SWAP2 SWAP1 PUSH2 0xC29 JUMP JUMPDEST PUSH2 0x850 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22E SWAP2 SWAP1 PUSH2 0xD9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x246 SWAP1 PUSH2 0x1059 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x272 SWAP1 PUSH2 0x1059 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2BF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x294 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2BF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2A2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x2D8 SWAP1 PUSH2 0x1059 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x304 SWAP1 PUSH2 0x1059 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x351 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x326 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x351 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x334 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 ISZERO ISZERO PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x3FA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F1 SWAP1 PUSH2 0xE7A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x40F DUP3 PUSH1 0x4 SLOAD PUSH2 0xB24 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH2 0x467 DUP3 PUSH1 0x5 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xB24 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF6798A560793A54C3BCFE86A93CDE1E73087D944C0EA20544137D4121396885 DUP4 PUSH1 0x40 MLOAD PUSH2 0x4F0 SWAP2 SWAP1 PUSH2 0xE9A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x595 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58C SWAP1 PUSH2 0xE5A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x676 DUP4 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xB3A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST LT ISZERO PUSH2 0x6B7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AE SWAP1 PUSH2 0xDDA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x709 DUP3 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xB3A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x79E DUP3 PUSH1 0x5 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xB24 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x83E SWAP2 SWAP1 PUSH2 0xE9A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x8A5 DUP4 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xB3A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST LT ISZERO PUSH2 0x8E6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8DD SWAP1 PUSH2 0xDFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x258 DUP4 PUSH2 0x8F6 SWAP2 SWAP1 PUSH2 0xF50 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x90D DUP3 SELFBALANCE PUSH2 0xB3A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST LT ISZERO PUSH2 0x94E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x945 SWAP1 PUSH2 0xE1A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0x0 PUSH4 0xC0BA8F42 DUP4 CALLER PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x989 SWAP3 SWAP2 SWAP1 PUSH2 0xEB5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x9B5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9D9 SWAP2 SWAP1 PUSH2 0xBFC JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xA1B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA12 SWAP1 PUSH2 0xE3A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA6D DUP5 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xB3A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xAC5 DUP5 PUSH1 0x4 SLOAD PUSH2 0xB3A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5E5E995CE3133561AFCEAA51A9A154D5DB228CD7525D34DF5185582C18D3DF09 DUP6 PUSH1 0x40 MLOAD PUSH2 0xB11 SWAP2 SWAP1 PUSH2 0xE9A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xB32 SWAP2 SWAP1 PUSH2 0xEFA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xB48 SWAP2 SWAP1 PUSH2 0xFAA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB5F DUP2 PUSH2 0x1267 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xB74 DUP2 PUSH2 0x127E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB89 DUP2 PUSH2 0x1295 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBA5 JUMPI PUSH2 0xBA4 PUSH2 0x10E9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBB3 DUP5 DUP3 DUP6 ADD PUSH2 0xB50 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBD3 JUMPI PUSH2 0xBD2 PUSH2 0x10E9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBE1 DUP6 DUP3 DUP7 ADD PUSH2 0xB50 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xBF2 DUP6 DUP3 DUP7 ADD PUSH2 0xB7A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC12 JUMPI PUSH2 0xC11 PUSH2 0x10E9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC20 DUP5 DUP3 DUP6 ADD PUSH2 0xB65 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC3F JUMPI PUSH2 0xC3E PUSH2 0x10E9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC4D DUP5 DUP3 DUP6 ADD PUSH2 0xB7A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC5F DUP2 PUSH2 0xFDE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xC6E DUP2 PUSH2 0xFF0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC7F DUP3 PUSH2 0xEDE JUMP JUMPDEST PUSH2 0xC89 DUP2 DUP6 PUSH2 0xEE9 JUMP JUMPDEST SWAP4 POP PUSH2 0xC99 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1026 JUMP JUMPDEST PUSH2 0xCA2 DUP2 PUSH2 0x10EE JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCBA PUSH1 0x22 DUP4 PUSH2 0xEE9 JUMP JUMPDEST SWAP2 POP PUSH2 0xCC5 DUP3 PUSH2 0x10FF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCDD PUSH1 0x14 DUP4 PUSH2 0xEE9 JUMP JUMPDEST SWAP2 POP PUSH2 0xCE8 DUP3 PUSH2 0x114E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD00 PUSH1 0x20 DUP4 PUSH2 0xEE9 JUMP JUMPDEST SWAP2 POP PUSH2 0xD0B DUP3 PUSH2 0x1177 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD23 PUSH1 0x11 DUP4 PUSH2 0xEE9 JUMP JUMPDEST SWAP2 POP PUSH2 0xD2E DUP3 PUSH2 0x11A0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD46 PUSH1 0x27 DUP4 PUSH2 0xEE9 JUMP JUMPDEST SWAP2 POP PUSH2 0xD51 DUP3 PUSH2 0x11C9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD69 PUSH1 0x22 DUP4 PUSH2 0xEE9 JUMP JUMPDEST SWAP2 POP PUSH2 0xD74 DUP3 PUSH2 0x1218 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD88 DUP2 PUSH2 0x101C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xD97 DUP2 PUSH2 0x101C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDB2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC65 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xDD2 DUP2 DUP5 PUSH2 0xC74 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xDF3 DUP2 PUSH2 0xCAD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE13 DUP2 PUSH2 0xCD0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE33 DUP2 PUSH2 0xCF3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE53 DUP2 PUSH2 0xD16 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE73 DUP2 PUSH2 0xD39 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE93 DUP2 PUSH2 0xD5C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEAF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD7F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xECA PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xD8E JUMP JUMPDEST PUSH2 0xED7 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xC56 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF05 DUP3 PUSH2 0x101C JUMP JUMPDEST SWAP2 POP PUSH2 0xF10 DUP4 PUSH2 0x101C JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0xF45 JUMPI PUSH2 0xF44 PUSH2 0x108B JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF5B DUP3 PUSH2 0x101C JUMP JUMPDEST SWAP2 POP PUSH2 0xF66 DUP4 PUSH2 0x101C JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xF9F JUMPI PUSH2 0xF9E PUSH2 0x108B JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFB5 DUP3 PUSH2 0x101C JUMP JUMPDEST SWAP2 POP PUSH2 0xFC0 DUP4 PUSH2 0x101C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0xFD3 JUMPI PUSH2 0xFD2 PUSH2 0x108B JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFE9 DUP3 PUSH2 0xFFC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1044 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1029 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1053 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1071 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1085 JUMPI PUSH2 0x1084 PUSH2 0x10BA JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x596F7520646F206E6F7420686176652073756666696369656E742062616C616E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6365000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x436F6E74726163742062616C616E636520697320696E73756666696369656E74 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x556E7375636365737366756C2053656E64000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F6E6C7920746865206F776E65722063616E2064657374726F79207468652063 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F6E747261637400000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F6E6C7920746865206F776E65722063616E206D696E74206E657720746F6B65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E73000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x1270 DUP2 PUSH2 0xFDE JUMP JUMPDEST DUP2 EQ PUSH2 0x127B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1287 DUP2 PUSH2 0xFF0 JUMP JUMPDEST DUP2 EQ PUSH2 0x1292 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x129E DUP2 PUSH2 0x101C JUMP JUMPDEST DUP2 EQ PUSH2 0x12A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5E 0xE2 0xF PUSH23 0xCE4FEDAAF9F53B50FC9504C3F7D1EF3D2CC9E54ABB3985 EXP JUMPI 0xB0 0xD6 0x2B PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "115:3797:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1310:97;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1214:88;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1110:96;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2020:319;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3548:266;;;;;;;;;;;;;:::i;:::-;;2408:116;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1415:89;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1512:496;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2530:1010;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1310:97;1353:13;1392:6;1385:13;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1310:97;:::o;1214:88::-;1252:13;1290:4;1283:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1214:88;:::o;1110:96::-;1153:7;1187:11;;1180:18;;1110:96;:::o;2020:319::-;2079:4;2130;2109:25;;:5;:17;2115:10;2109:17;;;;;;;;;;;;;;;;;;;;;;;;;:25;;;2101:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;2198:22;2214:5;2198:11;;:15;;:22;;;;:::i;:::-;2184:11;:36;;;;2247:27;2268:5;2248:8;:14;2258:2;2248:14;;;;;;;;;;;;;;;;2247:20;;:27;;;;:::i;:::-;2231:8;:12;2240:2;2231:12;;;;;;;;;;;;;;;:43;;;;2297:2;2290:18;;;2302:5;2290:18;;;;;;:::i;:::-;;;;;;;;2327:4;2320:11;;2020:319;;;;:::o;3548:266::-;3660:4;3639:25;;:5;:17;3645:10;3639:17;;;;;;;;;;;;;;;;;;;;;;;;;:25;;;3631:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;3800:5;;;;;;;;;;3787:19;;;2408:116;2466:7;2498:8;:18;2507:8;2498:18;;;;;;;;;;;;;;;;2491:25;;2408:116;;;:::o;1415:89::-;1457:7;1490:5;;1483:12;;1415:89;:::o;1512:496::-;1573:4;1682:1;1647:31;1672:5;1647:8;:20;1656:10;1647:20;;;;;;;;;;;;;;;;:24;;:31;;;;:::i;:::-;:36;;1639:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;1806:31;1831:5;1806:8;:20;1815:10;1806:20;;;;;;;;;;;;;;;;:24;;:31;;;;:::i;:::-;1783:8;:20;1792:10;1783:20;;;;;;;;;;;;;;;:54;;;;1863:23;1880:5;1863:8;:12;1872:2;1863:12;;;;;;;;;;;;;;;;:16;;:23;;;;:::i;:::-;1848:8;:12;1857:2;1848:12;;;;;;;;;;;;;;;:38;;;;1967:2;1946:31;;1955:10;1946:31;;;1971:5;1946:31;;;;;;:::i;:::-;;;;;;;;1995:4;1988:11;;1512:496;;;;:::o;2530:1010::-;2583:4;2646:1;2613:31;2638:5;2613:8;:20;2622:10;2613:20;;;;;;;;;;;;;;;;:24;;:31;;;;:::i;:::-;:34;;2605:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;2753:17;2781:3;2773:5;:11;;;;:::i;:::-;2753:31;;3072:1;3034:36;3060:9;3034:21;:25;;:36;;;;:::i;:::-;:39;;3026:84;;;;;;;;;;;;:::i;:::-;;;;;;;;;3123:9;3135;:20;3156:9;3167:10;3135:43;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3123:55;;3197:4;3189:33;;;;;;;;;;;;:::i;:::-;;;;;;;;;3256:31;3281:5;3256:8;:20;3265:10;3256:20;;;;;;;;;;;;;;;;:24;;:31;;;;:::i;:::-;3233:8;:20;3242:10;3233:20;;;;;;;;;;;;;;;:54;;;;3360:22;3376:5;3360:11;;:15;;:22;;;;:::i;:::-;3346:11;:36;;;;3463:10;3458:23;;;3475:5;3458:23;;;;;;:::i;:::-;;;;;;;;3528:4;3521:11;;;;2530:1010;;;:::o;2755:96:0:-;2813:7;2843:1;2839;:5;;;;:::i;:::-;2832:12;;2755:96;;;;:::o;3122:::-;3180:7;3210:1;3206;:5;;;;:::i;:::-;3199:12;;3122:96;;;;:::o;7:139:3:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:137::-;206:5;237:6;231:13;222:22;;253:30;277:5;253:30;:::i;:::-;152:137;;;;:::o;295:139::-;341:5;379:6;366:20;357:29;;395:33;422:5;395:33;:::i;:::-;295:139;;;;:::o;440:329::-;499:6;548:2;536:9;527:7;523:23;519:32;516:119;;;554:79;;:::i;:::-;516:119;674:1;699:53;744:7;735:6;724:9;720:22;699:53;:::i;:::-;689:63;;645:117;440:329;;;;:::o;775:474::-;843:6;851;900:2;888:9;879:7;875:23;871:32;868:119;;;906:79;;:::i;:::-;868:119;1026:1;1051:53;1096:7;1087:6;1076:9;1072:22;1051:53;:::i;:::-;1041:63;;997:117;1153:2;1179:53;1224:7;1215:6;1204:9;1200:22;1179:53;:::i;:::-;1169:63;;1124:118;775:474;;;;;:::o;1255:345::-;1322:6;1371:2;1359:9;1350:7;1346:23;1342:32;1339:119;;;1377:79;;:::i;:::-;1339:119;1497:1;1522:61;1575:7;1566:6;1555:9;1551:22;1522:61;:::i;:::-;1512:71;;1468:125;1255:345;;;;:::o;1606:329::-;1665:6;1714:2;1702:9;1693:7;1689:23;1685:32;1682:119;;;1720:79;;:::i;:::-;1682:119;1840:1;1865:53;1910:7;1901:6;1890:9;1886:22;1865:53;:::i;:::-;1855:63;;1811:117;1606:329;;;;:::o;1941:126::-;2036:24;2054:5;2036:24;:::i;:::-;2031:3;2024:37;1941:126;;:::o;2073:109::-;2154:21;2169:5;2154:21;:::i;:::-;2149:3;2142:34;2073:109;;:::o;2188:364::-;2276:3;2304:39;2337:5;2304:39;:::i;:::-;2359:71;2423:6;2418:3;2359:71;:::i;:::-;2352:78;;2439:52;2484:6;2479:3;2472:4;2465:5;2461:16;2439:52;:::i;:::-;2516:29;2538:6;2516:29;:::i;:::-;2511:3;2507:39;2500:46;;2280:272;2188:364;;;;:::o;2558:366::-;2700:3;2721:67;2785:2;2780:3;2721:67;:::i;:::-;2714:74;;2797:93;2886:3;2797:93;:::i;:::-;2915:2;2910:3;2906:12;2899:19;;2558:366;;;:::o;2930:::-;3072:3;3093:67;3157:2;3152:3;3093:67;:::i;:::-;3086:74;;3169:93;3258:3;3169:93;:::i;:::-;3287:2;3282:3;3278:12;3271:19;;2930:366;;;:::o;3302:::-;3444:3;3465:67;3529:2;3524:3;3465:67;:::i;:::-;3458:74;;3541:93;3630:3;3541:93;:::i;:::-;3659:2;3654:3;3650:12;3643:19;;3302:366;;;:::o;3674:::-;3816:3;3837:67;3901:2;3896:3;3837:67;:::i;:::-;3830:74;;3913:93;4002:3;3913:93;:::i;:::-;4031:2;4026:3;4022:12;4015:19;;3674:366;;;:::o;4046:::-;4188:3;4209:67;4273:2;4268:3;4209:67;:::i;:::-;4202:74;;4285:93;4374:3;4285:93;:::i;:::-;4403:2;4398:3;4394:12;4387:19;;4046:366;;;:::o;4418:::-;4560:3;4581:67;4645:2;4640:3;4581:67;:::i;:::-;4574:74;;4657:93;4746:3;4657:93;:::i;:::-;4775:2;4770:3;4766:12;4759:19;;4418:366;;;:::o;4790:118::-;4877:24;4895:5;4877:24;:::i;:::-;4872:3;4865:37;4790:118;;:::o;4914:126::-;5009:24;5027:5;5009:24;:::i;:::-;5004:3;4997:37;4914:126;;:::o;5046:210::-;5133:4;5171:2;5160:9;5156:18;5148:26;;5184:65;5246:1;5235:9;5231:17;5222:6;5184:65;:::i;:::-;5046:210;;;;:::o;5262:313::-;5375:4;5413:2;5402:9;5398:18;5390:26;;5462:9;5456:4;5452:20;5448:1;5437:9;5433:17;5426:47;5490:78;5563:4;5554:6;5490:78;:::i;:::-;5482:86;;5262:313;;;;:::o;5581:419::-;5747:4;5785:2;5774:9;5770:18;5762:26;;5834:9;5828:4;5824:20;5820:1;5809:9;5805:17;5798:47;5862:131;5988:4;5862:131;:::i;:::-;5854:139;;5581:419;;;:::o;6006:::-;6172:4;6210:2;6199:9;6195:18;6187:26;;6259:9;6253:4;6249:20;6245:1;6234:9;6230:17;6223:47;6287:131;6413:4;6287:131;:::i;:::-;6279:139;;6006:419;;;:::o;6431:::-;6597:4;6635:2;6624:9;6620:18;6612:26;;6684:9;6678:4;6674:20;6670:1;6659:9;6655:17;6648:47;6712:131;6838:4;6712:131;:::i;:::-;6704:139;;6431:419;;;:::o;6856:::-;7022:4;7060:2;7049:9;7045:18;7037:26;;7109:9;7103:4;7099:20;7095:1;7084:9;7080:17;7073:47;7137:131;7263:4;7137:131;:::i;:::-;7129:139;;6856:419;;;:::o;7281:::-;7447:4;7485:2;7474:9;7470:18;7462:26;;7534:9;7528:4;7524:20;7520:1;7509:9;7505:17;7498:47;7562:131;7688:4;7562:131;:::i;:::-;7554:139;;7281:419;;;:::o;7706:::-;7872:4;7910:2;7899:9;7895:18;7887:26;;7959:9;7953:4;7949:20;7945:1;7934:9;7930:17;7923:47;7987:131;8113:4;7987:131;:::i;:::-;7979:139;;7706:419;;;:::o;8131:222::-;8224:4;8262:2;8251:9;8247:18;8239:26;;8275:71;8343:1;8332:9;8328:17;8319:6;8275:71;:::i;:::-;8131:222;;;;:::o;8359:356::-;8488:4;8526:2;8515:9;8511:18;8503:26;;8539:79;8615:1;8604:9;8600:17;8591:6;8539:79;:::i;:::-;8628:80;8704:2;8693:9;8689:18;8680:6;8628:80;:::i;:::-;8359:356;;;;;:::o;8802:99::-;8854:6;8888:5;8882:12;8872:22;;8802:99;;;:::o;8907:169::-;8991:11;9025:6;9020:3;9013:19;9065:4;9060:3;9056:14;9041:29;;8907:169;;;;:::o;9082:305::-;9122:3;9141:20;9159:1;9141:20;:::i;:::-;9136:25;;9175:20;9193:1;9175:20;:::i;:::-;9170:25;;9329:1;9261:66;9257:74;9254:1;9251:81;9248:107;;;9335:18;;:::i;:::-;9248:107;9379:1;9376;9372:9;9365:16;;9082:305;;;;:::o;9393:348::-;9433:7;9456:20;9474:1;9456:20;:::i;:::-;9451:25;;9490:20;9508:1;9490:20;:::i;:::-;9485:25;;9678:1;9610:66;9606:74;9603:1;9600:81;9595:1;9588:9;9581:17;9577:105;9574:131;;;9685:18;;:::i;:::-;9574:131;9733:1;9730;9726:9;9715:20;;9393:348;;;;:::o;9747:191::-;9787:4;9807:20;9825:1;9807:20;:::i;:::-;9802:25;;9841:20;9859:1;9841:20;:::i;:::-;9836:25;;9880:1;9877;9874:8;9871:34;;;9885:18;;:::i;:::-;9871:34;9930:1;9927;9923:9;9915:17;;9747:191;;;;:::o;9944:96::-;9981:7;10010:24;10028:5;10010:24;:::i;:::-;9999:35;;9944:96;;;:::o;10046:90::-;10080:7;10123:5;10116:13;10109:21;10098:32;;10046:90;;;:::o;10142:126::-;10179:7;10219:42;10212:5;10208:54;10197:65;;10142:126;;;:::o;10274:77::-;10311:7;10340:5;10329:16;;10274:77;;;:::o;10357:307::-;10425:1;10435:113;10449:6;10446:1;10443:13;10435:113;;;10534:1;10529:3;10525:11;10519:18;10515:1;10510:3;10506:11;10499:39;10471:2;10468:1;10464:10;10459:15;;10435:113;;;10566:6;10563:1;10560:13;10557:101;;;10646:1;10637:6;10632:3;10628:16;10621:27;10557:101;10406:258;10357:307;;;:::o;10670:320::-;10714:6;10751:1;10745:4;10741:12;10731:22;;10798:1;10792:4;10788:12;10819:18;10809:81;;10875:4;10867:6;10863:17;10853:27;;10809:81;10937:2;10929:6;10926:14;10906:18;10903:38;10900:84;;;10956:18;;:::i;:::-;10900:84;10721:269;10670:320;;;:::o;10996:180::-;11044:77;11041:1;11034:88;11141:4;11138:1;11131:15;11165:4;11162:1;11155:15;11182:180;11230:77;11227:1;11220:88;11327:4;11324:1;11317:15;11351:4;11348:1;11341:15;11491:117;11600:1;11597;11590:12;11614:102;11655:6;11706:2;11702:7;11697:2;11690:5;11686:14;11682:28;11672:38;;11614:102;;;:::o;11722:221::-;11862:34;11858:1;11850:6;11846:14;11839:58;11931:4;11926:2;11918:6;11914:15;11907:29;11722:221;:::o;11949:170::-;12089:22;12085:1;12077:6;12073:14;12066:46;11949:170;:::o;12125:182::-;12265:34;12261:1;12253:6;12249:14;12242:58;12125:182;:::o;12313:167::-;12453:19;12449:1;12441:6;12437:14;12430:43;12313:167;:::o;12486:226::-;12626:34;12622:1;12614:6;12610:14;12603:58;12695:9;12690:2;12682:6;12678:15;12671:34;12486:226;:::o;12718:221::-;12858:34;12854:1;12846:6;12842:14;12835:58;12927:4;12922:2;12914:6;12910:15;12903:29;12718:221;:::o;12945:122::-;13018:24;13036:5;13018:24;:::i;:::-;13011:5;13008:35;12998:63;;13057:1;13054;13047:12;12998:63;12945:122;:::o;13073:116::-;13143:21;13158:5;13143:21;:::i;:::-;13136:5;13133:32;13123:60;;13179:1;13176;13169:12;13123:60;13073:116;:::o;13195:122::-;13268:24;13286:5;13268:24;:::i;:::-;13261:5;13258:35;13248:63;;13307:1;13304;13297:12;13248:63;13195:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "966800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "174",
								"balanceOf(address)": "2863",
								"close()": "32137",
								"getName()": "infinite",
								"getPrice()": "2481",
								"getSymbol()": "infinite",
								"mint(address,uint256)": "infinite",
								"sell(uint256)": "infinite",
								"totalSupply()": "2482",
								"transfer(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 115,
									"end": 3912,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 594,
									"end": 1102,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 594,
									"end": 1102,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 594,
									"end": 1102,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 594,
									"end": 1102,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 594,
									"end": 1102,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 594,
									"end": 1102,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 594,
									"end": 1102,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 594,
									"end": 1102,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 594,
									"end": 1102,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 594,
									"end": 1102,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 594,
									"end": 1102,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 657,
									"end": 678,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 657,
									"end": 678,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 657,
									"end": 678,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 657,
									"end": 678,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 657,
									"end": 678,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 657,
									"end": 678,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 657,
									"end": 678,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 657,
									"end": 678,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 657,
									"end": 678,
									"name": "PUSH",
									"source": 1,
									"value": "C"
								},
								{
									"begin": 657,
									"end": 678,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 657,
									"end": 678,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 657,
									"end": 678,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 657,
									"end": 678,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 657,
									"end": 678,
									"name": "PUSH",
									"source": 1,
									"value": "437573746F6D20546F6B656E0000000000000000000000000000000000000000"
								},
								{
									"begin": 657,
									"end": 678,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 657,
									"end": 678,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 657,
									"end": 678,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 657,
									"end": 661,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 657,
									"end": 678,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 657,
									"end": 678,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 657,
									"end": 678,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 657,
									"end": 678,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 657,
									"end": 678,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 657,
									"end": 678,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 657,
									"end": 678,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 657,
									"end": 678,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 657,
									"end": 678,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 657,
									"end": 678,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 657,
									"end": 678,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 657,
									"end": 678,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 657,
									"end": 678,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 657,
									"end": 678,
									"name": "tag",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 657,
									"end": 678,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 657,
									"end": 678,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 689,
									"end": 702,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 689,
									"end": 702,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 689,
									"end": 702,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 689,
									"end": 702,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 689,
									"end": 702,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 689,
									"end": 702,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 689,
									"end": 702,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 689,
									"end": 702,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 689,
									"end": 702,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 689,
									"end": 702,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 689,
									"end": 702,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 689,
									"end": 702,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 689,
									"end": 702,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 689,
									"end": 702,
									"name": "PUSH",
									"source": 1,
									"value": "4354000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 689,
									"end": 702,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 689,
									"end": 702,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 689,
									"end": 702,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 689,
									"end": 695,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 689,
									"end": 702,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 689,
									"end": 702,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 689,
									"end": 702,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 689,
									"end": 702,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 689,
									"end": 702,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 689,
									"end": 702,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 689,
									"end": 702,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 689,
									"end": 702,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 689,
									"end": 702,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 689,
									"end": 702,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 689,
									"end": 702,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 689,
									"end": 702,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 689,
									"end": 702,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 689,
									"end": 702,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 689,
									"end": 702,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 689,
									"end": 702,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 721,
									"end": 724,
									"name": "PUSH",
									"source": 1,
									"value": "258"
								},
								{
									"begin": 713,
									"end": 718,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 713,
									"end": 724,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 713,
									"end": 724,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 713,
									"end": 724,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 713,
									"end": 724,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 825,
									"end": 835,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 808,
									"end": 813,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 808,
									"end": 813,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 808,
									"end": 836,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 808,
									"end": 836,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 808,
									"end": 836,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 808,
									"end": 836,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 808,
									"end": 836,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 808,
									"end": 836,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 808,
									"end": 836,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 808,
									"end": 836,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 808,
									"end": 836,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 808,
									"end": 836,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 808,
									"end": 836,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 808,
									"end": 836,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 808,
									"end": 836,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 808,
									"end": 836,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 808,
									"end": 836,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 808,
									"end": 836,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 808,
									"end": 836,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 808,
									"end": 836,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 913,
									"end": 917,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 900,
									"end": 905,
									"name": "PUSH",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 900,
									"end": 912,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 906,
									"end": 911,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 906,
									"end": 911,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 906,
									"end": 911,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 906,
									"end": 911,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 906,
									"end": 911,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 906,
									"end": 911,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 906,
									"end": 911,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 906,
									"end": 911,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 906,
									"end": 911,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 906,
									"end": 911,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 906,
									"end": 911,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 900,
									"end": 912,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 900,
									"end": 912,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 900,
									"end": 912,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 900,
									"end": 912,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 900,
									"end": 912,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 900,
									"end": 912,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 900,
									"end": 912,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 900,
									"end": 912,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 900,
									"end": 912,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 900,
									"end": 912,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 900,
									"end": 912,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 900,
									"end": 912,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 900,
									"end": 912,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 900,
									"end": 912,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 900,
									"end": 912,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 900,
									"end": 912,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 900,
									"end": 917,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 900,
									"end": 917,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 900,
									"end": 917,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 900,
									"end": 917,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 900,
									"end": 917,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 900,
									"end": 917,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 900,
									"end": 917,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 900,
									"end": 917,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 900,
									"end": 917,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 900,
									"end": 917,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 900,
									"end": 917,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 900,
									"end": 917,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 900,
									"end": 917,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 900,
									"end": 917,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 900,
									"end": 917,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 900,
									"end": 917,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 900,
									"end": 917,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 900,
									"end": 917,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1007,
									"end": 1014,
									"name": "PUSH",
									"source": 1,
									"value": "F4240"
								},
								{
									"begin": 993,
									"end": 1004,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 993,
									"end": 1014,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 993,
									"end": 1014,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 993,
									"end": 1014,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 993,
									"end": 1014,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1043,
									"end": 1054,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1043,
									"end": 1054,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 1025,
									"end": 1033,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1025,
									"end": 1040,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1034,
									"end": 1039,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1034,
									"end": 1039,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1034,
									"end": 1039,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1034,
									"end": 1039,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 1034,
									"end": 1039,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1034,
									"end": 1039,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 1034,
									"end": 1039,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 1034,
									"end": 1039,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1034,
									"end": 1039,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 1034,
									"end": 1039,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1034,
									"end": 1039,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1025,
									"end": 1040,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1025,
									"end": 1040,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1025,
									"end": 1040,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1025,
									"end": 1040,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1025,
									"end": 1040,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1025,
									"end": 1040,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1025,
									"end": 1040,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1025,
									"end": 1040,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1025,
									"end": 1040,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1025,
									"end": 1040,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1025,
									"end": 1040,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1025,
									"end": 1040,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1025,
									"end": 1040,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1025,
									"end": 1040,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1025,
									"end": 1040,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 1025,
									"end": 1054,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1025,
									"end": 1054,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1025,
									"end": 1054,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1025,
									"end": 1054,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1075,
									"end": 1080,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1075,
									"end": 1080,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1075,
									"end": 1080,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 1075,
									"end": 1080,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1075,
									"end": 1080,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 1075,
									"end": 1080,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 1075,
									"end": 1080,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1075,
									"end": 1080,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 1075,
									"end": 1080,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1075,
									"end": 1080,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1070,
									"end": 1094,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1070,
									"end": 1094,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1070,
									"end": 1094,
									"name": "PUSH",
									"source": 1,
									"value": "F6798A560793A54C3BCFE86A93CDE1E73087D944C0EA20544137D4121396885"
								},
								{
									"begin": 1082,
									"end": 1093,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1082,
									"end": 1093,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 1070,
									"end": 1094,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1070,
									"end": 1094,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1070,
									"end": 1094,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1070,
									"end": 1094,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1070,
									"end": 1094,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1070,
									"end": 1094,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1070,
									"end": 1094,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1070,
									"end": 1094,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1070,
									"end": 1094,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1070,
									"end": 1094,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1070,
									"end": 1094,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1070,
									"end": 1094,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1070,
									"end": 1094,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1070,
									"end": 1094,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1070,
									"end": 1094,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1070,
									"end": 1094,
									"name": "LOG2",
									"source": 1
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "tag",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 7,
									"end": 125,
									"name": "tag",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 7,
									"end": 125,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 94,
									"end": 118,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 112,
									"end": 117,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 94,
									"end": 118,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 94,
									"end": 118,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 94,
									"end": 118,
									"name": "tag",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 94,
									"end": 118,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 89,
									"end": 92,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 82,
									"end": 119,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 7,
									"end": 125,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7,
									"end": 125,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7,
									"end": 125,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 131,
									"end": 353,
									"name": "tag",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 131,
									"end": 353,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 224,
									"end": 228,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 262,
									"end": 264,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 251,
									"end": 260,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 247,
									"end": 265,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 239,
									"end": 265,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 239,
									"end": 265,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 275,
									"end": 346,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 343,
									"end": 344,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 332,
									"end": 341,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 328,
									"end": 345,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 319,
									"end": 325,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 275,
									"end": 346,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 275,
									"end": 346,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 275,
									"end": 346,
									"name": "tag",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 275,
									"end": 346,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 131,
									"end": 353,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 131,
									"end": 353,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 131,
									"end": 353,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 131,
									"end": 353,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 131,
									"end": 353,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 359,
									"end": 436,
									"name": "tag",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 359,
									"end": 436,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 396,
									"end": 403,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 425,
									"end": 430,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 414,
									"end": 430,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 414,
									"end": 430,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 359,
									"end": 436,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 359,
									"end": 436,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 359,
									"end": 436,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 359,
									"end": 436,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 442,
									"end": 762,
									"name": "tag",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 442,
									"end": 762,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 486,
									"end": 492,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 523,
									"end": 524,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 517,
									"end": 521,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 513,
									"end": 525,
									"name": "DIV",
									"source": 3
								},
								{
									"begin": 503,
									"end": 525,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 503,
									"end": 525,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 570,
									"end": 571,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 564,
									"end": 568,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 560,
									"end": 572,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 591,
									"end": 609,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 581,
									"end": 662,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 581,
									"end": 662,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 647,
									"end": 651,
									"name": "PUSH",
									"source": 3,
									"value": "7F"
								},
								{
									"begin": 639,
									"end": 645,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 635,
									"end": 652,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 625,
									"end": 652,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 625,
									"end": 652,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 581,
									"end": 662,
									"name": "tag",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 581,
									"end": 662,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 709,
									"end": 711,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 701,
									"end": 707,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 698,
									"end": 712,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 678,
									"end": 696,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 675,
									"end": 713,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 672,
									"end": 756,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 672,
									"end": 756,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 672,
									"end": 756,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 728,
									"end": 746,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "32"
								},
								{
									"begin": 728,
									"end": 746,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "33"
								},
								{
									"begin": 728,
									"end": 746,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 728,
									"end": 746,
									"name": "tag",
									"source": 3,
									"value": "32"
								},
								{
									"begin": 728,
									"end": 746,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 672,
									"end": 756,
									"name": "tag",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 672,
									"end": 756,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 493,
									"end": 762,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 442,
									"end": 762,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 442,
									"end": 762,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 442,
									"end": 762,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 442,
									"end": 762,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 768,
									"end": 948,
									"name": "tag",
									"source": 3,
									"value": "33"
								},
								{
									"begin": 768,
									"end": 948,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 816,
									"end": 893,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 813,
									"end": 814,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 806,
									"end": 894,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 913,
									"end": 917,
									"name": "PUSH",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 910,
									"end": 911,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 903,
									"end": 918,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 937,
									"end": 941,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 934,
									"end": 935,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 927,
									"end": 942,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 115,
									"end": 3912,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205ee20f76ce4fedaaf9f53b50fc9504c3f7d1ef3d2cc9e54abb39850a57b0d62b64736f6c63430008070033",
									".code": [
										{
											"begin": 115,
											"end": 3912,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 115,
											"end": 3912,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 115,
											"end": 3912,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 115,
											"end": 3912,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 115,
											"end": 3912,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 115,
											"end": 3912,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 115,
											"end": 3912,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 115,
											"end": 3912,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 115,
											"end": 3912,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 115,
											"end": 3912,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 115,
											"end": 3912,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 115,
											"end": 3912,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 115,
											"end": 3912,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 115,
											"end": 3912,
											"name": "PUSH",
											"source": 1,
											"value": "43D726D6"
										},
										{
											"begin": 115,
											"end": 3912,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 115,
											"end": 3912,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 115,
											"end": 3912,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 115,
											"end": 3912,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 115,
											"end": 3912,
											"name": "PUSH",
											"source": 1,
											"value": "43D726D6"
										},
										{
											"begin": 115,
											"end": 3912,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 115,
											"end": 3912,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 115,
											"end": 3912,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 115,
											"end": 3912,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 115,
											"end": 3912,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 115,
											"end": 3912,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 115,
											"end": 3912,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 115,
											"end": 3912,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 115,
											"end": 3912,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 115,
											"end": 3912,
											"name": "PUSH",
											"source": 1,
											"value": "98D5FDCA"
										},
										{
											"begin": 115,
											"end": 3912,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 115,
											"end": 3912,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 115,
											"end": 3912,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 115,
											"end": 3912,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 115,
											"end": 3912,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 115,
											"end": 3912,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 115,
											"end": 3912,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 115,
											"end": 3912,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 115,
											"end": 3912,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 115,
											"end": 3912,
											"name": "PUSH",
											"source": 1,
											"value": "E4849B32"
										},
										{
											"begin": 115,
											"end": 3912,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 115,
											"end": 3912,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 115,
											"end": 3912,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 115,
											"end": 3912,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 115,
											"end": 3912,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 115,
											"end": 3912,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 115,
											"end": 3912,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 115,
											"end": 3912,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 115,
											"end": 3912,
											"name": "PUSH",
											"source": 1,
											"value": "15070401"
										},
										{
											"begin": 115,
											"end": 3912,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 115,
											"end": 3912,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 115,
											"end": 3912,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 115,
											"end": 3912,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 115,
											"end": 3912,
											"name": "PUSH",
											"source": 1,
											"value": "17D7DE7C"
										},
										{
											"begin": 115,
											"end": 3912,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 115,
											"end": 3912,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 115,
											"end": 3912,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 115,
											"end": 3912,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 115,
											"end": 3912,
											"name": "PUSH",
											"source": 1,
											"value": "18160DDD"
										},
										{
											"begin": 115,
											"end": 3912,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 115,
											"end": 3912,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 115,
											"end": 3912,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 115,
											"end": 3912,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 115,
											"end": 3912,
											"name": "PUSH",
											"source": 1,
											"value": "40C10F19"
										},
										{
											"begin": 115,
											"end": 3912,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 115,
											"end": 3912,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 115,
											"end": 3912,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 115,
											"end": 3912,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 115,
											"end": 3912,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 115,
											"end": 3912,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 115,
											"end": 3912,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 115,
											"end": 3912,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 115,
											"end": 3912,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 115,
											"end": 3912,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1310,
											"end": 1407,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1310,
											"end": 1407,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1310,
											"end": 1407,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1310,
											"end": 1407,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1310,
											"end": 1407,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1310,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1310,
											"end": 1407,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1310,
											"end": 1407,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1310,
											"end": 1407,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1310,
											"end": 1407,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1310,
											"end": 1407,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1310,
											"end": 1407,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1310,
											"end": 1407,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1310,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1310,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1310,
											"end": 1407,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1310,
											"end": 1407,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1310,
											"end": 1407,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1310,
											"end": 1407,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1310,
											"end": 1407,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1310,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1310,
											"end": 1407,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1310,
											"end": 1407,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1310,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1310,
											"end": 1407,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1310,
											"end": 1407,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1310,
											"end": 1407,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1310,
											"end": 1407,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1310,
											"end": 1407,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1310,
											"end": 1407,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1310,
											"end": 1407,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1310,
											"end": 1407,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1310,
											"end": 1407,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1310,
											"end": 1407,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1214,
											"end": 1302,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1214,
											"end": 1302,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1214,
											"end": 1302,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1214,
											"end": 1302,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1214,
											"end": 1302,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1214,
											"end": 1302,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1214,
											"end": 1302,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1214,
											"end": 1302,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1214,
											"end": 1302,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1214,
											"end": 1302,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1214,
											"end": 1302,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1214,
											"end": 1302,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1214,
											"end": 1302,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1214,
											"end": 1302,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1214,
											"end": 1302,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1214,
											"end": 1302,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1214,
											"end": 1302,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1214,
											"end": 1302,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1214,
											"end": 1302,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1214,
											"end": 1302,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1214,
											"end": 1302,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1214,
											"end": 1302,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1214,
											"end": 1302,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1214,
											"end": 1302,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1214,
											"end": 1302,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1214,
											"end": 1302,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1214,
											"end": 1302,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1214,
											"end": 1302,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1214,
											"end": 1302,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1214,
											"end": 1302,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1214,
											"end": 1302,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1214,
											"end": 1302,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1214,
											"end": 1302,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1214,
											"end": 1302,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1110,
											"end": 1206,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1110,
											"end": 1206,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1110,
											"end": 1206,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1110,
											"end": 1206,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1110,
											"end": 1206,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1110,
											"end": 1206,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1110,
											"end": 1206,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1110,
											"end": 1206,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1110,
											"end": 1206,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1110,
											"end": 1206,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1110,
											"end": 1206,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1110,
											"end": 1206,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1110,
											"end": 1206,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1110,
											"end": 1206,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1110,
											"end": 1206,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1110,
											"end": 1206,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1110,
											"end": 1206,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1110,
											"end": 1206,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1110,
											"end": 1206,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1110,
											"end": 1206,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1110,
											"end": 1206,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1110,
											"end": 1206,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1110,
											"end": 1206,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1110,
											"end": 1206,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1110,
											"end": 1206,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1110,
											"end": 1206,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1110,
											"end": 1206,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1110,
											"end": 1206,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1110,
											"end": 1206,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1110,
											"end": 1206,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1110,
											"end": 1206,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1110,
											"end": 1206,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1110,
											"end": 1206,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1110,
											"end": 1206,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2339,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 2020,
											"end": 2339,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2339,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2339,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2339,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2339,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 2020,
											"end": 2339,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2339,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2020,
											"end": 2339,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2339,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2339,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 2020,
											"end": 2339,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2339,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2339,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2020,
											"end": 2339,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2020,
											"end": 2339,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2339,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2339,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2339,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2339,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2339,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2339,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 2020,
											"end": 2339,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2339,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2339,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 2020,
											"end": 2339,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2020,
											"end": 2339,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 2020,
											"end": 2339,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2339,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 2020,
											"end": 2339,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2020,
											"end": 2339,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2020,
											"end": 2339,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2339,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2020,
											"end": 2339,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2339,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 2020,
											"end": 2339,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2339,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2339,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 2020,
											"end": 2339,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2020,
											"end": 2339,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 2020,
											"end": 2339,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2339,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2020,
											"end": 2339,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2339,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2339,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2339,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2339,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2339,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3548,
											"end": 3814,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 3548,
											"end": 3814,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3548,
											"end": 3814,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 3548,
											"end": 3814,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3548,
											"end": 3814,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3548,
											"end": 3814,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 3548,
											"end": 3814,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3548,
											"end": 3814,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3548,
											"end": 3814,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3548,
											"end": 3814,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3548,
											"end": 3814,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 3548,
											"end": 3814,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3548,
											"end": 3814,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3548,
											"end": 3814,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 3548,
											"end": 3814,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 3548,
											"end": 3814,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3548,
											"end": 3814,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 3548,
											"end": 3814,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3548,
											"end": 3814,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 2408,
											"end": 2524,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 2408,
											"end": 2524,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2408,
											"end": 2524,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2408,
											"end": 2524,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2408,
											"end": 2524,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2408,
											"end": 2524,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2408,
											"end": 2524,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2408,
											"end": 2524,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2408,
											"end": 2524,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2408,
											"end": 2524,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2408,
											"end": 2524,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2408,
											"end": 2524,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2408,
											"end": 2524,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2408,
											"end": 2524,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2408,
											"end": 2524,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2408,
											"end": 2524,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2408,
											"end": 2524,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2408,
											"end": 2524,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2408,
											"end": 2524,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2408,
											"end": 2524,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2408,
											"end": 2524,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2408,
											"end": 2524,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 2408,
											"end": 2524,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2408,
											"end": 2524,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2408,
											"end": 2524,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 2408,
											"end": 2524,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2408,
											"end": 2524,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 2408,
											"end": 2524,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2408,
											"end": 2524,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 2408,
											"end": 2524,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2408,
											"end": 2524,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2408,
											"end": 2524,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2408,
											"end": 2524,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2408,
											"end": 2524,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2408,
											"end": 2524,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2408,
											"end": 2524,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2408,
											"end": 2524,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2408,
											"end": 2524,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 2408,
											"end": 2524,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2408,
											"end": 2524,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2408,
											"end": 2524,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2408,
											"end": 2524,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2408,
											"end": 2524,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2408,
											"end": 2524,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2408,
											"end": 2524,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2408,
											"end": 2524,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2408,
											"end": 2524,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2408,
											"end": 2524,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1415,
											"end": 1504,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1415,
											"end": 1504,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1415,
											"end": 1504,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1415,
											"end": 1504,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1415,
											"end": 1504,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1415,
											"end": 1504,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1415,
											"end": 1504,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1415,
											"end": 1504,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1415,
											"end": 1504,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1415,
											"end": 1504,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1415,
											"end": 1504,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1415,
											"end": 1504,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1415,
											"end": 1504,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1415,
											"end": 1504,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1415,
											"end": 1504,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1415,
											"end": 1504,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1415,
											"end": 1504,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1415,
											"end": 1504,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1415,
											"end": 1504,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1415,
											"end": 1504,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1415,
											"end": 1504,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1415,
											"end": 1504,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1415,
											"end": 1504,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1415,
											"end": 1504,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1415,
											"end": 1504,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1415,
											"end": 1504,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1415,
											"end": 1504,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1415,
											"end": 1504,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1415,
											"end": 1504,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1415,
											"end": 1504,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1415,
											"end": 1504,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1415,
											"end": 1504,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1415,
											"end": 1504,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1415,
											"end": 1504,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 2008,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1512,
											"end": 2008,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 2008,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 2008,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 2008,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 2008,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1512,
											"end": 2008,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 2008,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 2008,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 2008,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 2008,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1512,
											"end": 2008,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 2008,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 2008,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1512,
											"end": 2008,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1512,
											"end": 2008,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 2008,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 2008,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 2008,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 2008,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 2008,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 2008,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1512,
											"end": 2008,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 2008,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 2008,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1512,
											"end": 2008,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1512,
											"end": 2008,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1512,
											"end": 2008,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 2008,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1512,
											"end": 2008,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1512,
											"end": 2008,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1512,
											"end": 2008,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 2008,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1512,
											"end": 2008,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 2008,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1512,
											"end": 2008,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 2008,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 2008,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1512,
											"end": 2008,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1512,
											"end": 2008,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1512,
											"end": 2008,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 2008,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1512,
											"end": 2008,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 2008,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 2008,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 2008,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 2008,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 2008,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2530,
											"end": 3540,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2530,
											"end": 3540,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2530,
											"end": 3540,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2530,
											"end": 3540,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2530,
											"end": 3540,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2530,
											"end": 3540,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2530,
											"end": 3540,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2530,
											"end": 3540,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2530,
											"end": 3540,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2530,
											"end": 3540,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2530,
											"end": 3540,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2530,
											"end": 3540,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2530,
											"end": 3540,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2530,
											"end": 3540,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 2530,
											"end": 3540,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2530,
											"end": 3540,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2530,
											"end": 3540,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2530,
											"end": 3540,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 2530,
											"end": 3540,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2530,
											"end": 3540,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2530,
											"end": 3540,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2530,
											"end": 3540,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2530,
											"end": 3540,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2530,
											"end": 3540,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 2530,
											"end": 3540,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2530,
											"end": 3540,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2530,
											"end": 3540,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 2530,
											"end": 3540,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2530,
											"end": 3540,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 2530,
											"end": 3540,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2530,
											"end": 3540,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2530,
											"end": 3540,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2530,
											"end": 3540,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2530,
											"end": 3540,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2530,
											"end": 3540,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2530,
											"end": 3540,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2530,
											"end": 3540,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1310,
											"end": 1407,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1310,
											"end": 1407,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1366,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1392,
											"end": 1398,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1385,
											"end": 1398,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1310,
											"end": 1407,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1310,
											"end": 1407,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1214,
											"end": 1302,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1214,
											"end": 1302,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1252,
											"end": 1265,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1290,
											"end": 1294,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1294,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1214,
											"end": 1302,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1214,
											"end": 1302,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1110,
											"end": 1206,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1110,
											"end": 1206,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1153,
											"end": 1160,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1187,
											"end": 1198,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1187,
											"end": 1198,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1180,
											"end": 1198,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1180,
											"end": 1198,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1110,
											"end": 1206,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1110,
											"end": 1206,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2020,
											"end": 2339,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 2020,
											"end": 2339,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2079,
											"end": 2083,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2130,
											"end": 2134,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2109,
											"end": 2134,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2134,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2114,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 2109,
											"end": 2126,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2115,
											"end": 2125,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2126,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2109,
											"end": 2126,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2126,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2109,
											"end": 2126,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2126,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2126,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2126,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2109,
											"end": 2126,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2126,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2126,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2126,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2126,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2109,
											"end": 2126,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2126,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2109,
											"end": 2126,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2126,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2109,
											"end": 2126,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2126,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2126,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2126,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2109,
											"end": 2126,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2126,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2126,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2126,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 2109,
											"end": 2126,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2134,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2134,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2134,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 2214,
											"end": 2219,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2198,
											"end": 2209,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2198,
											"end": 2209,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2198,
											"end": 2213,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2198,
											"end": 2213,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2184,
											"end": 2195,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2184,
											"end": 2220,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2184,
											"end": 2220,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2184,
											"end": 2220,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2184,
											"end": 2220,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2274,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 2268,
											"end": 2273,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2248,
											"end": 2256,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2248,
											"end": 2262,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2258,
											"end": 2260,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2248,
											"end": 2262,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2248,
											"end": 2262,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2248,
											"end": 2262,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2248,
											"end": 2262,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2248,
											"end": 2262,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2248,
											"end": 2262,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2248,
											"end": 2262,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2248,
											"end": 2262,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2248,
											"end": 2262,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2248,
											"end": 2262,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2248,
											"end": 2262,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2248,
											"end": 2262,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2248,
											"end": 2262,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2248,
											"end": 2262,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2248,
											"end": 2262,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2248,
											"end": 2262,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2267,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2247,
											"end": 2267,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2274,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2274,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2274,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2247,
											"end": 2274,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2274,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2247,
											"end": 2274,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 2247,
											"end": 2274,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2231,
											"end": 2239,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2231,
											"end": 2243,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2240,
											"end": 2242,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2231,
											"end": 2243,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2231,
											"end": 2243,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2231,
											"end": 2243,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2231,
											"end": 2243,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2231,
											"end": 2243,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2231,
											"end": 2243,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2231,
											"end": 2243,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2231,
											"end": 2243,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2231,
											"end": 2243,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2231,
											"end": 2243,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2231,
											"end": 2243,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2231,
											"end": 2243,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2231,
											"end": 2243,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2231,
											"end": 2243,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2231,
											"end": 2243,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2231,
											"end": 2274,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2231,
											"end": 2274,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2231,
											"end": 2274,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2231,
											"end": 2274,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2297,
											"end": 2299,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2290,
											"end": 2308,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2290,
											"end": 2308,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2290,
											"end": 2308,
											"name": "PUSH",
											"source": 1,
											"value": "F6798A560793A54C3BCFE86A93CDE1E73087D944C0EA20544137D4121396885"
										},
										{
											"begin": 2302,
											"end": 2307,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2290,
											"end": 2308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2290,
											"end": 2308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2290,
											"end": 2308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2290,
											"end": 2308,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2290,
											"end": 2308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2290,
											"end": 2308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 2290,
											"end": 2308,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2290,
											"end": 2308,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2290,
											"end": 2308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2290,
											"end": 2308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2290,
											"end": 2308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2290,
											"end": 2308,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2290,
											"end": 2308,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2290,
											"end": 2308,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2290,
											"end": 2308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2290,
											"end": 2308,
											"name": "LOG2",
											"source": 1
										},
										{
											"begin": 2327,
											"end": 2331,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2320,
											"end": 2331,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2320,
											"end": 2331,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2339,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2339,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2339,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2339,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2339,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3548,
											"end": 3814,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 3548,
											"end": 3814,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3660,
											"end": 3664,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3639,
											"end": 3664,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3639,
											"end": 3664,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3639,
											"end": 3644,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 3639,
											"end": 3656,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3645,
											"end": 3655,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 3639,
											"end": 3656,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3639,
											"end": 3656,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3639,
											"end": 3656,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3639,
											"end": 3656,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3639,
											"end": 3656,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3639,
											"end": 3656,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3639,
											"end": 3656,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3639,
											"end": 3656,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3639,
											"end": 3656,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3639,
											"end": 3656,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3639,
											"end": 3656,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3639,
											"end": 3656,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3639,
											"end": 3656,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3639,
											"end": 3656,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3639,
											"end": 3656,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3639,
											"end": 3656,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3639,
											"end": 3656,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3639,
											"end": 3656,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3639,
											"end": 3656,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3639,
											"end": 3656,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3639,
											"end": 3656,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3639,
											"end": 3656,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3639,
											"end": 3656,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3639,
											"end": 3656,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3639,
											"end": 3656,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3639,
											"end": 3664,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3639,
											"end": 3664,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3639,
											"end": 3664,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3631,
											"end": 3708,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 3631,
											"end": 3708,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3631,
											"end": 3708,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3631,
											"end": 3708,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3631,
											"end": 3708,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3631,
											"end": 3708,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3631,
											"end": 3708,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3631,
											"end": 3708,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3631,
											"end": 3708,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3631,
											"end": 3708,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 3631,
											"end": 3708,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3631,
											"end": 3708,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3631,
											"end": 3708,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3631,
											"end": 3708,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 3631,
											"end": 3708,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3631,
											"end": 3708,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3631,
											"end": 3708,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3631,
											"end": 3708,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3631,
											"end": 3708,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3631,
											"end": 3708,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3631,
											"end": 3708,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3631,
											"end": 3708,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3631,
											"end": 3708,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 3631,
											"end": 3708,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3800,
											"end": 3805,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3800,
											"end": 3805,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3800,
											"end": 3805,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3800,
											"end": 3805,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3800,
											"end": 3805,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3800,
											"end": 3805,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3800,
											"end": 3805,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3800,
											"end": 3805,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3800,
											"end": 3805,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3800,
											"end": 3805,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3787,
											"end": 3806,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3787,
											"end": 3806,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3787,
											"end": 3806,
											"name": "SELFDESTRUCT",
											"source": 1
										},
										{
											"begin": 2408,
											"end": 2524,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 2408,
											"end": 2524,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2466,
											"end": 2473,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2498,
											"end": 2506,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2498,
											"end": 2516,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2507,
											"end": 2515,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2498,
											"end": 2516,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2498,
											"end": 2516,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2498,
											"end": 2516,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2498,
											"end": 2516,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2498,
											"end": 2516,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2498,
											"end": 2516,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2498,
											"end": 2516,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2498,
											"end": 2516,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2498,
											"end": 2516,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2498,
											"end": 2516,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2498,
											"end": 2516,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2498,
											"end": 2516,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2498,
											"end": 2516,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2498,
											"end": 2516,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2498,
											"end": 2516,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2498,
											"end": 2516,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2516,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2516,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2408,
											"end": 2524,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2408,
											"end": 2524,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2408,
											"end": 2524,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2408,
											"end": 2524,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1415,
											"end": 1504,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1415,
											"end": 1504,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1457,
											"end": 1464,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1490,
											"end": 1495,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1490,
											"end": 1495,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1483,
											"end": 1495,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1483,
											"end": 1495,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1415,
											"end": 1504,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1415,
											"end": 1504,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1512,
											"end": 2008,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1512,
											"end": 2008,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1573,
											"end": 1577,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1682,
											"end": 1683,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1647,
											"end": 1678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 1672,
											"end": 1677,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1647,
											"end": 1655,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1647,
											"end": 1667,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1656,
											"end": 1666,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1647,
											"end": 1667,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1647,
											"end": 1667,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1647,
											"end": 1667,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1647,
											"end": 1667,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1647,
											"end": 1667,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1647,
											"end": 1667,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1647,
											"end": 1667,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1647,
											"end": 1667,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1647,
											"end": 1667,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1647,
											"end": 1667,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1647,
											"end": 1667,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1647,
											"end": 1667,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1647,
											"end": 1667,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1647,
											"end": 1667,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1647,
											"end": 1667,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1647,
											"end": 1667,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1647,
											"end": 1671,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 1647,
											"end": 1671,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1647,
											"end": 1678,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1647,
											"end": 1678,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1647,
											"end": 1678,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1647,
											"end": 1678,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1647,
											"end": 1678,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1647,
											"end": 1678,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 1647,
											"end": 1678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1647,
											"end": 1683,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1647,
											"end": 1683,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1639,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 1639,
											"end": 1722,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1639,
											"end": 1722,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1639,
											"end": 1722,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1639,
											"end": 1722,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1639,
											"end": 1722,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1639,
											"end": 1722,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1639,
											"end": 1722,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1639,
											"end": 1722,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1639,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 1639,
											"end": 1722,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1639,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 1639,
											"end": 1722,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1639,
											"end": 1722,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 1639,
											"end": 1722,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1639,
											"end": 1722,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1639,
											"end": 1722,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1639,
											"end": 1722,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1639,
											"end": 1722,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1639,
											"end": 1722,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1639,
											"end": 1722,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1639,
											"end": 1722,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1639,
											"end": 1722,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 1639,
											"end": 1722,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1806,
											"end": 1837,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 1831,
											"end": 1836,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1806,
											"end": 1814,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1806,
											"end": 1826,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1815,
											"end": 1825,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1806,
											"end": 1826,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1806,
											"end": 1826,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1806,
											"end": 1826,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1806,
											"end": 1826,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1806,
											"end": 1826,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1806,
											"end": 1826,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1806,
											"end": 1826,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1806,
											"end": 1826,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1806,
											"end": 1826,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1806,
											"end": 1826,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1806,
											"end": 1826,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1806,
											"end": 1826,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1806,
											"end": 1826,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1806,
											"end": 1826,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1806,
											"end": 1826,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1806,
											"end": 1826,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1806,
											"end": 1830,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 1806,
											"end": 1830,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1806,
											"end": 1837,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1806,
											"end": 1837,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1806,
											"end": 1837,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1806,
											"end": 1837,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1806,
											"end": 1837,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1806,
											"end": 1837,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 1806,
											"end": 1837,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1783,
											"end": 1791,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1783,
											"end": 1803,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1792,
											"end": 1802,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1783,
											"end": 1803,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1783,
											"end": 1803,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1783,
											"end": 1803,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1783,
											"end": 1803,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1783,
											"end": 1803,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1783,
											"end": 1803,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1783,
											"end": 1803,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1783,
											"end": 1803,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1783,
											"end": 1803,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1783,
											"end": 1803,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1783,
											"end": 1803,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1783,
											"end": 1803,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1783,
											"end": 1803,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1783,
											"end": 1803,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1783,
											"end": 1803,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1783,
											"end": 1837,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1783,
											"end": 1837,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1783,
											"end": 1837,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1783,
											"end": 1837,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1863,
											"end": 1886,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 1880,
											"end": 1885,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1863,
											"end": 1871,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1863,
											"end": 1875,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1872,
											"end": 1874,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1863,
											"end": 1875,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1863,
											"end": 1875,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1863,
											"end": 1875,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1863,
											"end": 1875,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1863,
											"end": 1875,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1863,
											"end": 1875,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1863,
											"end": 1875,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1863,
											"end": 1875,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1863,
											"end": 1875,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1863,
											"end": 1875,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1863,
											"end": 1875,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1863,
											"end": 1875,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1863,
											"end": 1875,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1863,
											"end": 1875,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1863,
											"end": 1875,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1863,
											"end": 1875,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1863,
											"end": 1879,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 1863,
											"end": 1879,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1863,
											"end": 1886,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1863,
											"end": 1886,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1863,
											"end": 1886,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1863,
											"end": 1886,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1863,
											"end": 1886,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1863,
											"end": 1886,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 1863,
											"end": 1886,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1848,
											"end": 1856,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1848,
											"end": 1860,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1857,
											"end": 1859,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1848,
											"end": 1860,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1848,
											"end": 1860,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1848,
											"end": 1860,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1848,
											"end": 1860,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1848,
											"end": 1860,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1848,
											"end": 1860,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1848,
											"end": 1860,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1848,
											"end": 1860,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1848,
											"end": 1860,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1848,
											"end": 1860,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1848,
											"end": 1860,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1848,
											"end": 1860,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1848,
											"end": 1860,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1848,
											"end": 1860,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1848,
											"end": 1860,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1848,
											"end": 1886,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1848,
											"end": 1886,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1848,
											"end": 1886,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1848,
											"end": 1886,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1967,
											"end": 1969,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1946,
											"end": 1977,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1946,
											"end": 1977,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1955,
											"end": 1965,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1946,
											"end": 1977,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1946,
											"end": 1977,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1946,
											"end": 1977,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 1971,
											"end": 1976,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1946,
											"end": 1977,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1946,
											"end": 1977,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1946,
											"end": 1977,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 1946,
											"end": 1977,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1946,
											"end": 1977,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1946,
											"end": 1977,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1946,
											"end": 1977,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1946,
											"end": 1977,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 1946,
											"end": 1977,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1946,
											"end": 1977,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1946,
											"end": 1977,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1946,
											"end": 1977,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1946,
											"end": 1977,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1946,
											"end": 1977,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1946,
											"end": 1977,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1946,
											"end": 1977,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 1995,
											"end": 1999,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1988,
											"end": 1999,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1988,
											"end": 1999,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 2008,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 2008,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 2008,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 2008,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 2008,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2530,
											"end": 3540,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 2530,
											"end": 3540,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2583,
											"end": 2587,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2646,
											"end": 2647,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2613,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 2638,
											"end": 2643,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2613,
											"end": 2621,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2613,
											"end": 2633,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2622,
											"end": 2632,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 2613,
											"end": 2633,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2613,
											"end": 2633,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2613,
											"end": 2633,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2613,
											"end": 2633,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2613,
											"end": 2633,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2613,
											"end": 2633,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2613,
											"end": 2633,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2613,
											"end": 2633,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2613,
											"end": 2633,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2613,
											"end": 2633,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2613,
											"end": 2633,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2613,
											"end": 2633,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2613,
											"end": 2633,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2613,
											"end": 2633,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2613,
											"end": 2633,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2613,
											"end": 2633,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2613,
											"end": 2637,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 2613,
											"end": 2637,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2613,
											"end": 2644,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2613,
											"end": 2644,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2613,
											"end": 2644,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2613,
											"end": 2644,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2613,
											"end": 2644,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2613,
											"end": 2644,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 2613,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2613,
											"end": 2647,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2613,
											"end": 2647,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2605,
											"end": 2672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 2605,
											"end": 2672,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2605,
											"end": 2672,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2605,
											"end": 2672,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2605,
											"end": 2672,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2605,
											"end": 2672,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2605,
											"end": 2672,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2605,
											"end": 2672,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2605,
											"end": 2672,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2605,
											"end": 2672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 2605,
											"end": 2672,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2605,
											"end": 2672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2605,
											"end": 2672,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2605,
											"end": 2672,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 2605,
											"end": 2672,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2605,
											"end": 2672,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2605,
											"end": 2672,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2605,
											"end": 2672,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2605,
											"end": 2672,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2605,
											"end": 2672,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2605,
											"end": 2672,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2605,
											"end": 2672,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2605,
											"end": 2672,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 2605,
											"end": 2672,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2753,
											"end": 2770,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2781,
											"end": 2784,
											"name": "PUSH",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 2773,
											"end": 2778,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2773,
											"end": 2784,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 2773,
											"end": 2784,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2773,
											"end": 2784,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2773,
											"end": 2784,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 2773,
											"end": 2784,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2773,
											"end": 2784,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 2773,
											"end": 2784,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2753,
											"end": 2784,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2753,
											"end": 2784,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3072,
											"end": 3073,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3034,
											"end": 3070,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 3060,
											"end": 3069,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3034,
											"end": 3055,
											"name": "SELFBALANCE",
											"source": 1
										},
										{
											"begin": 3034,
											"end": 3059,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 3034,
											"end": 3059,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3034,
											"end": 3070,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3034,
											"end": 3070,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3034,
											"end": 3070,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3034,
											"end": 3070,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3034,
											"end": 3070,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3034,
											"end": 3070,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 3034,
											"end": 3070,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3034,
											"end": 3073,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3034,
											"end": 3073,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3026,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 3026,
											"end": 3110,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3026,
											"end": 3110,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3026,
											"end": 3110,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3026,
											"end": 3110,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3026,
											"end": 3110,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3026,
											"end": 3110,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3026,
											"end": 3110,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3026,
											"end": 3110,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3026,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 3026,
											"end": 3110,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3026,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 3026,
											"end": 3110,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3026,
											"end": 3110,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 3026,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3026,
											"end": 3110,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3026,
											"end": 3110,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3026,
											"end": 3110,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3026,
											"end": 3110,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3026,
											"end": 3110,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3026,
											"end": 3110,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3026,
											"end": 3110,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3026,
											"end": 3110,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 3026,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3123,
											"end": 3132,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3135,
											"end": 3144,
											"name": "PUSHLIB",
											"source": 1,
											"value": "Library.sol:customLib"
										},
										{
											"begin": 3135,
											"end": 3155,
											"name": "PUSH",
											"source": 1,
											"value": "C0BA8F42"
										},
										{
											"begin": 3156,
											"end": 3165,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3167,
											"end": 3177,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 3135,
											"end": 3178,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3135,
											"end": 3178,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3135,
											"end": 3178,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3135,
											"end": 3178,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3135,
											"end": 3178,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3135,
											"end": 3178,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 3135,
											"end": 3178,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 3135,
											"end": 3178,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3135,
											"end": 3178,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3135,
											"end": 3178,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3135,
											"end": 3178,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3135,
											"end": 3178,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 3135,
											"end": 3178,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3135,
											"end": 3178,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3135,
											"end": 3178,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3135,
											"end": 3178,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 3135,
											"end": 3178,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3135,
											"end": 3178,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 3135,
											"end": 3178,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3135,
											"end": 3178,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3135,
											"end": 3178,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3135,
											"end": 3178,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3135,
											"end": 3178,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3135,
											"end": 3178,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3135,
											"end": 3178,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3135,
											"end": 3178,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3135,
											"end": 3178,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3135,
											"end": 3178,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3135,
											"end": 3178,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 3135,
											"end": 3178,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3135,
											"end": 3178,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3135,
											"end": 3178,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3135,
											"end": 3178,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 3135,
											"end": 3178,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3135,
											"end": 3178,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3135,
											"end": 3178,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3135,
											"end": 3178,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3135,
											"end": 3178,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 3135,
											"end": 3178,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3135,
											"end": 3178,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3135,
											"end": 3178,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 3135,
											"end": 3178,
											"name": "DELEGATECALL",
											"source": 1
										},
										{
											"begin": 3135,
											"end": 3178,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3135,
											"end": 3178,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3135,
											"end": 3178,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3135,
											"end": 3178,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 3135,
											"end": 3178,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3135,
											"end": 3178,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3135,
											"end": 3178,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3135,
											"end": 3178,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3135,
											"end": 3178,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 3135,
											"end": 3178,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3135,
											"end": 3178,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3135,
											"end": 3178,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3135,
											"end": 3178,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 3135,
											"end": 3178,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3135,
											"end": 3178,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3135,
											"end": 3178,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3135,
											"end": 3178,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3135,
											"end": 3178,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3135,
											"end": 3178,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3135,
											"end": 3178,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3135,
											"end": 3178,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3135,
											"end": 3178,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3135,
											"end": 3178,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 3135,
											"end": 3178,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3135,
											"end": 3178,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3135,
											"end": 3178,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3135,
											"end": 3178,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3135,
											"end": 3178,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3135,
											"end": 3178,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3135,
											"end": 3178,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3135,
											"end": 3178,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3135,
											"end": 3178,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3135,
											"end": 3178,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3135,
											"end": 3178,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3135,
											"end": 3178,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3135,
											"end": 3178,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3135,
											"end": 3178,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 3135,
											"end": 3178,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3135,
											"end": 3178,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3135,
											"end": 3178,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 3135,
											"end": 3178,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3135,
											"end": 3178,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 3135,
											"end": 3178,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3123,
											"end": 3178,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3123,
											"end": 3178,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3197,
											"end": 3201,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3189,
											"end": 3222,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 3189,
											"end": 3222,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3189,
											"end": 3222,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3189,
											"end": 3222,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3189,
											"end": 3222,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3189,
											"end": 3222,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3189,
											"end": 3222,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3189,
											"end": 3222,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3189,
											"end": 3222,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3189,
											"end": 3222,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 3189,
											"end": 3222,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3189,
											"end": 3222,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 3189,
											"end": 3222,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3189,
											"end": 3222,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 3189,
											"end": 3222,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3189,
											"end": 3222,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3189,
											"end": 3222,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3189,
											"end": 3222,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3189,
											"end": 3222,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3189,
											"end": 3222,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3189,
											"end": 3222,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3189,
											"end": 3222,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3189,
											"end": 3222,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 3189,
											"end": 3222,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3256,
											"end": 3287,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 3281,
											"end": 3286,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3256,
											"end": 3264,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3256,
											"end": 3276,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3265,
											"end": 3275,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 3256,
											"end": 3276,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3256,
											"end": 3276,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3256,
											"end": 3276,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3256,
											"end": 3276,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3256,
											"end": 3276,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3256,
											"end": 3276,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3256,
											"end": 3276,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3256,
											"end": 3276,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3256,
											"end": 3276,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3256,
											"end": 3276,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3256,
											"end": 3276,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3256,
											"end": 3276,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3256,
											"end": 3276,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3256,
											"end": 3276,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3256,
											"end": 3276,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3256,
											"end": 3276,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3256,
											"end": 3280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 3256,
											"end": 3280,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3256,
											"end": 3287,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3256,
											"end": 3287,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3256,
											"end": 3287,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3256,
											"end": 3287,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3256,
											"end": 3287,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3256,
											"end": 3287,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 3256,
											"end": 3287,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3233,
											"end": 3241,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3233,
											"end": 3253,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3242,
											"end": 3252,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 3233,
											"end": 3253,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3233,
											"end": 3253,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3233,
											"end": 3253,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3233,
											"end": 3253,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3233,
											"end": 3253,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3233,
											"end": 3253,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3233,
											"end": 3253,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3233,
											"end": 3253,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3233,
											"end": 3253,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3233,
											"end": 3253,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3233,
											"end": 3253,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3233,
											"end": 3253,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3233,
											"end": 3253,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3233,
											"end": 3253,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3233,
											"end": 3253,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3233,
											"end": 3287,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3233,
											"end": 3287,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3233,
											"end": 3287,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3233,
											"end": 3287,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3360,
											"end": 3382,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 3376,
											"end": 3381,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3360,
											"end": 3371,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3360,
											"end": 3371,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3360,
											"end": 3375,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 3360,
											"end": 3375,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3360,
											"end": 3382,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3360,
											"end": 3382,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3360,
											"end": 3382,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3360,
											"end": 3382,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3360,
											"end": 3382,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3360,
											"end": 3382,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 3360,
											"end": 3382,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3346,
											"end": 3357,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3346,
											"end": 3382,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3346,
											"end": 3382,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3346,
											"end": 3382,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3346,
											"end": 3382,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3463,
											"end": 3473,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 3458,
											"end": 3481,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3458,
											"end": 3481,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3458,
											"end": 3481,
											"name": "PUSH",
											"source": 1,
											"value": "5E5E995CE3133561AFCEAA51A9A154D5DB228CD7525D34DF5185582C18D3DF09"
										},
										{
											"begin": 3475,
											"end": 3480,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3458,
											"end": 3481,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3458,
											"end": 3481,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3458,
											"end": 3481,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 3458,
											"end": 3481,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3458,
											"end": 3481,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3458,
											"end": 3481,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3458,
											"end": 3481,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3458,
											"end": 3481,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 3458,
											"end": 3481,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3458,
											"end": 3481,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3458,
											"end": 3481,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3458,
											"end": 3481,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3458,
											"end": 3481,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3458,
											"end": 3481,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3458,
											"end": 3481,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3458,
											"end": 3481,
											"name": "LOG2",
											"source": 1
										},
										{
											"begin": 3528,
											"end": 3532,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3521,
											"end": 3532,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3521,
											"end": 3532,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3521,
											"end": 3532,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3521,
											"end": 3532,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2530,
											"end": 3540,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2530,
											"end": 3540,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2530,
											"end": 3540,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2530,
											"end": 3540,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2813,
											"end": 2820,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2843,
											"end": 2844,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2839,
											"end": 2840,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3180,
											"end": 3187,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3210,
											"end": 3211,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3207,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 289,
											"name": "tag",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 152,
											"end": 289,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 206,
											"end": 211,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 237,
											"end": 243,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 231,
											"end": 244,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 222,
											"end": 244,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 222,
											"end": 244,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 253,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 277,
											"end": 282,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 253,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "tag",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 152,
											"end": 289,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 152,
											"end": 289,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 152,
											"end": 289,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 152,
											"end": 289,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 152,
											"end": 289,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 295,
											"end": 434,
											"name": "tag",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 295,
											"end": 434,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 341,
											"end": 346,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 379,
											"end": 385,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 366,
											"end": 386,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 357,
											"end": 386,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 357,
											"end": 386,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 395,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 422,
											"end": 427,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 395,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "tag",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 295,
											"end": 434,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 295,
											"end": 434,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 295,
											"end": 434,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 295,
											"end": 434,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 295,
											"end": 434,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 440,
											"end": 769,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 440,
											"end": 769,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 499,
											"end": 505,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 548,
											"end": 550,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 536,
											"end": 545,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 527,
											"end": 534,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 523,
											"end": 546,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 519,
											"end": 551,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 516,
											"end": 635,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 516,
											"end": 635,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 516,
											"end": 635,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 554,
											"end": 633,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 554,
											"end": 633,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 554,
											"end": 633,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 554,
											"end": 633,
											"name": "tag",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 554,
											"end": 633,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 516,
											"end": 635,
											"name": "tag",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 516,
											"end": 635,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 674,
											"end": 675,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 699,
											"end": 752,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 744,
											"end": 751,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 735,
											"end": 741,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 724,
											"end": 733,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 720,
											"end": 742,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 699,
											"end": 752,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 699,
											"end": 752,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 699,
											"end": 752,
											"name": "tag",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 699,
											"end": 752,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 689,
											"end": 752,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 689,
											"end": 752,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 645,
											"end": 762,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 440,
											"end": 769,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 440,
											"end": 769,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 440,
											"end": 769,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 440,
											"end": 769,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 440,
											"end": 769,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 775,
											"end": 1249,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 775,
											"end": 1249,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 843,
											"end": 849,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 851,
											"end": 857,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 900,
											"end": 902,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 888,
											"end": 897,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 879,
											"end": 886,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 875,
											"end": 898,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 871,
											"end": 903,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 868,
											"end": 987,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 868,
											"end": 987,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 868,
											"end": 987,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 906,
											"end": 985,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 906,
											"end": 985,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 906,
											"end": 985,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 906,
											"end": 985,
											"name": "tag",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 906,
											"end": 985,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 868,
											"end": 987,
											"name": "tag",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 868,
											"end": 987,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1026,
											"end": 1027,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1051,
											"end": 1104,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 1096,
											"end": 1103,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1087,
											"end": 1093,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1076,
											"end": 1085,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1072,
											"end": 1094,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1051,
											"end": 1104,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 1051,
											"end": 1104,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1051,
											"end": 1104,
											"name": "tag",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 1051,
											"end": 1104,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1041,
											"end": 1104,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1041,
											"end": 1104,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 997,
											"end": 1114,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1153,
											"end": 1155,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1179,
											"end": 1232,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 1224,
											"end": 1231,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1204,
											"end": 1213,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1200,
											"end": 1222,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1179,
											"end": 1232,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 1179,
											"end": 1232,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1179,
											"end": 1232,
											"name": "tag",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 1179,
											"end": 1232,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1169,
											"end": 1232,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1169,
											"end": 1232,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1124,
											"end": 1242,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 775,
											"end": 1249,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 775,
											"end": 1249,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 775,
											"end": 1249,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 775,
											"end": 1249,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 775,
											"end": 1249,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 775,
											"end": 1249,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1255,
											"end": 1600,
											"name": "tag",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 1255,
											"end": 1600,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1322,
											"end": 1328,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1371,
											"end": 1373,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1359,
											"end": 1368,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1350,
											"end": 1357,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1346,
											"end": 1369,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1342,
											"end": 1374,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1339,
											"end": 1458,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1339,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 1339,
											"end": 1458,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1377,
											"end": 1456,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 1377,
											"end": 1456,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 1377,
											"end": 1456,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1377,
											"end": 1456,
											"name": "tag",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 1377,
											"end": 1456,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1339,
											"end": 1458,
											"name": "tag",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 1339,
											"end": 1458,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1497,
											"end": 1498,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1522,
											"end": 1583,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 1575,
											"end": 1582,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1566,
											"end": 1572,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1555,
											"end": 1564,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1551,
											"end": 1573,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1522,
											"end": 1583,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 1522,
											"end": 1583,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1522,
											"end": 1583,
											"name": "tag",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 1522,
											"end": 1583,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1512,
											"end": 1583,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1512,
											"end": 1583,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1468,
											"end": 1593,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1255,
											"end": 1600,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1255,
											"end": 1600,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1255,
											"end": 1600,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1255,
											"end": 1600,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1255,
											"end": 1600,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1606,
											"end": 1935,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 1606,
											"end": 1935,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1665,
											"end": 1671,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1714,
											"end": 1716,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1702,
											"end": 1711,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1693,
											"end": 1700,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1689,
											"end": 1712,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1685,
											"end": 1717,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1682,
											"end": 1801,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1682,
											"end": 1801,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 1682,
											"end": 1801,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1720,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 1720,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 1720,
											"end": 1799,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1720,
											"end": 1799,
											"name": "tag",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 1720,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1682,
											"end": 1801,
											"name": "tag",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 1682,
											"end": 1801,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1840,
											"end": 1841,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1865,
											"end": 1918,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 1910,
											"end": 1917,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1901,
											"end": 1907,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1890,
											"end": 1899,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1886,
											"end": 1908,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1865,
											"end": 1918,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 1865,
											"end": 1918,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1865,
											"end": 1918,
											"name": "tag",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 1865,
											"end": 1918,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1918,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1918,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1811,
											"end": 1928,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1606,
											"end": 1935,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1606,
											"end": 1935,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1606,
											"end": 1935,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1606,
											"end": 1935,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1606,
											"end": 1935,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1941,
											"end": 2067,
											"name": "tag",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 1941,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2036,
											"end": 2060,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 2054,
											"end": 2059,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2036,
											"end": 2060,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 2036,
											"end": 2060,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2036,
											"end": 2060,
											"name": "tag",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 2036,
											"end": 2060,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2031,
											"end": 2034,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2024,
											"end": 2061,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1941,
											"end": 2067,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1941,
											"end": 2067,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1941,
											"end": 2067,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2073,
											"end": 2182,
											"name": "tag",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 2073,
											"end": 2182,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2154,
											"end": 2175,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 2169,
											"end": 2174,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2154,
											"end": 2175,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 2154,
											"end": 2175,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2154,
											"end": 2175,
											"name": "tag",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 2154,
											"end": 2175,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2149,
											"end": 2152,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2142,
											"end": 2176,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2073,
											"end": 2182,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2073,
											"end": 2182,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2073,
											"end": 2182,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2188,
											"end": 2552,
											"name": "tag",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 2188,
											"end": 2552,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2279,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2304,
											"end": 2343,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 2337,
											"end": 2342,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2304,
											"end": 2343,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 2304,
											"end": 2343,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2304,
											"end": 2343,
											"name": "tag",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 2304,
											"end": 2343,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2359,
											"end": 2430,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 2423,
											"end": 2429,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2418,
											"end": 2421,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2359,
											"end": 2430,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 2359,
											"end": 2430,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2359,
											"end": 2430,
											"name": "tag",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 2359,
											"end": 2430,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2352,
											"end": 2430,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2352,
											"end": 2430,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2439,
											"end": 2491,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 2484,
											"end": 2490,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2479,
											"end": 2482,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2472,
											"end": 2476,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2465,
											"end": 2470,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2461,
											"end": 2477,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2439,
											"end": 2491,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 2439,
											"end": 2491,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2439,
											"end": 2491,
											"name": "tag",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 2439,
											"end": 2491,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2516,
											"end": 2545,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 2538,
											"end": 2544,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2516,
											"end": 2545,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 2516,
											"end": 2545,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2516,
											"end": 2545,
											"name": "tag",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 2516,
											"end": 2545,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2511,
											"end": 2514,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2507,
											"end": 2546,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2546,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2500,
											"end": 2546,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2280,
											"end": 2552,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2188,
											"end": 2552,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2188,
											"end": 2552,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2188,
											"end": 2552,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2188,
											"end": 2552,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2188,
											"end": 2552,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2558,
											"end": 2924,
											"name": "tag",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 2558,
											"end": 2924,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2700,
											"end": 2703,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2721,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 2785,
											"end": 2787,
											"name": "PUSH",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 2780,
											"end": 2783,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2721,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 2721,
											"end": 2788,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2721,
											"end": 2788,
											"name": "tag",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 2721,
											"end": 2788,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2714,
											"end": 2788,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2714,
											"end": 2788,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2797,
											"end": 2890,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 2886,
											"end": 2889,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2797,
											"end": 2890,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 2797,
											"end": 2890,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2797,
											"end": 2890,
											"name": "tag",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 2797,
											"end": 2890,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2915,
											"end": 2917,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2910,
											"end": 2913,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2906,
											"end": 2918,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2899,
											"end": 2918,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2899,
											"end": 2918,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2558,
											"end": 2924,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2558,
											"end": 2924,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2558,
											"end": 2924,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2558,
											"end": 2924,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2930,
											"end": 3296,
											"name": "tag",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 2930,
											"end": 3296,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3072,
											"end": 3075,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3093,
											"end": 3160,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 3157,
											"end": 3159,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 3152,
											"end": 3155,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3093,
											"end": 3160,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 3093,
											"end": 3160,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3093,
											"end": 3160,
											"name": "tag",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 3093,
											"end": 3160,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3160,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3086,
											"end": 3160,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3169,
											"end": 3262,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 3258,
											"end": 3261,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3169,
											"end": 3262,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 3169,
											"end": 3262,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3169,
											"end": 3262,
											"name": "tag",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 3169,
											"end": 3262,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3287,
											"end": 3289,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3282,
											"end": 3285,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3278,
											"end": 3290,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3271,
											"end": 3290,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3271,
											"end": 3290,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2930,
											"end": 3296,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2930,
											"end": 3296,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2930,
											"end": 3296,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2930,
											"end": 3296,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3302,
											"end": 3668,
											"name": "tag",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 3302,
											"end": 3668,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3444,
											"end": 3447,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3465,
											"end": 3532,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 3529,
											"end": 3531,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3524,
											"end": 3527,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3465,
											"end": 3532,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 3465,
											"end": 3532,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3465,
											"end": 3532,
											"name": "tag",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 3465,
											"end": 3532,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3458,
											"end": 3532,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3458,
											"end": 3532,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3541,
											"end": 3634,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 3630,
											"end": 3633,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3541,
											"end": 3634,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 3541,
											"end": 3634,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3541,
											"end": 3634,
											"name": "tag",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 3541,
											"end": 3634,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3659,
											"end": 3661,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3654,
											"end": 3657,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3650,
											"end": 3662,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3643,
											"end": 3662,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3643,
											"end": 3662,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3302,
											"end": 3668,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3302,
											"end": 3668,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3302,
											"end": 3668,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3302,
											"end": 3668,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3674,
											"end": 4040,
											"name": "tag",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 3674,
											"end": 4040,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3816,
											"end": 3819,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3837,
											"end": 3904,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 3901,
											"end": 3903,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 3896,
											"end": 3899,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3837,
											"end": 3904,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 3837,
											"end": 3904,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3837,
											"end": 3904,
											"name": "tag",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 3837,
											"end": 3904,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3830,
											"end": 3904,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3830,
											"end": 3904,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3913,
											"end": 4006,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 4002,
											"end": 4005,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3913,
											"end": 4006,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 3913,
											"end": 4006,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3913,
											"end": 4006,
											"name": "tag",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 3913,
											"end": 4006,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4031,
											"end": 4033,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4026,
											"end": 4029,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4022,
											"end": 4034,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4015,
											"end": 4034,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4015,
											"end": 4034,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3674,
											"end": 4040,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3674,
											"end": 4040,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3674,
											"end": 4040,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3674,
											"end": 4040,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4046,
											"end": 4412,
											"name": "tag",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 4046,
											"end": 4412,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4188,
											"end": 4191,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4209,
											"end": 4276,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 4273,
											"end": 4275,
											"name": "PUSH",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 4268,
											"end": 4271,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4209,
											"end": 4276,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 4209,
											"end": 4276,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4209,
											"end": 4276,
											"name": "tag",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 4209,
											"end": 4276,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4202,
											"end": 4276,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4202,
											"end": 4276,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4285,
											"end": 4378,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 4374,
											"end": 4377,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4285,
											"end": 4378,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 4285,
											"end": 4378,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4285,
											"end": 4378,
											"name": "tag",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 4285,
											"end": 4378,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4403,
											"end": 4405,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4398,
											"end": 4401,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4394,
											"end": 4406,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4387,
											"end": 4406,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4387,
											"end": 4406,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4046,
											"end": 4412,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4046,
											"end": 4412,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4046,
											"end": 4412,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4046,
											"end": 4412,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4418,
											"end": 4784,
											"name": "tag",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 4418,
											"end": 4784,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4560,
											"end": 4563,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4581,
											"end": 4648,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 4645,
											"end": 4647,
											"name": "PUSH",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 4640,
											"end": 4643,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4581,
											"end": 4648,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 4581,
											"end": 4648,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4581,
											"end": 4648,
											"name": "tag",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 4581,
											"end": 4648,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4574,
											"end": 4648,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4574,
											"end": 4648,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4657,
											"end": 4750,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 4746,
											"end": 4749,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4657,
											"end": 4750,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 4657,
											"end": 4750,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4657,
											"end": 4750,
											"name": "tag",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 4657,
											"end": 4750,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4775,
											"end": 4777,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4770,
											"end": 4773,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4766,
											"end": 4778,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4759,
											"end": 4778,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4759,
											"end": 4778,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4418,
											"end": 4784,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4418,
											"end": 4784,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4418,
											"end": 4784,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4418,
											"end": 4784,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4790,
											"end": 4908,
											"name": "tag",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 4790,
											"end": 4908,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 4901,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 4895,
											"end": 4900,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4877,
											"end": 4901,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 4877,
											"end": 4901,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4877,
											"end": 4901,
											"name": "tag",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 4877,
											"end": 4901,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4872,
											"end": 4875,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4865,
											"end": 4902,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4790,
											"end": 4908,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4790,
											"end": 4908,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4790,
											"end": 4908,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4914,
											"end": 5040,
											"name": "tag",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 4914,
											"end": 5040,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5009,
											"end": 5033,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 5027,
											"end": 5032,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5009,
											"end": 5033,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 5009,
											"end": 5033,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5009,
											"end": 5033,
											"name": "tag",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 5009,
											"end": 5033,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5004,
											"end": 5007,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4997,
											"end": 5034,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 5040,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 5040,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 5040,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5046,
											"end": 5256,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 5046,
											"end": 5256,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5133,
											"end": 5137,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5171,
											"end": 5173,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5160,
											"end": 5169,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5156,
											"end": 5174,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5148,
											"end": 5174,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5148,
											"end": 5174,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5184,
											"end": 5249,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 5246,
											"end": 5247,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5235,
											"end": 5244,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5231,
											"end": 5248,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5222,
											"end": 5228,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5184,
											"end": 5249,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 5184,
											"end": 5249,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5184,
											"end": 5249,
											"name": "tag",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 5184,
											"end": 5249,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5046,
											"end": 5256,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5046,
											"end": 5256,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5046,
											"end": 5256,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5046,
											"end": 5256,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5046,
											"end": 5256,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5262,
											"end": 5575,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 5262,
											"end": 5575,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5375,
											"end": 5379,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5413,
											"end": 5415,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5402,
											"end": 5411,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5398,
											"end": 5416,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5390,
											"end": 5416,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5390,
											"end": 5416,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5462,
											"end": 5471,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5456,
											"end": 5460,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5452,
											"end": 5472,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5448,
											"end": 5449,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5437,
											"end": 5446,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5433,
											"end": 5450,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5426,
											"end": 5473,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5490,
											"end": 5568,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 5563,
											"end": 5567,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5554,
											"end": 5560,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5490,
											"end": 5568,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 5490,
											"end": 5568,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5490,
											"end": 5568,
											"name": "tag",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 5490,
											"end": 5568,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5482,
											"end": 5568,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5482,
											"end": 5568,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5262,
											"end": 5575,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5262,
											"end": 5575,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5262,
											"end": 5575,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5262,
											"end": 5575,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5262,
											"end": 5575,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5581,
											"end": 6000,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 5581,
											"end": 6000,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5747,
											"end": 5751,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5785,
											"end": 5787,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5774,
											"end": 5783,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5770,
											"end": 5788,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5762,
											"end": 5788,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5762,
											"end": 5788,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5834,
											"end": 5843,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5828,
											"end": 5832,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5824,
											"end": 5844,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5820,
											"end": 5821,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5809,
											"end": 5818,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5805,
											"end": 5822,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5798,
											"end": 5845,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5862,
											"end": 5993,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 5988,
											"end": 5992,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5862,
											"end": 5993,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 5862,
											"end": 5993,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5862,
											"end": 5993,
											"name": "tag",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 5862,
											"end": 5993,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5854,
											"end": 5993,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5854,
											"end": 5993,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5581,
											"end": 6000,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5581,
											"end": 6000,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5581,
											"end": 6000,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5581,
											"end": 6000,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6006,
											"end": 6425,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 6006,
											"end": 6425,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6172,
											"end": 6176,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6210,
											"end": 6212,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6199,
											"end": 6208,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6195,
											"end": 6213,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6187,
											"end": 6213,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6187,
											"end": 6213,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6259,
											"end": 6268,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6253,
											"end": 6257,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6249,
											"end": 6269,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6245,
											"end": 6246,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6234,
											"end": 6243,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6230,
											"end": 6247,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6223,
											"end": 6270,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6287,
											"end": 6418,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 6413,
											"end": 6417,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6287,
											"end": 6418,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 6287,
											"end": 6418,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6287,
											"end": 6418,
											"name": "tag",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 6287,
											"end": 6418,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6279,
											"end": 6418,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6279,
											"end": 6418,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6006,
											"end": 6425,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6006,
											"end": 6425,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6006,
											"end": 6425,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6006,
											"end": 6425,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6431,
											"end": 6850,
											"name": "tag",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 6431,
											"end": 6850,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6597,
											"end": 6601,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6635,
											"end": 6637,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6624,
											"end": 6633,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6620,
											"end": 6638,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6612,
											"end": 6638,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6612,
											"end": 6638,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6684,
											"end": 6693,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6678,
											"end": 6682,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6674,
											"end": 6694,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6670,
											"end": 6671,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6659,
											"end": 6668,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6655,
											"end": 6672,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6648,
											"end": 6695,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6712,
											"end": 6843,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 6838,
											"end": 6842,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6712,
											"end": 6843,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 6712,
											"end": 6843,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6712,
											"end": 6843,
											"name": "tag",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 6712,
											"end": 6843,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6704,
											"end": 6843,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6704,
											"end": 6843,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6431,
											"end": 6850,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6431,
											"end": 6850,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6431,
											"end": 6850,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6431,
											"end": 6850,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6856,
											"end": 7275,
											"name": "tag",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 6856,
											"end": 7275,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7022,
											"end": 7026,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7060,
											"end": 7062,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7049,
											"end": 7058,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7045,
											"end": 7063,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7037,
											"end": 7063,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7037,
											"end": 7063,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7109,
											"end": 7118,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7103,
											"end": 7107,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7099,
											"end": 7119,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7095,
											"end": 7096,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7084,
											"end": 7093,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7080,
											"end": 7097,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7120,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7137,
											"end": 7268,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 7263,
											"end": 7267,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7137,
											"end": 7268,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 7137,
											"end": 7268,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7137,
											"end": 7268,
											"name": "tag",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 7137,
											"end": 7268,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7129,
											"end": 7268,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7129,
											"end": 7268,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6856,
											"end": 7275,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6856,
											"end": 7275,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6856,
											"end": 7275,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6856,
											"end": 7275,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7281,
											"end": 7700,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 7281,
											"end": 7700,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7447,
											"end": 7451,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7485,
											"end": 7487,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7474,
											"end": 7483,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7470,
											"end": 7488,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7462,
											"end": 7488,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7462,
											"end": 7488,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7534,
											"end": 7543,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7528,
											"end": 7532,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7524,
											"end": 7544,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7520,
											"end": 7521,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7509,
											"end": 7518,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7505,
											"end": 7522,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7498,
											"end": 7545,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7562,
											"end": 7693,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 7688,
											"end": 7692,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7562,
											"end": 7693,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 7562,
											"end": 7693,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7562,
											"end": 7693,
											"name": "tag",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 7562,
											"end": 7693,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7554,
											"end": 7693,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7554,
											"end": 7693,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7281,
											"end": 7700,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7281,
											"end": 7700,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7281,
											"end": 7700,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7281,
											"end": 7700,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7706,
											"end": 8125,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 7706,
											"end": 8125,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7872,
											"end": 7876,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7910,
											"end": 7912,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7899,
											"end": 7908,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7895,
											"end": 7913,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7887,
											"end": 7913,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7887,
											"end": 7913,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7959,
											"end": 7968,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7953,
											"end": 7957,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7949,
											"end": 7969,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7945,
											"end": 7946,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7934,
											"end": 7943,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7930,
											"end": 7947,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7923,
											"end": 7970,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7987,
											"end": 8118,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 8113,
											"end": 8117,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7987,
											"end": 8118,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 7987,
											"end": 8118,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7987,
											"end": 8118,
											"name": "tag",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 7987,
											"end": 8118,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7979,
											"end": 8118,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7979,
											"end": 8118,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7706,
											"end": 8125,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7706,
											"end": 8125,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7706,
											"end": 8125,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7706,
											"end": 8125,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 8131,
											"end": 8353,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 8131,
											"end": 8353,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8224,
											"end": 8228,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8262,
											"end": 8264,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8251,
											"end": 8260,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8247,
											"end": 8265,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8239,
											"end": 8265,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8239,
											"end": 8265,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8275,
											"end": 8346,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 8343,
											"end": 8344,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8332,
											"end": 8341,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8328,
											"end": 8345,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8319,
											"end": 8325,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8275,
											"end": 8346,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 8275,
											"end": 8346,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8275,
											"end": 8346,
											"name": "tag",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 8275,
											"end": 8346,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8131,
											"end": 8353,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8131,
											"end": 8353,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8131,
											"end": 8353,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8131,
											"end": 8353,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8131,
											"end": 8353,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 8359,
											"end": 8715,
											"name": "tag",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 8359,
											"end": 8715,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8488,
											"end": 8492,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8526,
											"end": 8528,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8515,
											"end": 8524,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8511,
											"end": 8529,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8503,
											"end": 8529,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8503,
											"end": 8529,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8539,
											"end": 8618,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 8615,
											"end": 8616,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8604,
											"end": 8613,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8600,
											"end": 8617,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8591,
											"end": 8597,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 8539,
											"end": 8618,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 8539,
											"end": 8618,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8539,
											"end": 8618,
											"name": "tag",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 8539,
											"end": 8618,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8628,
											"end": 8708,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 8704,
											"end": 8706,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8693,
											"end": 8702,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8689,
											"end": 8707,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8680,
											"end": 8686,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8628,
											"end": 8708,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 8628,
											"end": 8708,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8628,
											"end": 8708,
											"name": "tag",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 8628,
											"end": 8708,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8359,
											"end": 8715,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 8359,
											"end": 8715,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8359,
											"end": 8715,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8359,
											"end": 8715,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8359,
											"end": 8715,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8359,
											"end": 8715,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 8802,
											"end": 8901,
											"name": "tag",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 8802,
											"end": 8901,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8854,
											"end": 8860,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8888,
											"end": 8893,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8882,
											"end": 8894,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8872,
											"end": 8894,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8872,
											"end": 8894,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8802,
											"end": 8901,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8802,
											"end": 8901,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8802,
											"end": 8901,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8802,
											"end": 8901,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 8907,
											"end": 9076,
											"name": "tag",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 8907,
											"end": 9076,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8991,
											"end": 9002,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9025,
											"end": 9031,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9020,
											"end": 9023,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9013,
											"end": 9032,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9065,
											"end": 9069,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9060,
											"end": 9063,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9056,
											"end": 9070,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9041,
											"end": 9070,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9041,
											"end": 9070,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8907,
											"end": 9076,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8907,
											"end": 9076,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8907,
											"end": 9076,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8907,
											"end": 9076,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8907,
											"end": 9076,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 9082,
											"end": 9387,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 9082,
											"end": 9387,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9122,
											"end": 9125,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9141,
											"end": 9161,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "238"
										},
										{
											"begin": 9159,
											"end": 9160,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9141,
											"end": 9161,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 9141,
											"end": 9161,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9141,
											"end": 9161,
											"name": "tag",
											"source": 3,
											"value": "238"
										},
										{
											"begin": 9141,
											"end": 9161,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9136,
											"end": 9161,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9136,
											"end": 9161,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9175,
											"end": 9195,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 9193,
											"end": 9194,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9175,
											"end": 9195,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 9175,
											"end": 9195,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9175,
											"end": 9195,
											"name": "tag",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 9175,
											"end": 9195,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9170,
											"end": 9195,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 9170,
											"end": 9195,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9329,
											"end": 9330,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9261,
											"end": 9327,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9257,
											"end": 9331,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9254,
											"end": 9255,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9251,
											"end": 9332,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 9248,
											"end": 9355,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9248,
											"end": 9355,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "240"
										},
										{
											"begin": 9248,
											"end": 9355,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9335,
											"end": 9353,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 9335,
											"end": 9353,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 9335,
											"end": 9353,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9335,
											"end": 9353,
											"name": "tag",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 9335,
											"end": 9353,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9248,
											"end": 9355,
											"name": "tag",
											"source": 3,
											"value": "240"
										},
										{
											"begin": 9248,
											"end": 9355,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9379,
											"end": 9380,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9376,
											"end": 9377,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9372,
											"end": 9381,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9365,
											"end": 9381,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9365,
											"end": 9381,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9082,
											"end": 9387,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 9082,
											"end": 9387,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9082,
											"end": 9387,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9082,
											"end": 9387,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9082,
											"end": 9387,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 9393,
											"end": 9741,
											"name": "tag",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 9393,
											"end": 9741,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9433,
											"end": 9440,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9456,
											"end": 9476,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 9474,
											"end": 9475,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9456,
											"end": 9476,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 9456,
											"end": 9476,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9456,
											"end": 9476,
											"name": "tag",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 9456,
											"end": 9476,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9451,
											"end": 9476,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9451,
											"end": 9476,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9490,
											"end": 9510,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 9508,
											"end": 9509,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9490,
											"end": 9510,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 9490,
											"end": 9510,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9490,
											"end": 9510,
											"name": "tag",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 9490,
											"end": 9510,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9485,
											"end": 9510,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 9485,
											"end": 9510,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9678,
											"end": 9679,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9610,
											"end": 9676,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9606,
											"end": 9680,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 9603,
											"end": 9604,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9600,
											"end": 9681,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 9595,
											"end": 9596,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9588,
											"end": 9597,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9581,
											"end": 9598,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9577,
											"end": 9682,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9574,
											"end": 9705,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9574,
											"end": 9705,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 9574,
											"end": 9705,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9685,
											"end": 9703,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 9685,
											"end": 9703,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 9685,
											"end": 9703,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9685,
											"end": 9703,
											"name": "tag",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 9685,
											"end": 9703,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9574,
											"end": 9705,
											"name": "tag",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 9574,
											"end": 9705,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9733,
											"end": 9734,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9730,
											"end": 9731,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9726,
											"end": 9735,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 9715,
											"end": 9735,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9715,
											"end": 9735,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9393,
											"end": 9741,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 9393,
											"end": 9741,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9393,
											"end": 9741,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9393,
											"end": 9741,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9393,
											"end": 9741,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 9747,
											"end": 9938,
											"name": "tag",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 9747,
											"end": 9938,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9787,
											"end": 9791,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9807,
											"end": 9827,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "249"
										},
										{
											"begin": 9825,
											"end": 9826,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9807,
											"end": 9827,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 9807,
											"end": 9827,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9807,
											"end": 9827,
											"name": "tag",
											"source": 3,
											"value": "249"
										},
										{
											"begin": 9807,
											"end": 9827,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9802,
											"end": 9827,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9802,
											"end": 9827,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9841,
											"end": 9861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 9859,
											"end": 9860,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9841,
											"end": 9861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 9841,
											"end": 9861,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9841,
											"end": 9861,
											"name": "tag",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 9841,
											"end": 9861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9861,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9880,
											"end": 9881,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9877,
											"end": 9878,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9874,
											"end": 9882,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 9871,
											"end": 9905,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9871,
											"end": 9905,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 9871,
											"end": 9905,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9885,
											"end": 9903,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "252"
										},
										{
											"begin": 9885,
											"end": 9903,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 9885,
											"end": 9903,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9885,
											"end": 9903,
											"name": "tag",
											"source": 3,
											"value": "252"
										},
										{
											"begin": 9885,
											"end": 9903,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9871,
											"end": 9905,
											"name": "tag",
											"source": 3,
											"value": "251"
										},
										{
											"begin": 9871,
											"end": 9905,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9930,
											"end": 9931,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9927,
											"end": 9928,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9923,
											"end": 9932,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9915,
											"end": 9932,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9915,
											"end": 9932,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9747,
											"end": 9938,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 9747,
											"end": 9938,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9747,
											"end": 9938,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9747,
											"end": 9938,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9747,
											"end": 9938,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 9944,
											"end": 10040,
											"name": "tag",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 9944,
											"end": 10040,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9981,
											"end": 9988,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10010,
											"end": 10034,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "254"
										},
										{
											"begin": 10028,
											"end": 10033,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10010,
											"end": 10034,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "255"
										},
										{
											"begin": 10010,
											"end": 10034,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10010,
											"end": 10034,
											"name": "tag",
											"source": 3,
											"value": "254"
										},
										{
											"begin": 10010,
											"end": 10034,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9999,
											"end": 10034,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9999,
											"end": 10034,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9944,
											"end": 10040,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9944,
											"end": 10040,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9944,
											"end": 10040,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9944,
											"end": 10040,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 10046,
											"end": 10136,
											"name": "tag",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 10046,
											"end": 10136,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10080,
											"end": 10087,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10123,
											"end": 10128,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10116,
											"end": 10129,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10109,
											"end": 10130,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10098,
											"end": 10130,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10098,
											"end": 10130,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10046,
											"end": 10136,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10046,
											"end": 10136,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10046,
											"end": 10136,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10046,
											"end": 10136,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 10142,
											"end": 10268,
											"name": "tag",
											"source": 3,
											"value": "255"
										},
										{
											"begin": 10142,
											"end": 10268,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10179,
											"end": 10186,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10219,
											"end": 10261,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10212,
											"end": 10217,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10208,
											"end": 10262,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10197,
											"end": 10262,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10197,
											"end": 10262,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10142,
											"end": 10268,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10142,
											"end": 10268,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10142,
											"end": 10268,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10142,
											"end": 10268,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 10274,
											"end": 10351,
											"name": "tag",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 10274,
											"end": 10351,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10311,
											"end": 10318,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10340,
											"end": 10345,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10329,
											"end": 10345,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10329,
											"end": 10345,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10274,
											"end": 10351,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10274,
											"end": 10351,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10274,
											"end": 10351,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10274,
											"end": 10351,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 10357,
											"end": 10664,
											"name": "tag",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 10357,
											"end": 10664,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10425,
											"end": 10426,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10435,
											"end": 10548,
											"name": "tag",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 10435,
											"end": 10548,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10449,
											"end": 10455,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10446,
											"end": 10447,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10443,
											"end": 10456,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 10435,
											"end": 10548,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10435,
											"end": 10548,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 10435,
											"end": 10548,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10534,
											"end": 10535,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10529,
											"end": 10532,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10525,
											"end": 10536,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10519,
											"end": 10537,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10515,
											"end": 10516,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10510,
											"end": 10513,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10506,
											"end": 10517,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10499,
											"end": 10538,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10471,
											"end": 10473,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10468,
											"end": 10469,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10464,
											"end": 10474,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10459,
											"end": 10474,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10459,
											"end": 10474,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10435,
											"end": 10548,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 10435,
											"end": 10548,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10435,
											"end": 10548,
											"name": "tag",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 10435,
											"end": 10548,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10566,
											"end": 10572,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10563,
											"end": 10564,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10560,
											"end": 10573,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 10557,
											"end": 10658,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10557,
											"end": 10658,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "263"
										},
										{
											"begin": 10557,
											"end": 10658,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10646,
											"end": 10647,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10637,
											"end": 10643,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10632,
											"end": 10635,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10628,
											"end": 10644,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10621,
											"end": 10648,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10557,
											"end": 10658,
											"name": "tag",
											"source": 3,
											"value": "263"
										},
										{
											"begin": 10557,
											"end": 10658,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10406,
											"end": 10664,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10357,
											"end": 10664,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10357,
											"end": 10664,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10357,
											"end": 10664,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10357,
											"end": 10664,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 10670,
											"end": 10990,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 10670,
											"end": 10990,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10714,
											"end": 10720,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10751,
											"end": 10752,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 10745,
											"end": 10749,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10741,
											"end": 10753,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 10731,
											"end": 10753,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10731,
											"end": 10753,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10798,
											"end": 10799,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 10792,
											"end": 10796,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10788,
											"end": 10800,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10819,
											"end": 10837,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10809,
											"end": 10890,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 10809,
											"end": 10890,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10875,
											"end": 10879,
											"name": "PUSH",
											"source": 3,
											"value": "7F"
										},
										{
											"begin": 10867,
											"end": 10873,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10863,
											"end": 10880,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10853,
											"end": 10880,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10853,
											"end": 10880,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10809,
											"end": 10890,
											"name": "tag",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 10809,
											"end": 10890,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10937,
											"end": 10939,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10929,
											"end": 10935,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10926,
											"end": 10940,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 10906,
											"end": 10924,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10903,
											"end": 10941,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 10900,
											"end": 10984,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10900,
											"end": 10984,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 10900,
											"end": 10984,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10956,
											"end": 10974,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "267"
										},
										{
											"begin": 10956,
											"end": 10974,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "268"
										},
										{
											"begin": 10956,
											"end": 10974,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 10956,
											"end": 10974,
											"name": "tag",
											"source": 3,
											"value": "267"
										},
										{
											"begin": 10956,
											"end": 10974,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10900,
											"end": 10984,
											"name": "tag",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 10900,
											"end": 10984,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10721,
											"end": 10990,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10670,
											"end": 10990,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10670,
											"end": 10990,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10670,
											"end": 10990,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10670,
											"end": 10990,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 10996,
											"end": 11176,
											"name": "tag",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 10996,
											"end": 11176,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11044,
											"end": 11121,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11041,
											"end": 11042,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11034,
											"end": 11122,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11141,
											"end": 11145,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 11138,
											"end": 11139,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 11131,
											"end": 11146,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11165,
											"end": 11169,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 11162,
											"end": 11163,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11155,
											"end": 11170,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 11182,
											"end": 11362,
											"name": "tag",
											"source": 3,
											"value": "268"
										},
										{
											"begin": 11182,
											"end": 11362,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11230,
											"end": 11307,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11227,
											"end": 11228,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11220,
											"end": 11308,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11327,
											"end": 11331,
											"name": "PUSH",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 11324,
											"end": 11325,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 11317,
											"end": 11332,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11351,
											"end": 11355,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 11348,
											"end": 11349,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11341,
											"end": 11356,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 11491,
											"end": 11608,
											"name": "tag",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 11491,
											"end": 11608,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11600,
											"end": 11601,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11597,
											"end": 11598,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11590,
											"end": 11602,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 11614,
											"end": 11716,
											"name": "tag",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 11614,
											"end": 11716,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11655,
											"end": 11661,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11706,
											"end": 11708,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 11702,
											"end": 11709,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 11697,
											"end": 11699,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 11690,
											"end": 11695,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11686,
											"end": 11700,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11682,
											"end": 11710,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11672,
											"end": 11710,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11672,
											"end": 11710,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11614,
											"end": 11716,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11614,
											"end": 11716,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11614,
											"end": 11716,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11614,
											"end": 11716,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 11722,
											"end": 11943,
											"name": "tag",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 11722,
											"end": 11943,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11862,
											"end": 11896,
											"name": "PUSH",
											"source": 3,
											"value": "596F7520646F206E6F7420686176652073756666696369656E742062616C616E"
										},
										{
											"begin": 11858,
											"end": 11859,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11850,
											"end": 11856,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11846,
											"end": 11860,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11839,
											"end": 11897,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11931,
											"end": 11935,
											"name": "PUSH",
											"source": 3,
											"value": "6365000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11926,
											"end": 11928,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11918,
											"end": 11924,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11914,
											"end": 11929,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11907,
											"end": 11936,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11722,
											"end": 11943,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11722,
											"end": 11943,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 11949,
											"end": 12119,
											"name": "tag",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 11949,
											"end": 12119,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12089,
											"end": 12111,
											"name": "PUSH",
											"source": 3,
											"value": "496E73756666696369656E742062616C616E6365000000000000000000000000"
										},
										{
											"begin": 12085,
											"end": 12086,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12077,
											"end": 12083,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12073,
											"end": 12087,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12066,
											"end": 12112,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11949,
											"end": 12119,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11949,
											"end": 12119,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 12125,
											"end": 12307,
											"name": "tag",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 12125,
											"end": 12307,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12265,
											"end": 12299,
											"name": "PUSH",
											"source": 3,
											"value": "436F6E74726163742062616C616E636520697320696E73756666696369656E74"
										},
										{
											"begin": 12261,
											"end": 12262,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12253,
											"end": 12259,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12249,
											"end": 12263,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12242,
											"end": 12300,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12125,
											"end": 12307,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12125,
											"end": 12307,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 12313,
											"end": 12480,
											"name": "tag",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 12313,
											"end": 12480,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12453,
											"end": 12472,
											"name": "PUSH",
											"source": 3,
											"value": "556E7375636365737366756C2053656E64000000000000000000000000000000"
										},
										{
											"begin": 12449,
											"end": 12450,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12441,
											"end": 12447,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12437,
											"end": 12451,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12430,
											"end": 12473,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12313,
											"end": 12480,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12313,
											"end": 12480,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 12486,
											"end": 12712,
											"name": "tag",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 12486,
											"end": 12712,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12626,
											"end": 12660,
											"name": "PUSH",
											"source": 3,
											"value": "4F6E6C7920746865206F776E65722063616E2064657374726F79207468652063"
										},
										{
											"begin": 12622,
											"end": 12623,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12614,
											"end": 12620,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12610,
											"end": 12624,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12603,
											"end": 12661,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12695,
											"end": 12704,
											"name": "PUSH",
											"source": 3,
											"value": "6F6E747261637400000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12690,
											"end": 12692,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 12682,
											"end": 12688,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12678,
											"end": 12693,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12671,
											"end": 12705,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12486,
											"end": 12712,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12486,
											"end": 12712,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 12718,
											"end": 12939,
											"name": "tag",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 12718,
											"end": 12939,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12858,
											"end": 12892,
											"name": "PUSH",
											"source": 3,
											"value": "4F6E6C7920746865206F776E65722063616E206D696E74206E657720746F6B65"
										},
										{
											"begin": 12854,
											"end": 12855,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12846,
											"end": 12852,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12842,
											"end": 12856,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12835,
											"end": 12893,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12927,
											"end": 12931,
											"name": "PUSH",
											"source": 3,
											"value": "6E73000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12922,
											"end": 12924,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 12914,
											"end": 12920,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12910,
											"end": 12925,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12903,
											"end": 12932,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12718,
											"end": 12939,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12718,
											"end": 12939,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 12945,
											"end": 13067,
											"name": "tag",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 12945,
											"end": 13067,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13018,
											"end": 13042,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "282"
										},
										{
											"begin": 13036,
											"end": 13041,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13018,
											"end": 13042,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 13018,
											"end": 13042,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 13018,
											"end": 13042,
											"name": "tag",
											"source": 3,
											"value": "282"
										},
										{
											"begin": 13018,
											"end": 13042,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13011,
											"end": 13016,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13008,
											"end": 13043,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 12998,
											"end": 13061,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "283"
										},
										{
											"begin": 12998,
											"end": 13061,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 13057,
											"end": 13058,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13054,
											"end": 13055,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 13047,
											"end": 13059,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 12998,
											"end": 13061,
											"name": "tag",
											"source": 3,
											"value": "283"
										},
										{
											"begin": 12998,
											"end": 13061,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12945,
											"end": 13067,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12945,
											"end": 13067,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 13073,
											"end": 13189,
											"name": "tag",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 13073,
											"end": 13189,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13143,
											"end": 13164,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "285"
										},
										{
											"begin": 13158,
											"end": 13163,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13143,
											"end": 13164,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 13143,
											"end": 13164,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 13143,
											"end": 13164,
											"name": "tag",
											"source": 3,
											"value": "285"
										},
										{
											"begin": 13143,
											"end": 13164,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13136,
											"end": 13141,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13133,
											"end": 13165,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 13123,
											"end": 13183,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "286"
										},
										{
											"begin": 13123,
											"end": 13183,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 13179,
											"end": 13180,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13176,
											"end": 13177,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 13169,
											"end": 13181,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 13123,
											"end": 13183,
											"name": "tag",
											"source": 3,
											"value": "286"
										},
										{
											"begin": 13123,
											"end": 13183,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13073,
											"end": 13189,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13073,
											"end": 13189,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 13195,
											"end": 13317,
											"name": "tag",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 13195,
											"end": 13317,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13268,
											"end": 13292,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "288"
										},
										{
											"begin": 13286,
											"end": 13291,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13268,
											"end": 13292,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 13268,
											"end": 13292,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 13268,
											"end": 13292,
											"name": "tag",
											"source": 3,
											"value": "288"
										},
										{
											"begin": 13268,
											"end": 13292,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13261,
											"end": 13266,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13258,
											"end": 13293,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 13248,
											"end": 13311,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "289"
										},
										{
											"begin": 13248,
											"end": 13311,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 13307,
											"end": 13308,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13304,
											"end": 13305,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 13297,
											"end": 13309,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 13248,
											"end": 13311,
											"name": "tag",
											"source": 3,
											"value": "289"
										},
										{
											"begin": 13248,
											"end": 13311,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13195,
											"end": 13317,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13195,
											"end": 13317,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"balanceOf(address)": "70a08231",
							"close()": "43d726d6",
							"getName()": "17d7de7c",
							"getPrice()": "98d5fdca",
							"getSymbol()": "15070401",
							"mint(address,uint256)": "40c10f19",
							"sell(uint256)": "e4849b32",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Sell\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"close\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSymbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"sell\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"B226328_part2.sol\":\"Part2_token\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"B226328_part2.sol\":{\"keccak256\":\"0x2bea95b5ca84d43e89ff87eb83ae907c6456e74080e7248ffce42e05b89c5036\",\"urls\":[\"bzz-raw://bc62dcbfab5dd4c2fa8041145f78fbed36ca63a9aa9f7adefc0586134ba43e2c\",\"dweb:/ipfs/QmUoCj1Jp3XTmG6WENMMQTwzeEDyW1fpstk71KKWd1tA6m\"]},\"Library.sol\":{\"keccak256\":\"0xbd7258166b8feaed4bd073ed4a37d21f247a27f8e7cff50aa03af47cae269f64\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b20503300cb31cceaf3b150c7d31fd7e04ab29a9338cb32528ecae67aabb47d7\",\"dweb:/ipfs/QmeFWYWvCJyQC7p9gufq25ojx6rjiWMciM5GgNZtBt7ycu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 320,
								"contract": "B226328_part2.sol:Part2_token",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address_payable"
							},
							{
								"astId": 322,
								"contract": "B226328_part2.sol:Part2_token",
								"label": "name",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 324,
								"contract": "B226328_part2.sol:Part2_token",
								"label": "symbol",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 326,
								"contract": "B226328_part2.sol:Part2_token",
								"label": "price",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 328,
								"contract": "B226328_part2.sol:Part2_token",
								"label": "totalsupply",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 332,
								"contract": "B226328_part2.sol:Part2_token",
								"label": "balances",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 336,
								"contract": "B226328_part2.sol:Part2_token",
								"label": "roles",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Library.sol": {
				"customLib": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Library.sol\":145:514  library customLib {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Library.sol\":145:514  library customLib {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xc0ba8f42\n      eq\n      tag_2\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"Library.sol\":246:511  function customSend(uint256 value, address receiver) public returns (bool) {\r... */\n    tag_2:\n      dup2\n      dup1\n      iszero\n      tag_3\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_3:\n      pop\n      tag_4\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_5\n      swap2\n      swap1\n      tag_6\n      jump\t// in\n    tag_5:\n      tag_7\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_7:\n        /* \"Library.sol\":315:319  bool */\n      0x00\n        /* \"Library.sol\":348:349  1 */\n      0x01\n        /* \"Library.sol\":340:345  value */\n      dup4\n        /* \"Library.sol\":340:349  value > 1 */\n      gt\n        /* \"Library.sol\":332:350  require(value > 1) */\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n        /* \"Library.sol\":195:237  0xC8e8aDd5C59Df1B0b2F2386A4c4119aA1021e2Ff */\n      0xc8e8add5c59df1b0b2f2386a4c4119aa1021e2ff\n        /* \"Library.sol\":371:394  payable(owner).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Library.sol\":371:397  payable(owner).transfer(1) */\n      0x08fc\n        /* \"Library.sol\":395:396  1 */\n      0x01\n        /* \"Library.sol\":371:397  payable(owner).transfer(1) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_13\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_13:\n      pop\n        /* \"Library.sol\":419:431  bool success */\n      0x00\n        /* \"Library.sol\":444:452  receiver */\n      dup3\n        /* \"Library.sol\":436:458  payable(receiver).call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Library.sol\":472:473  1 */\n      0x01\n        /* \"Library.sol\":466:471  value */\n      dup6\n        /* \"Library.sol\":466:473  value-1 */\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n        /* \"Library.sol\":436:478  payable(receiver).call{value: value-1}(\"\") */\n      mload(0x40)\n      tag_16\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_20\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_19)\n    tag_20:\n      0x60\n      swap2\n      pop\n    tag_19:\n      pop\n        /* \"Library.sol\":418:478  (bool success,) = payable(receiver).call{value: value-1}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"Library.sol\":496:503  success */\n      dup1\n        /* \"Library.sol\":489:503  return success */\n      swap2\n      pop\n      pop\n        /* \"Library.sol\":246:511  function customSend(uint256 value, address receiver) public returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_22:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_24\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_25\n      jump\t// in\n    tag_24:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:291   */\n    tag_26:\n        /* \"#utility.yul\":198:203   */\n      0x00\n        /* \"#utility.yul\":236:242   */\n      dup2\n        /* \"#utility.yul\":223:243   */\n      calldataload\n        /* \"#utility.yul\":214:243   */\n      swap1\n      pop\n        /* \"#utility.yul\":252:285   */\n      tag_28\n        /* \"#utility.yul\":279:284   */\n      dup2\n        /* \"#utility.yul\":252:285   */\n      tag_29\n      jump\t// in\n    tag_28:\n        /* \"#utility.yul\":152:291   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":297:771   */\n    tag_6:\n        /* \"#utility.yul\":365:371   */\n      0x00\n        /* \"#utility.yul\":373:379   */\n      dup1\n        /* \"#utility.yul\":422:424   */\n      0x40\n        /* \"#utility.yul\":410:419   */\n      dup4\n        /* \"#utility.yul\":401:408   */\n      dup6\n        /* \"#utility.yul\":397:420   */\n      sub\n        /* \"#utility.yul\":393:425   */\n      slt\n        /* \"#utility.yul\":390:509   */\n      iszero\n      tag_31\n      jumpi\n        /* \"#utility.yul\":428:507   */\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n        /* \"#utility.yul\":390:509   */\n    tag_31:\n        /* \"#utility.yul\":548:549   */\n      0x00\n        /* \"#utility.yul\":573:626   */\n      tag_34\n        /* \"#utility.yul\":618:625   */\n      dup6\n        /* \"#utility.yul\":609:615   */\n      dup3\n        /* \"#utility.yul\":598:607   */\n      dup7\n        /* \"#utility.yul\":594:616   */\n      add\n        /* \"#utility.yul\":573:626   */\n      tag_26\n      jump\t// in\n    tag_34:\n        /* \"#utility.yul\":563:626   */\n      swap3\n      pop\n        /* \"#utility.yul\":519:636   */\n      pop\n        /* \"#utility.yul\":675:677   */\n      0x20\n        /* \"#utility.yul\":701:754   */\n      tag_35\n        /* \"#utility.yul\":746:753   */\n      dup6\n        /* \"#utility.yul\":737:743   */\n      dup3\n        /* \"#utility.yul\":726:735   */\n      dup7\n        /* \"#utility.yul\":722:744   */\n      add\n        /* \"#utility.yul\":701:754   */\n      tag_22\n      jump\t// in\n    tag_35:\n        /* \"#utility.yul\":691:754   */\n      swap2\n      pop\n        /* \"#utility.yul\":646:764   */\n      pop\n        /* \"#utility.yul\":297:771   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":777:894   */\n    tag_36:\n        /* \"#utility.yul\":866:887   */\n      tag_38\n        /* \"#utility.yul\":881:886   */\n      dup2\n        /* \"#utility.yul\":866:887   */\n      tag_39\n      jump\t// in\n    tag_38:\n        /* \"#utility.yul\":861:864   */\n      dup3\n        /* \"#utility.yul\":854:888   */\n      mstore\n        /* \"#utility.yul\":777:894   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":900:1298   */\n    tag_40:\n        /* \"#utility.yul\":1059:1062   */\n      0x00\n        /* \"#utility.yul\":1080:1163   */\n      tag_42\n        /* \"#utility.yul\":1161:1162   */\n      0x00\n        /* \"#utility.yul\":1156:1159   */\n      dup4\n        /* \"#utility.yul\":1080:1163   */\n      tag_43\n      jump\t// in\n    tag_42:\n        /* \"#utility.yul\":1073:1163   */\n      swap2\n      pop\n        /* \"#utility.yul\":1172:1265   */\n      tag_44\n        /* \"#utility.yul\":1261:1264   */\n      dup3\n        /* \"#utility.yul\":1172:1265   */\n      tag_45\n      jump\t// in\n    tag_44:\n        /* \"#utility.yul\":1290:1291   */\n      0x00\n        /* \"#utility.yul\":1285:1288   */\n      dup3\n        /* \"#utility.yul\":1281:1292   */\n      add\n        /* \"#utility.yul\":1274:1292   */\n      swap1\n      pop\n        /* \"#utility.yul\":900:1298   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1304:1683   */\n    tag_17:\n        /* \"#utility.yul\":1488:1491   */\n      0x00\n        /* \"#utility.yul\":1510:1657   */\n      tag_47\n        /* \"#utility.yul\":1653:1656   */\n      dup3\n        /* \"#utility.yul\":1510:1657   */\n      tag_40\n      jump\t// in\n    tag_47:\n        /* \"#utility.yul\":1503:1657   */\n      swap2\n      pop\n        /* \"#utility.yul\":1674:1677   */\n      dup2\n        /* \"#utility.yul\":1667:1677   */\n      swap1\n      pop\n        /* \"#utility.yul\":1304:1683   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1689:1915   */\n    tag_9:\n        /* \"#utility.yul\":1784:1788   */\n      0x00\n        /* \"#utility.yul\":1822:1824   */\n      0x20\n        /* \"#utility.yul\":1811:1820   */\n      dup3\n        /* \"#utility.yul\":1807:1825   */\n      add\n        /* \"#utility.yul\":1799:1825   */\n      swap1\n      pop\n        /* \"#utility.yul\":1835:1908   */\n      tag_49\n        /* \"#utility.yul\":1905:1906   */\n      0x00\n        /* \"#utility.yul\":1894:1903   */\n      dup4\n        /* \"#utility.yul\":1890:1907   */\n      add\n        /* \"#utility.yul\":1881:1887   */\n      dup5\n        /* \"#utility.yul\":1835:1908   */\n      tag_36\n      jump\t// in\n    tag_49:\n        /* \"#utility.yul\":1689:1915   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2002:2149   */\n    tag_43:\n        /* \"#utility.yul\":2103:2114   */\n      0x00\n        /* \"#utility.yul\":2140:2143   */\n      dup2\n        /* \"#utility.yul\":2125:2143   */\n      swap1\n      pop\n        /* \"#utility.yul\":2002:2149   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2155:2346   */\n    tag_15:\n        /* \"#utility.yul\":2195:2199   */\n      0x00\n        /* \"#utility.yul\":2215:2235   */\n      tag_54\n        /* \"#utility.yul\":2233:2234   */\n      dup3\n        /* \"#utility.yul\":2215:2235   */\n      tag_55\n      jump\t// in\n    tag_54:\n        /* \"#utility.yul\":2210:2235   */\n      swap2\n      pop\n        /* \"#utility.yul\":2249:2269   */\n      tag_56\n        /* \"#utility.yul\":2267:2268   */\n      dup4\n        /* \"#utility.yul\":2249:2269   */\n      tag_55\n      jump\t// in\n    tag_56:\n        /* \"#utility.yul\":2244:2269   */\n      swap3\n      pop\n        /* \"#utility.yul\":2288:2289   */\n      dup3\n        /* \"#utility.yul\":2285:2286   */\n      dup3\n        /* \"#utility.yul\":2282:2290   */\n      lt\n        /* \"#utility.yul\":2279:2313   */\n      iszero\n      tag_57\n      jumpi\n        /* \"#utility.yul\":2293:2311   */\n      tag_58\n      tag_59\n      jump\t// in\n    tag_58:\n        /* \"#utility.yul\":2279:2313   */\n    tag_57:\n        /* \"#utility.yul\":2338:2339   */\n      dup3\n        /* \"#utility.yul\":2335:2336   */\n      dup3\n        /* \"#utility.yul\":2331:2340   */\n      sub\n        /* \"#utility.yul\":2323:2340   */\n      swap1\n      pop\n        /* \"#utility.yul\":2155:2346   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2352:2448   */\n    tag_60:\n        /* \"#utility.yul\":2389:2396   */\n      0x00\n        /* \"#utility.yul\":2418:2442   */\n      tag_62\n        /* \"#utility.yul\":2436:2441   */\n      dup3\n        /* \"#utility.yul\":2418:2442   */\n      tag_63\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":2407:2442   */\n      swap1\n      pop\n        /* \"#utility.yul\":2352:2448   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2454:2544   */\n    tag_39:\n        /* \"#utility.yul\":2488:2495   */\n      0x00\n        /* \"#utility.yul\":2531:2536   */\n      dup2\n        /* \"#utility.yul\":2524:2537   */\n      iszero\n        /* \"#utility.yul\":2517:2538   */\n      iszero\n        /* \"#utility.yul\":2506:2538   */\n      swap1\n      pop\n        /* \"#utility.yul\":2454:2544   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2550:2676   */\n    tag_63:\n        /* \"#utility.yul\":2587:2594   */\n      0x00\n        /* \"#utility.yul\":2627:2669   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2620:2625   */\n      dup3\n        /* \"#utility.yul\":2616:2670   */\n      and\n        /* \"#utility.yul\":2605:2670   */\n      swap1\n      pop\n        /* \"#utility.yul\":2550:2676   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2682:2759   */\n    tag_55:\n        /* \"#utility.yul\":2719:2726   */\n      0x00\n        /* \"#utility.yul\":2748:2753   */\n      dup2\n        /* \"#utility.yul\":2737:2753   */\n      swap1\n      pop\n        /* \"#utility.yul\":2682:2759   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2765:2945   */\n    tag_59:\n        /* \"#utility.yul\":2813:2890   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2810:2811   */\n      0x00\n        /* \"#utility.yul\":2803:2891   */\n      mstore\n        /* \"#utility.yul\":2910:2914   */\n      0x11\n        /* \"#utility.yul\":2907:2908   */\n      0x04\n        /* \"#utility.yul\":2900:2915   */\n      mstore\n        /* \"#utility.yul\":2934:2938   */\n      0x24\n        /* \"#utility.yul\":2931:2932   */\n      0x00\n        /* \"#utility.yul\":2924:2939   */\n      revert\n        /* \"#utility.yul\":3074:3191   */\n    tag_33:\n        /* \"#utility.yul\":3183:3184   */\n      0x00\n        /* \"#utility.yul\":3180:3181   */\n      dup1\n        /* \"#utility.yul\":3173:3185   */\n      revert\n        /* \"#utility.yul\":3197:3311   */\n    tag_45:\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3317:3439   */\n    tag_25:\n        /* \"#utility.yul\":3390:3414   */\n      tag_73\n        /* \"#utility.yul\":3408:3413   */\n      dup2\n        /* \"#utility.yul\":3390:3414   */\n      tag_60\n      jump\t// in\n    tag_73:\n        /* \"#utility.yul\":3383:3388   */\n      dup2\n        /* \"#utility.yul\":3380:3415   */\n      eq\n        /* \"#utility.yul\":3370:3433   */\n      tag_74\n      jumpi\n        /* \"#utility.yul\":3429:3430   */\n      0x00\n        /* \"#utility.yul\":3426:3427   */\n      dup1\n        /* \"#utility.yul\":3419:3431   */\n      revert\n        /* \"#utility.yul\":3370:3433   */\n    tag_74:\n        /* \"#utility.yul\":3317:3439   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3445:3567   */\n    tag_29:\n        /* \"#utility.yul\":3518:3542   */\n      tag_76\n        /* \"#utility.yul\":3536:3541   */\n      dup2\n        /* \"#utility.yul\":3518:3542   */\n      tag_55\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":3511:3516   */\n      dup2\n        /* \"#utility.yul\":3508:3543   */\n      eq\n        /* \"#utility.yul\":3498:3561   */\n      tag_77\n      jumpi\n        /* \"#utility.yul\":3557:3558   */\n      0x00\n        /* \"#utility.yul\":3554:3555   */\n      dup1\n        /* \"#utility.yul\":3547:3559   */\n      revert\n        /* \"#utility.yul\":3498:3561   */\n    tag_77:\n        /* \"#utility.yul\":3445:3567   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220e4242692848e67a9097974109a86d63b3715d0f54317e6aa4a2f01ab352bc09d64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "610352610053600b82828239805160001a607314610046577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c8063c0ba8f421461003a575b600080fd5b81801561004657600080fd5b50610061600480360381019061005c919061018e565b610077565b60405161006e9190610215565b60405180910390f35b60006001831161008657600080fd5b73c8e8add5c59df1b0b2f2386a4c4119aa1021e2ff73ffffffffffffffffffffffffffffffffffffffff166108fc60019081150290604051600060405180830381858888f193505050501580156100e1573d6000803e3d6000fd5b5060008273ffffffffffffffffffffffffffffffffffffffff16600185610108919061023b565b60405161011490610200565b60006040518083038185875af1925050503d8060008114610151576040519150601f19603f3d011682016040523d82523d6000602084013e610156565b606091505b505090508091505092915050565b600081359050610173816102ee565b92915050565b60008135905061018881610305565b92915050565b600080604083850312156101a5576101a46102e6565b5b60006101b385828601610179565b92505060206101c485828601610164565b9150509250929050565b6101d781610281565b82525050565b60006101ea600083610230565b91506101f5826102eb565b600082019050919050565b600061020b826101dd565b9150819050919050565b600060208201905061022a60008301846101ce565b92915050565b600081905092915050565b6000610246826102ad565b9150610251836102ad565b925082821015610264576102636102b7565b5b828203905092915050565b600061027a8261028d565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b50565b6102f78161026f565b811461030257600080fd5b50565b61030e816102ad565b811461031957600080fd5b5056fea2646970667358221220e4242692848e67a9097974109a86d63b3715d0f54317e6aa4a2f01ab352bc09d64736f6c63430008070033",
							"opcodes": "PUSH2 0x352 PUSH2 0x53 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH2 0x46 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x35 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC0BA8F42 EQ PUSH2 0x3A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x61 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5C SWAP2 SWAP1 PUSH2 0x18E JUMP JUMPDEST PUSH2 0x77 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x215 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP4 GT PUSH2 0x86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH20 0xC8E8ADD5C59DF1B0B2F2386A4C4119AA1021E2FF PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0x1 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xE1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 DUP6 PUSH2 0x108 SWAP2 SWAP1 PUSH2 0x23B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x114 SWAP1 PUSH2 0x200 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x151 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x156 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x173 DUP2 PUSH2 0x2EE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x188 DUP2 PUSH2 0x305 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A5 JUMPI PUSH2 0x1A4 PUSH2 0x2E6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B3 DUP6 DUP3 DUP7 ADD PUSH2 0x179 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1C4 DUP6 DUP3 DUP7 ADD PUSH2 0x164 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D7 DUP2 PUSH2 0x281 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EA PUSH1 0x0 DUP4 PUSH2 0x230 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F5 DUP3 PUSH2 0x2EB JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20B DUP3 PUSH2 0x1DD JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x22A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1CE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x246 DUP3 PUSH2 0x2AD JUMP JUMPDEST SWAP2 POP PUSH2 0x251 DUP4 PUSH2 0x2AD JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x264 JUMPI PUSH2 0x263 PUSH2 0x2B7 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27A DUP3 PUSH2 0x28D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2F7 DUP2 PUSH2 0x26F JUMP JUMPDEST DUP2 EQ PUSH2 0x302 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x30E DUP2 PUSH2 0x2AD JUMP JUMPDEST DUP2 EQ PUSH2 0x319 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE4 0x24 0x26 SWAP3 DUP5 DUP15 PUSH8 0xA9097974109A86D6 EXTCODESIZE CALLDATACOPY ISZERO 0xD0 CREATE2 NUMBER OR 0xE6 0xAA 0x4A 0x2F ADD 0xAB CALLDATALOAD 0x2B 0xC0 SWAP14 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "145:369:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@customSend_698": {
									"entryPoint": 119,
									"id": 698,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 356,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 377,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_address": {
									"entryPoint": 398,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_bool_to_t_bool_fromStack_library": {
									"entryPoint": 462,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 477,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 512,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_library_reversed": {
									"entryPoint": 533,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 560,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 571,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 623,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 641,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 653,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 685,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 695,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 742,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470": {
									"entryPoint": 747,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 750,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 773,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3570:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:3"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:3",
														"type": ""
													}
												],
												"src": "7:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "204:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "214:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "236:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "223:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "214:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "279:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "252:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "252:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "252:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "182:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "190:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "198:5:3",
														"type": ""
													}
												],
												"src": "152:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "380:391:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "426:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "428:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "428:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "428:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "401:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "410:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "397:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "397:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "422:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "393:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "393:32:3"
															},
															"nodeType": "YulIf",
															"src": "390:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "519:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "534:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "548:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "538:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "563:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "598:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "609:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "594:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "594:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "618:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "573:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "573:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "563:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "646:118:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "661:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "675:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "665:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "691:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "726:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "737:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "722:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "722:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "746:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "701:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "701:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "691:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "342:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "353:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "365:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "373:6:3",
														"type": ""
													}
												],
												"src": "297:474:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "844:50:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "861:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "881:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "866:14:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "866:21:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "854:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "854:34:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "854:34:3"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack_library",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "832:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "839:3:3",
														"type": ""
													}
												],
												"src": "777:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1063:235:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1073:90:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1156:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1161:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1080:75:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1080:83:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1073:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1261:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"nodeType": "YulIdentifier",
																	"src": "1172:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1172:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1172:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1274:18:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1285:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1290:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1281:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1281:11:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1274:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1051:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1059:3:3",
														"type": ""
													}
												],
												"src": "900:398:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1492:191:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1503:154:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1653:3:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1510:141:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1510:147:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1503:3:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1667:10:3",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "1674:3:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1667:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1479:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1488:3:3",
														"type": ""
													}
												],
												"src": "1304:379:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1789:126:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1799:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1811:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1822:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1807:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1807:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1799:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1881:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1894:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1905:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1890:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1890:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack_library",
																	"nodeType": "YulIdentifier",
																	"src": "1835:45:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1835:73:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1835:73:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_library_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1761:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1773:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1784:4:3",
														"type": ""
													}
												],
												"src": "1689:226:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1961:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1971:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1987:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1981:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1981:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1971:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1954:6:3",
														"type": ""
													}
												],
												"src": "1921:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2115:34:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2125:18:3",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "2140:3:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "2125:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2087:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2092:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "2103:11:3",
														"type": ""
													}
												],
												"src": "2002:147:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2200:146:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2210:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2233:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2215:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2215:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "2210:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2244:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2267:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2249:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2249:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "2244:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2291:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2293:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2293:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2293:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2285:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2288:1:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2282:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2282:8:3"
															},
															"nodeType": "YulIf",
															"src": "2279:34:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2323:17:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2335:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2338:1:3"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "2331:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2331:9:3"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "2323:4:3"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2186:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2189:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "2195:4:3",
														"type": ""
													}
												],
												"src": "2155:191:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2397:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2407:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2436:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2418:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2418:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2407:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2379:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2389:7:3",
														"type": ""
													}
												],
												"src": "2352:96:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2496:48:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2506:32:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2531:5:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2524:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2524:13:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2517:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2517:21:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2506:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2478:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2488:7:3",
														"type": ""
													}
												],
												"src": "2454:90:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2595:81:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2605:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2620:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2627:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2616:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2616:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2605:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2577:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2587:7:3",
														"type": ""
													}
												],
												"src": "2550:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2727:32:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2737:16:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2748:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2737:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2709:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2719:7:3",
														"type": ""
													}
												],
												"src": "2682:77:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2793:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2810:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2813:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2803:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2803:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2803:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2907:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2910:4:3",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2900:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2900:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2900:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2931:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2934:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2924:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2924:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2924:15:3"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "2765:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3040:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3057:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3060:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3050:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3050:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3050:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "2951:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3163:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3180:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3183:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3173:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3173:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3173:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "3074:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3303:8:3",
													"statements": []
												},
												"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3295:6:3",
														"type": ""
													}
												],
												"src": "3197:114:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3360:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3417:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3426:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3429:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3419:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3419:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3419:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3383:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3408:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "3390:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3390:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3380:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3380:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3373:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3373:43:3"
															},
															"nodeType": "YulIf",
															"src": "3370:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3353:5:3",
														"type": ""
													}
												],
												"src": "3317:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3488:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3545:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3554:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3557:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3547:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3547:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3547:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3511:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3536:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3518:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3518:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3508:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3508:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3501:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3501:43:3"
															},
															"nodeType": "YulIf",
															"src": "3498:63:3"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3481:5:3",
														"type": ""
													}
												],
												"src": "3445:122:3"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack_library(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_library_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack_library(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c8063c0ba8f421461003a575b600080fd5b81801561004657600080fd5b50610061600480360381019061005c919061018e565b610077565b60405161006e9190610215565b60405180910390f35b60006001831161008657600080fd5b73c8e8add5c59df1b0b2f2386a4c4119aa1021e2ff73ffffffffffffffffffffffffffffffffffffffff166108fc60019081150290604051600060405180830381858888f193505050501580156100e1573d6000803e3d6000fd5b5060008273ffffffffffffffffffffffffffffffffffffffff16600185610108919061023b565b60405161011490610200565b60006040518083038185875af1925050503d8060008114610151576040519150601f19603f3d011682016040523d82523d6000602084013e610156565b606091505b505090508091505092915050565b600081359050610173816102ee565b92915050565b60008135905061018881610305565b92915050565b600080604083850312156101a5576101a46102e6565b5b60006101b385828601610179565b92505060206101c485828601610164565b9150509250929050565b6101d781610281565b82525050565b60006101ea600083610230565b91506101f5826102eb565b600082019050919050565b600061020b826101dd565b9150819050919050565b600060208201905061022a60008301846101ce565b92915050565b600081905092915050565b6000610246826102ad565b9150610251836102ad565b925082821015610264576102636102b7565b5b828203905092915050565b600061027a8261028d565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b50565b6102f78161026f565b811461030257600080fd5b50565b61030e816102ad565b811461031957600080fd5b5056fea2646970667358221220e4242692848e67a9097974109a86d63b3715d0f54317e6aa4a2f01ab352bc09d64736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x35 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC0BA8F42 EQ PUSH2 0x3A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x61 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5C SWAP2 SWAP1 PUSH2 0x18E JUMP JUMPDEST PUSH2 0x77 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x215 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP4 GT PUSH2 0x86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH20 0xC8E8ADD5C59DF1B0B2F2386A4C4119AA1021E2FF PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0x1 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xE1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 DUP6 PUSH2 0x108 SWAP2 SWAP1 PUSH2 0x23B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x114 SWAP1 PUSH2 0x200 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x151 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x156 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x173 DUP2 PUSH2 0x2EE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x188 DUP2 PUSH2 0x305 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A5 JUMPI PUSH2 0x1A4 PUSH2 0x2E6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B3 DUP6 DUP3 DUP7 ADD PUSH2 0x179 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1C4 DUP6 DUP3 DUP7 ADD PUSH2 0x164 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D7 DUP2 PUSH2 0x281 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EA PUSH1 0x0 DUP4 PUSH2 0x230 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F5 DUP3 PUSH2 0x2EB JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20B DUP3 PUSH2 0x1DD JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x22A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1CE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x246 DUP3 PUSH2 0x2AD JUMP JUMPDEST SWAP2 POP PUSH2 0x251 DUP4 PUSH2 0x2AD JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x264 JUMPI PUSH2 0x263 PUSH2 0x2B7 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27A DUP3 PUSH2 0x28D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2F7 DUP2 PUSH2 0x26F JUMP JUMPDEST DUP2 EQ PUSH2 0x302 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x30E DUP2 PUSH2 0x2AD JUMP JUMPDEST DUP2 EQ PUSH2 0x319 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE4 0x24 0x26 SWAP3 DUP5 DUP15 PUSH8 0xA9097974109A86D6 EXTCODESIZE CALLDATACOPY ISZERO 0xD0 CREATE2 NUMBER OR 0xE6 0xAA 0x4A 0x2F ADD 0xAB CALLDATALOAD 0x2B 0xC0 SWAP14 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "145:369:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;246:265;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;315:4;348:1;340:5;:9;332:18;;;;;;195:42;371:23;;:26;395:1;371:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;419:12;444:8;436:22;;472:1;466:5;:7;;;;:::i;:::-;436:42;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;418:60;;;496:7;489:14;;;246:265;;;;:::o;7:139:3:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:::-;198:5;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;152:139;;;;:::o;297:474::-;365:6;373;422:2;410:9;401:7;397:23;393:32;390:119;;;428:79;;:::i;:::-;390:119;548:1;573:53;618:7;609:6;598:9;594:22;573:53;:::i;:::-;563:63;;519:117;675:2;701:53;746:7;737:6;726:9;722:22;701:53;:::i;:::-;691:63;;646:118;297:474;;;;;:::o;777:117::-;866:21;881:5;866:21;:::i;:::-;861:3;854:34;777:117;;:::o;900:398::-;1059:3;1080:83;1161:1;1156:3;1080:83;:::i;:::-;1073:90;;1172:93;1261:3;1172:93;:::i;:::-;1290:1;1285:3;1281:11;1274:18;;900:398;;;:::o;1304:379::-;1488:3;1510:147;1653:3;1510:147;:::i;:::-;1503:154;;1674:3;1667:10;;1304:379;;;:::o;1689:226::-;1784:4;1822:2;1811:9;1807:18;1799:26;;1835:73;1905:1;1894:9;1890:17;1881:6;1835:73;:::i;:::-;1689:226;;;;:::o;2002:147::-;2103:11;2140:3;2125:18;;2002:147;;;;:::o;2155:191::-;2195:4;2215:20;2233:1;2215:20;:::i;:::-;2210:25;;2249:20;2267:1;2249:20;:::i;:::-;2244:25;;2288:1;2285;2282:8;2279:34;;;2293:18;;:::i;:::-;2279:34;2338:1;2335;2331:9;2323:17;;2155:191;;;;:::o;2352:96::-;2389:7;2418:24;2436:5;2418:24;:::i;:::-;2407:35;;2352:96;;;:::o;2454:90::-;2488:7;2531:5;2524:13;2517:21;2506:32;;2454:90;;;:::o;2550:126::-;2587:7;2627:42;2620:5;2616:54;2605:65;;2550:126;;;:::o;2682:77::-;2719:7;2748:5;2737:16;;2682:77;;;:::o;2765:180::-;2813:77;2810:1;2803:88;2910:4;2907:1;2900:15;2934:4;2931:1;2924:15;3074:117;3183:1;3180;3173:12;3197:114;;:::o;3317:122::-;3390:24;3408:5;3390:24;:::i;:::-;3383:5;3380:35;3370:63;;3429:1;3426;3419:12;3370:63;3317:122;:::o;3445:::-;3518:24;3536:5;3518:24;:::i;:::-;3511:5;3508:35;3498:63;;3557:1;3554;3547:12;3498:63;3445:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "170000",
								"executionCost": "239",
								"totalCost": "170239"
							},
							"external": {
								"customSend(uint256,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 145,
									"end": 514,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 145,
									"end": 514,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 145,
									"end": 514,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 145,
									"end": 514,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 145,
									"end": 514,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 145,
									"end": 514,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 145,
									"end": 514,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 145,
									"end": 514,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 145,
									"end": 514,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 145,
									"end": 514,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 145,
									"end": 514,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 145,
									"end": 514,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 145,
									"end": 514,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 145,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 145,
									"end": 514,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 145,
									"end": 514,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 145,
									"end": 514,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 145,
									"end": 514,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 145,
									"end": 514,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 145,
									"end": 514,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 145,
									"end": 514,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 145,
									"end": 514,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 145,
									"end": 514,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 145,
									"end": 514,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 145,
									"end": 514,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 145,
									"end": 514,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 145,
									"end": 514,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 145,
									"end": 514,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 145,
									"end": 514,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 145,
									"end": 514,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 145,
									"end": 514,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 145,
									"end": 514,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 145,
									"end": 514,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 145,
									"end": 514,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 145,
									"end": 514,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e4242692848e67a9097974109a86d63b3715d0f54317e6aa4a2f01ab352bc09d64736f6c63430008070033",
									".code": [
										{
											"begin": 145,
											"end": 514,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 145,
											"end": 514,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 145,
											"end": 514,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 145,
											"end": 514,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 145,
											"end": 514,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 145,
											"end": 514,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 145,
											"end": 514,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 145,
											"end": 514,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 145,
											"end": 514,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 145,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 145,
											"end": 514,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 145,
											"end": 514,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 145,
											"end": 514,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 145,
											"end": 514,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 145,
											"end": 514,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 145,
											"end": 514,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 145,
											"end": 514,
											"name": "PUSH",
											"source": 2,
											"value": "C0BA8F42"
										},
										{
											"begin": 145,
											"end": 514,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 145,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 145,
											"end": 514,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 145,
											"end": 514,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 145,
											"end": 514,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 145,
											"end": 514,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 145,
											"end": 514,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 145,
											"end": 514,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 246,
											"end": 511,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 246,
											"end": 511,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 246,
											"end": 511,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 246,
											"end": 511,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 246,
											"end": 511,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 246,
											"end": 511,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 246,
											"end": 511,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 246,
											"end": 511,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 246,
											"end": 511,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 246,
											"end": 511,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 246,
											"end": 511,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 246,
											"end": 511,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 246,
											"end": 511,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 246,
											"end": 511,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 246,
											"end": 511,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 246,
											"end": 511,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 246,
											"end": 511,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 246,
											"end": 511,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 246,
											"end": 511,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 246,
											"end": 511,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 246,
											"end": 511,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 246,
											"end": 511,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 246,
											"end": 511,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 246,
											"end": 511,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 246,
											"end": 511,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 246,
											"end": 511,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 246,
											"end": 511,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 246,
											"end": 511,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 246,
											"end": 511,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 246,
											"end": 511,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 246,
											"end": 511,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 246,
											"end": 511,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 246,
											"end": 511,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 246,
											"end": 511,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 246,
											"end": 511,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 246,
											"end": 511,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 246,
											"end": 511,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 246,
											"end": 511,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 246,
											"end": 511,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 246,
											"end": 511,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 246,
											"end": 511,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 246,
											"end": 511,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 246,
											"end": 511,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 246,
											"end": 511,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 246,
											"end": 511,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 246,
											"end": 511,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 246,
											"end": 511,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 246,
											"end": 511,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 246,
											"end": 511,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 246,
											"end": 511,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 315,
											"end": 319,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 349,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 340,
											"end": 345,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 340,
											"end": 349,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 332,
											"end": 350,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 332,
											"end": 350,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 332,
											"end": 350,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 332,
											"end": 350,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 332,
											"end": 350,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 332,
											"end": 350,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 332,
											"end": 350,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 195,
											"end": 237,
											"name": "PUSH",
											"source": 2,
											"value": "C8E8ADD5C59DF1B0B2F2386A4C4119AA1021E2FF"
										},
										{
											"begin": 371,
											"end": 394,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 371,
											"end": 394,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 371,
											"end": 397,
											"name": "PUSH",
											"source": 2,
											"value": "8FC"
										},
										{
											"begin": 395,
											"end": 396,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 371,
											"end": 397,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 371,
											"end": 397,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 371,
											"end": 397,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 371,
											"end": 397,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 371,
											"end": 397,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 371,
											"end": 397,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 371,
											"end": 397,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 371,
											"end": 397,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 371,
											"end": 397,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 371,
											"end": 397,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 371,
											"end": 397,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 371,
											"end": 397,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 371,
											"end": 397,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 371,
											"end": 397,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 371,
											"end": 397,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 371,
											"end": 397,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 371,
											"end": 397,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 371,
											"end": 397,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 371,
											"end": 397,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 371,
											"end": 397,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 371,
											"end": 397,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 371,
											"end": 397,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 371,
											"end": 397,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 371,
											"end": 397,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 371,
											"end": 397,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 371,
											"end": 397,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 371,
											"end": 397,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 371,
											"end": 397,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 371,
											"end": 397,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 371,
											"end": 397,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 371,
											"end": 397,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 371,
											"end": 397,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 371,
											"end": 397,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 371,
											"end": 397,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 371,
											"end": 397,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 371,
											"end": 397,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 371,
											"end": 397,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 371,
											"end": 397,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 419,
											"end": 431,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 444,
											"end": 452,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 436,
											"end": 458,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 436,
											"end": 458,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 472,
											"end": 473,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 466,
											"end": 471,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 466,
											"end": 473,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 466,
											"end": 473,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 466,
											"end": 473,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 466,
											"end": 473,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 466,
											"end": 473,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 466,
											"end": 473,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 466,
											"end": 473,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 436,
											"end": 478,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 436,
											"end": 478,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 436,
											"end": 478,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 436,
											"end": 478,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 436,
											"end": 478,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 436,
											"end": 478,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 436,
											"end": 478,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 436,
											"end": 478,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 436,
											"end": 478,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 436,
											"end": 478,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 436,
											"end": 478,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 436,
											"end": 478,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 436,
											"end": 478,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 436,
											"end": 478,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 436,
											"end": 478,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 436,
											"end": 478,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 436,
											"end": 478,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 436,
											"end": 478,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 436,
											"end": 478,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 436,
											"end": 478,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 436,
											"end": 478,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 436,
											"end": 478,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 436,
											"end": 478,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 436,
											"end": 478,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 436,
											"end": 478,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 436,
											"end": 478,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 436,
											"end": 478,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 436,
											"end": 478,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 436,
											"end": 478,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 436,
											"end": 478,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 436,
											"end": 478,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 436,
											"end": 478,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 436,
											"end": 478,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 436,
											"end": 478,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 436,
											"end": 478,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 436,
											"end": 478,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 436,
											"end": 478,
											"name": "PUSH",
											"source": 2,
											"value": "3F"
										},
										{
											"begin": 436,
											"end": 478,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 436,
											"end": 478,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 436,
											"end": 478,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 436,
											"end": 478,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 436,
											"end": 478,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 436,
											"end": 478,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 436,
											"end": 478,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 436,
											"end": 478,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 436,
											"end": 478,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 436,
											"end": 478,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 436,
											"end": 478,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 436,
											"end": 478,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 436,
											"end": 478,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 436,
											"end": 478,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 436,
											"end": 478,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 436,
											"end": 478,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 436,
											"end": 478,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 436,
											"end": 478,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 436,
											"end": 478,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 436,
											"end": 478,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 436,
											"end": 478,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 436,
											"end": 478,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 436,
											"end": 478,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 436,
											"end": 478,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 436,
											"end": 478,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 436,
											"end": 478,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 418,
											"end": 478,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 418,
											"end": 478,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 418,
											"end": 478,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 496,
											"end": 503,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 489,
											"end": 503,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 489,
											"end": 503,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 489,
											"end": 503,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 246,
											"end": 511,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 246,
											"end": 511,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 246,
											"end": 511,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 246,
											"end": 511,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 246,
											"end": 511,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 198,
											"end": 203,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 236,
											"end": 242,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 223,
											"end": 243,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 214,
											"end": 243,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 214,
											"end": 243,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 279,
											"end": 284,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 152,
											"end": 291,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 152,
											"end": 291,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 152,
											"end": 291,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 152,
											"end": 291,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 152,
											"end": 291,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 297,
											"end": 771,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 297,
											"end": 771,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 365,
											"end": 371,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 373,
											"end": 379,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 422,
											"end": 424,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 410,
											"end": 419,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 401,
											"end": 408,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 397,
											"end": 420,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 393,
											"end": 425,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 390,
											"end": 509,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 390,
											"end": 509,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 390,
											"end": 509,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 428,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 428,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 428,
											"end": 507,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 428,
											"end": 507,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 428,
											"end": 507,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 390,
											"end": 509,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 390,
											"end": 509,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 548,
											"end": 549,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 573,
											"end": 626,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 618,
											"end": 625,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 609,
											"end": 615,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 598,
											"end": 607,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 594,
											"end": 616,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 573,
											"end": 626,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 573,
											"end": 626,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 573,
											"end": 626,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 573,
											"end": 626,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 563,
											"end": 626,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 563,
											"end": 626,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 519,
											"end": 636,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 675,
											"end": 677,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 701,
											"end": 754,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 746,
											"end": 753,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 737,
											"end": 743,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 726,
											"end": 735,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 722,
											"end": 744,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 701,
											"end": 754,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 701,
											"end": 754,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 701,
											"end": 754,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 701,
											"end": 754,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 691,
											"end": 754,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 691,
											"end": 754,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 646,
											"end": 764,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 297,
											"end": 771,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 297,
											"end": 771,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 297,
											"end": 771,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 297,
											"end": 771,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 297,
											"end": 771,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 297,
											"end": 771,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 777,
											"end": 894,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 777,
											"end": 894,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 866,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 881,
											"end": 886,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 866,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 866,
											"end": 887,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 866,
											"end": 887,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 866,
											"end": 887,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 861,
											"end": 864,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 854,
											"end": 888,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 777,
											"end": 894,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 777,
											"end": 894,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 777,
											"end": 894,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 900,
											"end": 1298,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 900,
											"end": 1298,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1059,
											"end": 1062,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1080,
											"end": 1163,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 1161,
											"end": 1162,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1156,
											"end": 1159,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1080,
											"end": 1163,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 1080,
											"end": 1163,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1080,
											"end": 1163,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 1080,
											"end": 1163,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1073,
											"end": 1163,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1073,
											"end": 1163,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1172,
											"end": 1265,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 1261,
											"end": 1264,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1172,
											"end": 1265,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 1172,
											"end": 1265,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1172,
											"end": 1265,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 1172,
											"end": 1265,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1290,
											"end": 1291,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1285,
											"end": 1288,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1281,
											"end": 1292,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1274,
											"end": 1292,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1274,
											"end": 1292,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 900,
											"end": 1298,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 900,
											"end": 1298,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 900,
											"end": 1298,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 900,
											"end": 1298,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1304,
											"end": 1683,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 1304,
											"end": 1683,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1488,
											"end": 1491,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1510,
											"end": 1657,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 1653,
											"end": 1656,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1510,
											"end": 1657,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1510,
											"end": 1657,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1510,
											"end": 1657,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 1510,
											"end": 1657,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1503,
											"end": 1657,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1503,
											"end": 1657,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1674,
											"end": 1677,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1667,
											"end": 1677,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1667,
											"end": 1677,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1304,
											"end": 1683,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1304,
											"end": 1683,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1304,
											"end": 1683,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1304,
											"end": 1683,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1689,
											"end": 1915,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 1689,
											"end": 1915,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1784,
											"end": 1788,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1822,
											"end": 1824,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1811,
											"end": 1820,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1807,
											"end": 1825,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1799,
											"end": 1825,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1799,
											"end": 1825,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1835,
											"end": 1908,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 1905,
											"end": 1906,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1894,
											"end": 1903,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1890,
											"end": 1907,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1881,
											"end": 1887,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1835,
											"end": 1908,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 1835,
											"end": 1908,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1835,
											"end": 1908,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 1835,
											"end": 1908,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1689,
											"end": 1915,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1689,
											"end": 1915,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1689,
											"end": 1915,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1689,
											"end": 1915,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1689,
											"end": 1915,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2002,
											"end": 2149,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 2002,
											"end": 2149,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2103,
											"end": 2114,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2140,
											"end": 2143,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2125,
											"end": 2143,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2125,
											"end": 2143,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2002,
											"end": 2149,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2002,
											"end": 2149,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2002,
											"end": 2149,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2002,
											"end": 2149,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2002,
											"end": 2149,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2155,
											"end": 2346,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 2155,
											"end": 2346,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2195,
											"end": 2199,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2215,
											"end": 2235,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 2233,
											"end": 2234,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2215,
											"end": 2235,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 2215,
											"end": 2235,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2215,
											"end": 2235,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 2215,
											"end": 2235,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2210,
											"end": 2235,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2210,
											"end": 2235,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2249,
											"end": 2269,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 2267,
											"end": 2268,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2249,
											"end": 2269,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 2249,
											"end": 2269,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2249,
											"end": 2269,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 2249,
											"end": 2269,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2244,
											"end": 2269,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2244,
											"end": 2269,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2288,
											"end": 2289,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2285,
											"end": 2286,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2282,
											"end": 2290,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2279,
											"end": 2313,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2279,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 2279,
											"end": 2313,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2311,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 2293,
											"end": 2311,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 2293,
											"end": 2311,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2293,
											"end": 2311,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 2293,
											"end": 2311,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2279,
											"end": 2313,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 2279,
											"end": 2313,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2338,
											"end": 2339,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2335,
											"end": 2336,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2331,
											"end": 2340,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2323,
											"end": 2340,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2323,
											"end": 2340,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2155,
											"end": 2346,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2155,
											"end": 2346,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2155,
											"end": 2346,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2155,
											"end": 2346,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2155,
											"end": 2346,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2352,
											"end": 2448,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2352,
											"end": 2448,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2389,
											"end": 2396,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2418,
											"end": 2442,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 2436,
											"end": 2441,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2418,
											"end": 2442,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 2418,
											"end": 2442,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2418,
											"end": 2442,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 2418,
											"end": 2442,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2407,
											"end": 2442,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2407,
											"end": 2442,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2352,
											"end": 2448,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2352,
											"end": 2448,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2352,
											"end": 2448,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2352,
											"end": 2448,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2454,
											"end": 2544,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 2454,
											"end": 2544,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2488,
											"end": 2495,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2531,
											"end": 2536,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2524,
											"end": 2537,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2517,
											"end": 2538,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2506,
											"end": 2538,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2506,
											"end": 2538,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2454,
											"end": 2544,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2454,
											"end": 2544,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2454,
											"end": 2544,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2454,
											"end": 2544,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2550,
											"end": 2676,
											"name": "tag",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 2550,
											"end": 2676,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2587,
											"end": 2594,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2669,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2620,
											"end": 2625,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2616,
											"end": 2670,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2605,
											"end": 2670,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2605,
											"end": 2670,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2550,
											"end": 2676,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2550,
											"end": 2676,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2550,
											"end": 2676,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2550,
											"end": 2676,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2682,
											"end": 2759,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 2682,
											"end": 2759,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2719,
											"end": 2726,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2748,
											"end": 2753,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2737,
											"end": 2753,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2737,
											"end": 2753,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2682,
											"end": 2759,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2682,
											"end": 2759,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2682,
											"end": 2759,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2682,
											"end": 2759,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2765,
											"end": 2945,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 2765,
											"end": 2945,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2813,
											"end": 2890,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2810,
											"end": 2811,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2803,
											"end": 2891,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2910,
											"end": 2914,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 2907,
											"end": 2908,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2900,
											"end": 2915,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2934,
											"end": 2938,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2931,
											"end": 2932,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2924,
											"end": 2939,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3074,
											"end": 3191,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 3074,
											"end": 3191,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3183,
											"end": 3184,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3180,
											"end": 3181,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3173,
											"end": 3185,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3197,
											"end": 3311,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 3197,
											"end": 3311,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3197,
											"end": 3311,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3197,
											"end": 3311,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3317,
											"end": 3439,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 3317,
											"end": 3439,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3414,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 3408,
											"end": 3413,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3414,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3390,
											"end": 3414,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3390,
											"end": 3414,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 3390,
											"end": 3414,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3383,
											"end": 3388,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3380,
											"end": 3415,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 3370,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 3370,
											"end": 3433,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3429,
											"end": 3430,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3426,
											"end": 3427,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3419,
											"end": 3431,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3370,
											"end": 3433,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 3370,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3317,
											"end": 3439,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3317,
											"end": 3439,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3445,
											"end": 3567,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 3445,
											"end": 3567,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3518,
											"end": 3542,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 3536,
											"end": 3541,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3518,
											"end": 3542,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 3518,
											"end": 3542,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3518,
											"end": 3542,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 3518,
											"end": 3542,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3511,
											"end": 3516,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3508,
											"end": 3543,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 3498,
											"end": 3561,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 3498,
											"end": 3561,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3557,
											"end": 3558,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3554,
											"end": 3555,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3547,
											"end": 3559,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3498,
											"end": 3561,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 3498,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3445,
											"end": 3567,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3445,
											"end": 3567,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"customSend(uint256,address)": "c0ba8f42"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Library.sol\":\"customLib\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Library.sol\":{\"keccak256\":\"0xbd7258166b8feaed4bd073ed4a37d21f247a27f8e7cff50aa03af47cae269f64\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b20503300cb31cceaf3b150c7d31fd7e04ab29a9338cb32528ecae67aabb47d7\",\"dweb:/ipfs/QmeFWYWvCJyQC7p9gufq25ojx6rjiWMciM5GgNZtBt7ycu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> B226328_part2.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "B226328_part2.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "3628",
				"formattedMessage": "Warning: This contract has a payable fallback function, but no receive ether function. Consider adding a receive ether function.\n --> B226328_part2.sol:4:1:\n  |\n4 | contract Part2_token\n  | ^ (Relevant source part starts here and spans across multiple lines).\nNote: The payable fallback function is defined here.\n   --> B226328_part2.sol:115:5:\n    |\n115 |     fallback() external payable {\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "This contract has a payable fallback function, but no receive ether function. Consider adding a receive ether function.",
				"secondarySourceLocations": [
					{
						"end": 3903,
						"file": "B226328_part2.sol",
						"message": "The payable fallback function is defined here.",
						"start": 3820
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 3912,
					"file": "B226328_part2.sol",
					"start": 115
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2462",
				"formattedMessage": "Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n  --> B226328_part2.sol:19:5:\n   |\n19 |     constructor() public {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1102,
					"file": "B226328_part2.sol",
					"start": 594
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							311
						]
					},
					"id": 312,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:0",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 311,
							"linearizedBaseContracts": [
								311
							],
							"name": "SafeMath",
							"nameLocation": "490:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 33,
										"nodeType": "Block",
										"src": "717:140:0",
										"statements": [
											{
												"id": 32,
												"nodeType": "UncheckedBlock",
												"src": "727:124:0",
												"statements": [
													{
														"assignments": [
															15
														],
														"declarations": [
															{
																"constant": false,
																"id": 15,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 32,
																"src": "751:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 14,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 19,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 18,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 16,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "763:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 17,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 7,
																"src": "767:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 22,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 20,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 15,
																"src": "786:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 21,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "790:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 27,
														"nodeType": "IfStatement",
														"src": "782:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 23,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 24,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 25,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 13,
															"id": 26,
															"nodeType": "Return",
															"src": "793:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 28,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 29,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "838:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 30,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 13,
														"id": 31,
														"nodeType": "Return",
														"src": "824:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:0",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 34,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "657:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "668:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "702:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 9,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "708:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 11,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:0"
									},
									"scope": 311,
									"src": "641:216:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "1078:113:0",
										"statements": [
											{
												"id": 60,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 48,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 46,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 39,
																"src": "1116:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 47,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 37,
																"src": "1120:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 53,
														"nodeType": "IfStatement",
														"src": "1112:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 49,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 50,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 51,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 45,
															"id": 52,
															"nodeType": "Return",
															"src": "1123:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 54,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 57,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 55,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 37,
																		"src": "1168:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 56,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 39,
																		"src": "1172:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 58,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 45,
														"id": 59,
														"nodeType": "Return",
														"src": "1154:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:0",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1018:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 36,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1029:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:0"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1063:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1069:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:0"
									},
									"scope": 311,
									"src": "1002:189:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 103,
										"nodeType": "Block",
										"src": "1415:417:0",
										"statements": [
											{
												"id": 102,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 76,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 74,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1683:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 75,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 81,
														"nodeType": "IfStatement",
														"src": "1679:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 77,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 79,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 73,
															"id": 80,
															"nodeType": "Return",
															"src": "1691:16:0"
														}
													},
													{
														"assignments": [
															83
														],
														"declarations": [
															{
																"constant": false,
																"id": 83,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 102,
																"src": "1721:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 82,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 87,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 86,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 84,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1733:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 85,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1737:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 92,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 90,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 88,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 83,
																	"src": "1756:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 89,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 65,
																	"src": "1760:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 91,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1765:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 97,
														"nodeType": "IfStatement",
														"src": "1752:33:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 93,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 94,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 95,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 73,
															"id": 96,
															"nodeType": "Return",
															"src": "1768:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 98,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 99,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 83,
																	"src": "1813:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 100,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 73,
														"id": 101,
														"nodeType": "Return",
														"src": "1799:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:0",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1355:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1366:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 66,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:0"
									},
									"returnParameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1400:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 69,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1406:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 71,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:0"
									},
									"scope": 311,
									"src": "1339:493:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 131,
										"nodeType": "Block",
										"src": "2057:114:0",
										"statements": [
											{
												"id": 130,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 116,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 109,
																"src": "2095:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 123,
														"nodeType": "IfStatement",
														"src": "2091:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 119,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 120,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 121,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 115,
															"id": 122,
															"nodeType": "Return",
															"src": "2103:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 125,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 107,
																		"src": "2148:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 126,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 109,
																		"src": "2152:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 128,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 115,
														"id": 129,
														"nodeType": "Return",
														"src": "2134:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:0",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 132,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "1997:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2008:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:0"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2042:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 111,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2048:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:0"
									},
									"scope": 311,
									"src": "1981:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 159,
										"nodeType": "Block",
										"src": "2406:114:0",
										"statements": [
											{
												"id": 158,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 144,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 137,
																"src": "2444:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 145,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 151,
														"nodeType": "IfStatement",
														"src": "2440:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 147,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 148,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 149,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 143,
															"id": 150,
															"nodeType": "Return",
															"src": "2452:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 152,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 153,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 135,
																		"src": "2497:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 154,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 137,
																		"src": "2501:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 156,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 143,
														"id": 157,
														"nodeType": "Return",
														"src": "2483:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 133,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2346:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2357:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2391:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 139,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2397:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:0"
									},
									"scope": 311,
									"src": "2330:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 174,
										"nodeType": "Block",
										"src": "2822:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 170,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 163,
														"src": "2839:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 171,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 165,
														"src": "2843:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 169,
												"id": 173,
												"nodeType": "Return",
												"src": "2832:12:0"
											}
										]
									},
									"documentation": {
										"id": 161,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2768:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2779:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2813:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:0"
									},
									"scope": 311,
									"src": "2755:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "3189:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 185,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 178,
														"src": "3206:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 186,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 180,
														"src": "3210:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 184,
												"id": 188,
												"nodeType": "Return",
												"src": "3199:12:0"
											}
										]
									},
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3135:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3146:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:0"
									},
									"returnParameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3180:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:0"
									},
									"scope": 311,
									"src": "3122:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 204,
										"nodeType": "Block",
										"src": "3532:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 200,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3549:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 201,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "3553:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 199,
												"id": 203,
												"nodeType": "Return",
												"src": "3542:12:0"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 205,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3478:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3489:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:0"
									},
									"returnParameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3523:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:0"
									},
									"scope": 311,
									"src": "3465:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 219,
										"nodeType": "Block",
										"src": "3917:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 215,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "3934:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 216,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 210,
														"src": "3938:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 214,
												"id": 218,
												"nodeType": "Return",
												"src": "3927:12:0"
											}
										]
									},
									"documentation": {
										"id": 206,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 220,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3863:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3874:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:0"
									},
									"returnParameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3908:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:0"
									},
									"scope": 311,
									"src": "3850:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 234,
										"nodeType": "Block",
										"src": "4466:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 230,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 223,
														"src": "4483:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 231,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 225,
														"src": "4487:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 229,
												"id": 233,
												"nodeType": "Return",
												"src": "4476:12:0"
											}
										]
									},
									"documentation": {
										"id": 221,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 235,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4412:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4423:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:0"
									},
									"returnParameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4457:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:0"
									},
									"scope": 311,
									"src": "4399:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 259,
										"nodeType": "Block",
										"src": "5084:106:0",
										"statements": [
											{
												"id": 258,
												"nodeType": "UncheckedBlock",
												"src": "5094:90:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 250,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 248,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 240,
																		"src": "5126:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 249,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 238,
																		"src": "5131:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5126:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 251,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 242,
																	"src": "5134:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 247,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5118:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5118:29:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 253,
														"nodeType": "ExpressionStatement",
														"src": "5118:29:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 254,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 238,
																"src": "5168:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 255,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 240,
																"src": "5172:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5168:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 246,
														"id": 257,
														"nodeType": "Return",
														"src": "5161:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 236,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4989:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "4981:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4981:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5008:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5000:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5033:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5019:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 241,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5019:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:80:0"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5075:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5074:9:0"
									},
									"scope": 311,
									"src": "4959:231:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 284,
										"nodeType": "Block",
										"src": "5799:105:0",
										"statements": [
											{
												"id": 283,
												"nodeType": "UncheckedBlock",
												"src": "5809:89:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 275,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 273,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 265,
																		"src": "5841:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 274,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5845:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5841:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 276,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 267,
																	"src": "5848:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 272,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5833:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5833:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 278,
														"nodeType": "ExpressionStatement",
														"src": "5833:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 279,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 263,
																"src": "5882:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 280,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 265,
																"src": "5886:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5882:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 271,
														"id": 282,
														"nodeType": "Return",
														"src": "5875:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 261,
										"nodeType": "StructuredDocumentation",
										"src": "5196:473:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 285,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5683:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5704:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5696:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5696:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5723:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5715:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5715:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5748:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5734:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 266,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5734:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5686:80:0"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5790:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5790:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5789:9:0"
									},
									"scope": 311,
									"src": "5674:230:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 309,
										"nodeType": "Block",
										"src": "6675:105:0",
										"statements": [
											{
												"id": 308,
												"nodeType": "UncheckedBlock",
												"src": "6685:89:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 300,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 298,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 290,
																		"src": "6717:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 299,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6721:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6717:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 301,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 292,
																	"src": "6724:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 297,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6709:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6709:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 303,
														"nodeType": "ExpressionStatement",
														"src": "6709:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 304,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 288,
																"src": "6758:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 305,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 290,
																"src": "6762:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6758:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 296,
														"id": 307,
														"nodeType": "Return",
														"src": "6751:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 286,
										"nodeType": "StructuredDocumentation",
										"src": "5910:635:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6559:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6580:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6572:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6572:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6599:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6591:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6591:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6624:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6610:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 291,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6610:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6562:80:0"
									},
									"returnParameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6666:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6666:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6665:9:0"
									},
									"scope": 311,
									"src": "6550:230:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 312,
							"src": "482:6300:0",
							"usedErrors": []
						}
					],
					"src": "107:6676:0"
				},
				"id": 0
			},
			"B226328_part2.sol": {
				"ast": {
					"absolutePath": "B226328_part2.sol",
					"exportedSymbols": {
						"Part2_token": [
							653
						],
						"SafeMath": [
							311
						],
						"customLib": [
							699
						]
					},
					"id": 654,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 313,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:31:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 314,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 654,
							"sourceUnit": 312,
							"src": "33:57:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Library.sol",
							"file": "Library.sol",
							"id": 315,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 654,
							"sourceUnit": 700,
							"src": "92:21:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 653,
							"linearizedBaseContracts": [
								653
							],
							"name": "Part2_token",
							"nameLocation": "124:11:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 318,
									"libraryName": {
										"id": 316,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 311,
										"src": "150:8:1"
									},
									"nodeType": "UsingForDirective",
									"src": "144:27:1",
									"typeName": {
										"id": 317,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "163:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 320,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "201:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 653,
									"src": "177:29:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 319,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "177:15:1",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 322,
									"mutability": "mutable",
									"name": "name",
									"nameLocation": "221:4:1",
									"nodeType": "VariableDeclaration",
									"scope": 653,
									"src": "213:12:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 321,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "213:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 324,
									"mutability": "mutable",
									"name": "symbol",
									"nameLocation": "240:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 653,
									"src": "232:14:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 323,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "232:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 326,
									"mutability": "mutable",
									"name": "price",
									"nameLocation": "262:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 653,
									"src": "253:14:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 325,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "253:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 328,
									"mutability": "mutable",
									"name": "totalsupply",
									"nameLocation": "283:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 653,
									"src": "274:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 327,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "274:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 332,
									"mutability": "mutable",
									"name": "balances",
									"nameLocation": "338:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 653,
									"src": "301:45:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 331,
										"keyType": {
											"id": 329,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "309:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "301:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 330,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "320:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 336,
									"mutability": "mutable",
									"name": "roles",
									"nameLocation": "386:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 653,
									"src": "353:38:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 335,
										"keyType": {
											"id": 333,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "361:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "353:24:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 334,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "372:4:1",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 344,
									"name": "Transfer",
									"nameLocation": "404:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "429:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "413:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "413:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "451:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "435:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "435:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 342,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "463:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "455:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "455:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "412:57:1"
									},
									"src": "398:72:1"
								},
								{
									"anonymous": false,
									"id": 350,
									"name": "Mint",
									"nameLocation": "482:4:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 346,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "503:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "487:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 345,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "487:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 348,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "515:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "507:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 347,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "507:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "486:35:1"
									},
									"src": "476:46:1"
								},
								{
									"anonymous": false,
									"id": 356,
									"name": "Sell",
									"nameLocation": "534:4:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "555:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "539:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 351,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "539:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 354,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "569:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "561:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 353,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "561:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:37:1"
									},
									"src": "528:48:1"
								},
								{
									"body": {
										"id": 400,
										"nodeType": "Block",
										"src": "615:487:1",
										"statements": [
											{
												"expression": {
													"id": 361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 359,
														"name": "name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "657:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "437573746f6d20546f6b656e",
														"id": 360,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "664:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_075a02e96647aa26137e7aab87cd4d9549a020ba050b859e735a9dff4b726984",
															"typeString": "literal_string \"Custom Token\""
														},
														"value": "Custom Token"
													},
													"src": "657:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 362,
												"nodeType": "ExpressionStatement",
												"src": "657:21:1"
											},
											{
												"expression": {
													"id": 365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 363,
														"name": "symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "689:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "4354",
														"id": 364,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "698:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_b0ae267f5886f41f13af4b185dfccc0c901c3b3efe1f44065fbb41d74159fc76",
															"typeString": "literal_string \"CT\""
														},
														"value": "CT"
													},
													"src": "689:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 366,
												"nodeType": "ExpressionStatement",
												"src": "689:13:1"
											},
											{
												"expression": {
													"id": 369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 367,
														"name": "price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 326,
														"src": "713:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "363030",
														"id": 368,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "721:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_600_by_1",
															"typeString": "int_const 600"
														},
														"value": "600"
													},
													"src": "713:11:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 370,
												"nodeType": "ExpressionStatement",
												"src": "713:11:1"
											},
											{
												"expression": {
													"id": 377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 371,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 320,
														"src": "808:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 374,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "825:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 375,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "825:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 373,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "817:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_payable_$",
																"typeString": "type(address payable)"
															},
															"typeName": {
																"id": 372,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "817:8:1",
																"stateMutability": "payable",
																"typeDescriptions": {}
															}
														},
														"id": 376,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "817:19:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "808:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 378,
												"nodeType": "ExpressionStatement",
												"src": "808:28:1"
											},
											{
												"expression": {
													"id": 383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 379,
															"name": "roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 336,
															"src": "900:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 381,
														"indexExpression": {
															"id": 380,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 320,
															"src": "906:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "900:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 382,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "913:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "900:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 384,
												"nodeType": "ExpressionStatement",
												"src": "900:17:1"
											},
											{
												"expression": {
													"id": 387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 385,
														"name": "totalsupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 328,
														"src": "993:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31303030303030",
														"id": 386,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1007:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000_by_1",
															"typeString": "int_const 1000000"
														},
														"value": "1000000"
													},
													"src": "993:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 388,
												"nodeType": "ExpressionStatement",
												"src": "993:21:1"
											},
											{
												"expression": {
													"id": 393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 389,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 332,
															"src": "1025:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 391,
														"indexExpression": {
															"id": 390,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 320,
															"src": "1034:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1025:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 392,
														"name": "totalsupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 328,
														"src": "1043:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1025:29:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 394,
												"nodeType": "ExpressionStatement",
												"src": "1025:29:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 396,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 320,
															"src": "1075:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 397,
															"name": "totalsupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 328,
															"src": "1082:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 395,
														"name": "Mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 350,
														"src": "1070:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1070:24:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 399,
												"nodeType": "EmitStatement",
												"src": "1065:29:1"
											}
										]
									},
									"id": 401,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "605:2:1"
									},
									"returnParameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "615:0:1"
									},
									"scope": 653,
									"src": "594:508:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "1167:39:1",
										"statements": [
											{
												"expression": {
													"id": 406,
													"name": "totalsupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 328,
													"src": "1187:11:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 405,
												"id": 407,
												"nodeType": "Return",
												"src": "1180:18:1"
											}
										]
									},
									"functionSelector": "18160ddd",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "1119:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 402,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1130:2:1"
									},
									"returnParameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "1153:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 403,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1153:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1152:9:1"
									},
									"scope": 653,
									"src": "1110:96:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 416,
										"nodeType": "Block",
										"src": "1272:30:1",
										"statements": [
											{
												"expression": {
													"id": 414,
													"name": "name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 322,
													"src": "1290:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 413,
												"id": 415,
												"nodeType": "Return",
												"src": "1283:11:1"
											}
										]
									},
									"functionSelector": "17d7de7c",
									"id": 417,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getName",
									"nameLocation": "1223:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1230:2:1"
									},
									"returnParameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "1252:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 411,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1252:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1251:15:1"
									},
									"scope": 653,
									"src": "1214:88:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 424,
										"nodeType": "Block",
										"src": "1374:33:1",
										"statements": [
											{
												"expression": {
													"id": 422,
													"name": "symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 324,
													"src": "1392:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 421,
												"id": 423,
												"nodeType": "Return",
												"src": "1385:13:1"
											}
										]
									},
									"functionSelector": "15070401",
									"id": 425,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getSymbol",
									"nameLocation": "1319:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1328:2:1"
									},
									"returnParameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "1353:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 419,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1353:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1351:17:1"
									},
									"scope": 653,
									"src": "1310:97:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 432,
										"nodeType": "Block",
										"src": "1472:32:1",
										"statements": [
											{
												"expression": {
													"id": 430,
													"name": "price",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 326,
													"src": "1490:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 429,
												"id": 431,
												"nodeType": "Return",
												"src": "1483:12:1"
											}
										]
									},
									"functionSelector": "98d5fdca",
									"id": 433,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPrice",
									"nameLocation": "1424:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1432:2:1"
									},
									"returnParameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "1457:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 427,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1457:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1455:11:1"
									},
									"scope": 653,
									"src": "1415:89:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 488,
										"nodeType": "Block",
										"src": "1579:429:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 451,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 448,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 437,
																		"src": "1672:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"baseExpression": {
																			"id": 443,
																			"name": "balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 332,
																			"src": "1647:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 446,
																		"indexExpression": {
																			"expression": {
																				"id": 444,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "1656:3:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 445,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "1656:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1647:20:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 447,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 190,
																	"src": "1647:24:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 449,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1647:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "30",
																"id": 450,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1682:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1647:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520646f206e6f7420686176652073756666696369656e742062616c616e6365",
															"id": 452,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1685:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1cfe29335417d58430919310476bd047bd59346b3a9c3737faf69e319ee4efb7",
																"typeString": "literal_string \"You do not have sufficient balance\""
															},
															"value": "You do not have sufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1cfe29335417d58430919310476bd047bd59346b3a9c3737faf69e319ee4efb7",
																"typeString": "literal_string \"You do not have sufficient balance\""
															}
														],
														"id": 442,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1639:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1639:83:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 454,
												"nodeType": "ExpressionStatement",
												"src": "1639:83:1"
											},
											{
												"expression": {
													"id": 466,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 455,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 332,
															"src": "1783:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 458,
														"indexExpression": {
															"expression": {
																"id": 456,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1792:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 457,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1792:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1783:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 464,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 437,
																"src": "1831:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 459,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 332,
																	"src": "1806:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 462,
																"indexExpression": {
																	"expression": {
																		"id": 460,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1815:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 461,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1815:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1806:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 463,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 190,
															"src": "1806:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 465,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1806:31:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1783:54:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 467,
												"nodeType": "ExpressionStatement",
												"src": "1783:54:1"
											},
											{
												"expression": {
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 468,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 332,
															"src": "1848:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 470,
														"indexExpression": {
															"id": 469,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 435,
															"src": "1857:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1848:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 475,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 437,
																"src": "1880:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 471,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 332,
																	"src": "1863:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 473,
																"indexExpression": {
																	"id": 472,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 435,
																	"src": "1872:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1863:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 474,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 175,
															"src": "1863:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 476,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1863:23:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1848:38:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "1848:38:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 480,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1955:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 481,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1955:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 482,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 435,
															"src": "1967:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 483,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "1971:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 479,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 344,
														"src": "1946:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1946:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 485,
												"nodeType": "EmitStatement",
												"src": "1941:36:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 486,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1995:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 441,
												"id": 487,
												"nodeType": "Return",
												"src": "1988:11:1"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 489,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1521:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1538:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "1530:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 434,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1530:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1550:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "1542:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 436,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1542:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1529:27:1"
									},
									"returnParameters": {
										"id": 441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 440,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "1573:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 439,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1573:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1572:6:1"
									},
									"scope": 653,
									"src": "1512:496:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 534,
										"nodeType": "Block",
										"src": "2090:249:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 504,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 499,
																	"name": "roles",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 336,
																	"src": "2109:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 502,
																"indexExpression": {
																	"expression": {
																		"id": 500,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2115:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 501,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2115:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2109:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2130:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "2109:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c7920746865206f776e65722063616e206d696e74206e657720746f6b656e73",
															"id": 505,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2136:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dbe0e75e0af93930a70b9625aa5f5d0f68d46c213206bbd891b8ca2b2a563776",
																"typeString": "literal_string \"Only the owner can mint new tokens\""
															},
															"value": "Only the owner can mint new tokens"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dbe0e75e0af93930a70b9625aa5f5d0f68d46c213206bbd891b8ca2b2a563776",
																"typeString": "literal_string \"Only the owner can mint new tokens\""
															}
														],
														"id": 498,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2101:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2101:72:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 507,
												"nodeType": "ExpressionStatement",
												"src": "2101:72:1"
											},
											{
												"expression": {
													"id": 513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 508,
														"name": "totalsupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 328,
														"src": "2184:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 511,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 493,
																"src": "2214:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 509,
																"name": "totalsupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 328,
																"src": "2198:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 510,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 175,
															"src": "2198:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 512,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2198:22:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2184:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 514,
												"nodeType": "ExpressionStatement",
												"src": "2184:36:1"
											},
											{
												"expression": {
													"id": 525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 515,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 332,
															"src": "2231:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 517,
														"indexExpression": {
															"id": 516,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 491,
															"src": "2240:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2231:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 523,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 493,
																"src": "2268:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"components": [
																	{
																		"baseExpression": {
																			"id": 518,
																			"name": "balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 332,
																			"src": "2248:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 520,
																		"indexExpression": {
																			"id": 519,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 491,
																			"src": "2258:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2248:14:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 521,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2247:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 522,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 175,
															"src": "2247:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 524,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2247:27:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2231:43:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 526,
												"nodeType": "ExpressionStatement",
												"src": "2231:43:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 528,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 491,
															"src": "2297:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 529,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 493,
															"src": "2302:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 527,
														"name": "Mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 350,
														"src": "2290:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2290:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 531,
												"nodeType": "EmitStatement",
												"src": "2285:23:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 532,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2327:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 497,
												"id": 533,
												"nodeType": "Return",
												"src": "2320:11:1"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 535,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "2030:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2044:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 535,
												"src": "2036:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 490,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2036:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2056:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 535,
												"src": "2048:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 492,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2035:27:1"
									},
									"returnParameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 535,
												"src": "2079:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 495,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2079:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2078:6:1"
									},
									"scope": 653,
									"src": "2020:319:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 546,
										"nodeType": "Block",
										"src": "2480:44:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 542,
														"name": "balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 332,
														"src": "2498:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 544,
													"indexExpression": {
														"id": 543,
														"name": "_account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 537,
														"src": "2507:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2498:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 541,
												"id": 545,
												"nodeType": "Return",
												"src": "2491:25:1"
											}
										]
									},
									"functionSelector": "70a08231",
									"id": 547,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2417:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "_account",
												"nameLocation": "2435:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "2427:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 536,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2427:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2426:18:1"
									},
									"returnParameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "2466:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 539,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2466:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2465:9:1"
									},
									"scope": 653,
									"src": "2408:116:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 629,
										"nodeType": "Block",
										"src": "2594:946:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 563,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 560,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 549,
																		"src": "2638:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"baseExpression": {
																			"id": 555,
																			"name": "balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 332,
																			"src": "2613:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 558,
																		"indexExpression": {
																			"expression": {
																				"id": 556,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "2622:3:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 557,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "2622:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2613:20:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 559,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 190,
																	"src": "2613:24:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 561,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2613:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "30",
																"id": 562,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2646:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2613:34:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742062616c616e6365",
															"id": 564,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2649:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															},
															"value": "Insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															}
														],
														"id": 554,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2605:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2605:67:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 566,
												"nodeType": "ExpressionStatement",
												"src": "2605:67:1"
											},
											{
												"assignments": [
													568
												],
												"declarations": [
													{
														"constant": false,
														"id": 568,
														"mutability": "mutable",
														"name": "weiAmount",
														"nameLocation": "2761:9:1",
														"nodeType": "VariableDeclaration",
														"scope": 629,
														"src": "2753:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 567,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2753:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 572,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 571,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 569,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 549,
														"src": "2773:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"hexValue": "363030",
														"id": 570,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2781:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_600_by_1",
															"typeString": "int_const 600"
														},
														"value": "600"
													},
													"src": "2773:11:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2753:31:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 583,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 580,
																		"name": "weiAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 568,
																		"src": "3060:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"arguments": [
																				{
																					"id": 576,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "3042:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Part2_token_$653",
																						"typeString": "contract Part2_token"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Part2_token_$653",
																						"typeString": "contract Part2_token"
																					}
																				],
																				"id": 575,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3034:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 574,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "3034:7:1",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3034:13:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 578,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "3034:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 579,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 190,
																	"src": "3034:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3034:36:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "30",
																"id": 582,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3072:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3034:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6e74726163742062616c616e636520697320696e73756666696369656e74",
															"id": 584,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3075:34:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_63580c8f2f353fc5b6490d467132dc04a523d5a3d9a1206eea4b2a39c4d766db",
																"typeString": "literal_string \"Contract balance is insufficient\""
															},
															"value": "Contract balance is insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_63580c8f2f353fc5b6490d467132dc04a523d5a3d9a1206eea4b2a39c4d766db",
																"typeString": "literal_string \"Contract balance is insufficient\""
															}
														],
														"id": 573,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3026:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3026:84:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 586,
												"nodeType": "ExpressionStatement",
												"src": "3026:84:1"
											},
											{
												"assignments": [
													588
												],
												"declarations": [
													{
														"constant": false,
														"id": 588,
														"mutability": "mutable",
														"name": "succ",
														"nameLocation": "3128:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 629,
														"src": "3123:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 587,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3123:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 595,
												"initialValue": {
													"arguments": [
														{
															"id": 591,
															"name": "weiAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 568,
															"src": "3156:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 592,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3167:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 593,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3167:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 589,
															"name": "customLib",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 699,
															"src": "3135:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_customLib_$699_$",
																"typeString": "type(library customLib)"
															}
														},
														"id": 590,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "customSend",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 698,
														"src": "3135:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_delegatecall_nonpayable$_t_uint256_$_t_address_$returns$_t_bool_$",
															"typeString": "function (uint256,address) returns (bool)"
														}
													},
													"id": 594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3135:43:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3123:55:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 597,
															"name": "succ",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 588,
															"src": "3197:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "556e7375636365737366756c2053656e64",
															"id": 598,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3202:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_93da4a8725cabb0c6def937e69cb0e26d00d98c431219d1ddb6799a41a68cc19",
																"typeString": "literal_string \"Unsuccessful Send\""
															},
															"value": "Unsuccessful Send"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_93da4a8725cabb0c6def937e69cb0e26d00d98c431219d1ddb6799a41a68cc19",
																"typeString": "literal_string \"Unsuccessful Send\""
															}
														],
														"id": 596,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3189:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3189:33:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 600,
												"nodeType": "ExpressionStatement",
												"src": "3189:33:1"
											},
											{
												"expression": {
													"id": 612,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 601,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 332,
															"src": "3233:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 604,
														"indexExpression": {
															"expression": {
																"id": 602,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3242:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 603,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3242:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3233:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 610,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 549,
																"src": "3281:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 605,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 332,
																	"src": "3256:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 608,
																"indexExpression": {
																	"expression": {
																		"id": 606,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3265:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 607,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3265:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3256:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 609,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 190,
															"src": "3256:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 611,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3256:31:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3233:54:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 613,
												"nodeType": "ExpressionStatement",
												"src": "3233:54:1"
											},
											{
												"expression": {
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 614,
														"name": "totalsupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 328,
														"src": "3346:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 617,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 549,
																"src": "3376:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 615,
																"name": "totalsupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 328,
																"src": "3360:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 190,
															"src": "3360:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3360:22:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3346:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 620,
												"nodeType": "ExpressionStatement",
												"src": "3346:36:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 622,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3463:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3463:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 624,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 549,
															"src": "3475:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 621,
														"name": "Sell",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 356,
														"src": "3458:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3458:23:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 626,
												"nodeType": "EmitStatement",
												"src": "3453:28:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 627,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3528:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 553,
												"id": 628,
												"nodeType": "Return",
												"src": "3521:11:1"
											}
										]
									},
									"functionSelector": "e4849b32",
									"id": 630,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sell",
									"nameLocation": "2539:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2552:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "2544:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2544:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2543:15:1"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "2583:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 551,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2583:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2582:6:1"
									},
									"scope": 653,
									"src": "2530:1010:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 647,
										"nodeType": "Block",
										"src": "3572:242:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 639,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 634,
																	"name": "roles",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 336,
																	"src": "3639:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 637,
																"indexExpression": {
																	"expression": {
																		"id": 635,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3645:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 636,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3645:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3639:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 638,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3660:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "3639:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c7920746865206f776e65722063616e2064657374726f792074686520636f6e7472616374",
															"id": 640,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3666:41:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ab5f331f6ba431abbea29f740d3c5ab5f38e45bf730065272d8e796b7e3904ce",
																"typeString": "literal_string \"Only the owner can destroy the contract\""
															},
															"value": "Only the owner can destroy the contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ab5f331f6ba431abbea29f740d3c5ab5f38e45bf730065272d8e796b7e3904ce",
																"typeString": "literal_string \"Only the owner can destroy the contract\""
															}
														],
														"id": 633,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3631:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3631:77:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 642,
												"nodeType": "ExpressionStatement",
												"src": "3631:77:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 644,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 320,
															"src": "3800:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 643,
														"name": "selfdestruct",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967275,
														"src": "3787:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_payable_$returns$__$",
															"typeString": "function (address payable)"
														}
													},
													"id": 645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3787:19:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 646,
												"nodeType": "ExpressionStatement",
												"src": "3787:19:1"
											}
										]
									},
									"functionSelector": "43d726d6",
									"id": 648,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "close",
									"nameLocation": "3557:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 631,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3562:2:1"
									},
									"returnParameters": {
										"id": 632,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3572:0:1"
									},
									"scope": 653,
									"src": "3548:266:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 651,
										"nodeType": "Block",
										"src": "3848:55:1",
										"statements": []
									},
									"id": 652,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3828:2:1"
									},
									"returnParameters": {
										"id": 650,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3848:0:1"
									},
									"scope": 653,
									"src": "3820:83:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 654,
							"src": "115:3797:1",
							"usedErrors": []
						}
					],
					"src": "0:3916:1"
				},
				"id": 1
			},
			"Library.sol": {
				"ast": {
					"absolutePath": "Library.sol",
					"exportedSymbols": {
						"customLib": [
							699
						]
					},
					"id": 700,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 655,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "110:31:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 699,
							"linearizedBaseContracts": [
								699
							],
							"name": "customLib",
							"nameLocation": "153:9:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 658,
									"mutability": "constant",
									"name": "owner",
									"nameLocation": "187:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 699,
									"src": "170:67:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 656,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "170:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307843386538614464354335394466314230623246323338364134633431313961413130323165324666",
										"id": 657,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "195:42:2",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xC8e8aDd5C59Df1B0b2F2386A4c4119aA1021e2Ff"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 697,
										"nodeType": "Block",
										"src": "321:190:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 670,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 668,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 660,
																"src": "340:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "31",
																"id": 669,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "348:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "340:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 667,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "332:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "332:18:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 672,
												"nodeType": "ExpressionStatement",
												"src": "332:18:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 678,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "395:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 675,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 658,
																	"src": "379:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 674,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "371:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 673,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "371:8:2",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 676,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "371:14:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 677,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "371:23:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "371:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 680,
												"nodeType": "ExpressionStatement",
												"src": "371:26:2"
											},
											{
												"assignments": [
													682,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 682,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "424:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 697,
														"src": "419:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 681,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "419:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 694,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 692,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "475:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 685,
																		"name": "receiver",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 662,
																		"src": "444:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 684,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "436:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_payable_$",
																		"typeString": "type(address payable)"
																	},
																	"typeName": {
																		"id": 683,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "436:8:2",
																		"stateMutability": "payable",
																		"typeDescriptions": {}
																	}
																},
																"id": 686,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "436:17:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 687,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "436:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 691,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 690,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 688,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 660,
																	"src": "466:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 689,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "472:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "466:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "436:38:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 693,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "436:42:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "418:60:2"
											},
											{
												"expression": {
													"id": 695,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 682,
													"src": "496:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 666,
												"id": 696,
												"nodeType": "Return",
												"src": "489:14:2"
											}
										]
									},
									"functionSelector": "c0ba8f42",
									"id": 698,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "customSend",
									"nameLocation": "255:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "274:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 698,
												"src": "266:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 659,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "266:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "289:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 698,
												"src": "281:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 661,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "281:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "265:33:2"
									},
									"returnParameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 698,
												"src": "315:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 664,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "315:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "314:6:2"
									},
									"scope": 699,
									"src": "246:265:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 700,
							"src": "145:369:2",
							"usedErrors": []
						}
					],
					"src": "110:404:2"
				},
				"id": 2
			}
		}
	}
}
{
	"id": "d64c1f9bda2873f8fe96cbd8f336318a",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"B226328_part1.sol": {
				"content": "pragma solidity >=0.7.0 <0.9.0;\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\ncontract Part1_token\r\n{\r\n    using SafeMath for uint256;\r\n    address payable private owner;\r\n    string  name;\r\n    string  symbol;\r\n    uint256  price;\r\n    uint256  totalsupply;\r\n    mapping(address => uint256) private  balances;\r\n    mapping(address => bool) private roles;\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    event Mint(address indexed to, uint256 value);\r\n    event Sell(address indexed from, uint256 value);\r\n    \r\n    \r\n    constructor() public {\r\n        // Set token metadata\r\n        name = \"Custom Token\";\r\n        symbol = \"CT\";\r\n        price = 600; // 600 wei per token\r\n        // Set contract owner as the token creator\r\n        owner =  payable(msg.sender);\r\n        // initialize the role-based access control\r\n        roles[owner]=true;\r\n        // Mint initial supply of tokens for the contract owner\r\n        totalsupply = 1000000;\r\n        balances[owner] = totalsupply;\r\n        emit Mint(owner, totalsupply);\r\n    }\r\n    \r\n    function totalSupply() public view returns(uint256)\r\n    {\r\n          return totalsupply;\r\n    }\r\n\r\n    function getName()public view returns(string memory)\r\n    {\r\n        return name;\r\n    }\r\n\r\n    function getSymbol() public view returns ( string memory )\r\n    {\r\n        return symbol; \r\n    }\r\n\r\n    function getPrice() public view returns ( uint256 )\r\n    {\r\n        return price; \r\n    }\r\n\r\n    function transfer(address to, uint256 value) public returns (bool) {\r\n        // Ensure caller has sufficient balance\r\n        require(balances[msg.sender].sub(value) >= 0, \"You do not have sufficient balance\");\r\n\r\n        // Transfer tokens and update balances\r\n        balances[msg.sender] = balances[msg.sender].sub(value);\r\n        balances[to] = balances[to].add(value);\r\n\r\n        // Emit event and return success\r\n        emit Transfer(msg.sender, to, value);\r\n        return true; \r\n    }\r\n    \r\n    function  mint (address to, uint256 value) public returns (bool)\r\n    {\r\n        require(roles[msg.sender] == true, \"Only the owner can mint new tokens\");\r\n        totalsupply = totalsupply.add(value);\r\n        balances[to] =  (balances[ to ]).add(value);\r\n        emit Mint ( to , value); \r\n        return true;\r\n    }\r\n\r\n    // Check the current amount of tokens of owner.\r\n    function balanceOf(address _account) public view returns (uint256)\r\n    {\r\n        return balances[_account];\r\n    }\r\n    function sell(uint256 value) public payable returns (bool)\r\n    {\r\n        require(balances[msg.sender].sub(value)>=0, \"Insufficient balance\");\r\n\r\n        // Calculate the amount of wei to be received for the sale\r\n        uint256 weiAmount = value * 600; // 600 wei per token\r\n\r\n        // Transfer the wei to the seller and update their balance\r\n        \r\n        // Check that the contract has a sufficient balance before calling the transfer function to avoid the reentrancy attack.\r\n        require(address(this).balance.sub(weiAmount)>=0, \"Contract balance is insufficient\");\r\n        payable(msg.sender).transfer(weiAmount);\r\n        balances[msg.sender] = balances[msg.sender].sub(value);\r\n\r\n        // Update the total supply of tokens\r\n        totalsupply = totalsupply.sub(value);\r\n\r\n        // Emit the Sell event to log the sale of tokens\r\n        emit Sell(msg.sender, value);\r\n        // Return success\r\n        return true;\r\n    }\r\n\r\n    function close() public {\r\n        // Ensure caller is the contract owner\r\n        require(roles[msg.sender] == true, \"Only the owner can destroy the contract\");\r\n\r\n        // Transfer contract balance to owner and destroy contract\r\n\r\n        selfdestruct(owner);\r\n    }\r\n    fallback() external payable {\r\n        // Do nothing, just accept the Ethers\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a36245a18735141281748aec4a20e7c2295c1eaaea54cc6b0412f32d5db605d464736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a36245a18735141281748aec4a20e7c2295c1eaaea54cc6b0412f32d5db605d464736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG3 PUSH3 0x45A187 CALLDATALOAD EQ SLT DUP2 PUSH21 0x8AEC4A20E7C2295C1EAAEA54CC6B0412F32D5DB605 0xD4 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "482:6300:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a36245a18735141281748aec4a20e7c2295c1eaaea54cc6b0412f32d5db605d464736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG3 PUSH3 0x45A187 CALLDATALOAD EQ SLT DUP2 PUSH21 0x8AEC4A20E7C2295C1EAAEA54CC6B0412F32D5DB605 0xD4 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "482:6300:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a36245a18735141281748aec4a20e7c2295c1eaaea54cc6b0412f32d5db605d464736f6c63430008070033",
									".code": [
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"B226328_part1.sol": {
				"Part1_token": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Sell",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "close",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getName",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getSymbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "sell",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"B226328_part1.sol\":92:3819  contract Part1_token\r... */\n  mstore(0x40, 0x80)\n    /* \"B226328_part1.sol\":571:1079  constructor() public {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"B226328_part1.sol\":634:655  name = \"Custom Token\" */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0c\n  dup2\n  mstore\n  0x20\n  add\n  0x437573746f6d20546f6b656e0000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"B226328_part1.sol\":634:638  name */\n  0x01\n    /* \"B226328_part1.sol\":634:655  name = \"Custom Token\" */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_4\n  swap3\n  swap2\n  swap1\n  tag_5\n  jump\t// in\ntag_4:\n  pop\n    /* \"B226328_part1.sol\":666:679  symbol = \"CT\" */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x02\n  dup2\n  mstore\n  0x20\n  add\n  0x4354000000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"B226328_part1.sol\":666:672  symbol */\n  0x02\n    /* \"B226328_part1.sol\":666:679  symbol = \"CT\" */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_6\n  swap3\n  swap2\n  swap1\n  tag_5\n  jump\t// in\ntag_6:\n  pop\n    /* \"B226328_part1.sol\":698:701  600 */\n  0x0258\n    /* \"B226328_part1.sol\":690:695  price */\n  0x03\n    /* \"B226328_part1.sol\":690:701  price = 600 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"B226328_part1.sol\":802:812  msg.sender */\n  caller\n    /* \"B226328_part1.sol\":785:790  owner */\n  0x00\n  dup1\n    /* \"B226328_part1.sol\":785:813  owner =  payable(msg.sender) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"B226328_part1.sol\":890:894  true */\n  0x01\n    /* \"B226328_part1.sol\":877:882  roles */\n  0x06\n    /* \"B226328_part1.sol\":877:889  roles[owner] */\n  0x00\n    /* \"B226328_part1.sol\":883:888  owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"B226328_part1.sol\":877:889  roles[owner] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"B226328_part1.sol\":877:894  roles[owner]=true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"B226328_part1.sol\":984:991  1000000 */\n  0x0f4240\n    /* \"B226328_part1.sol\":970:981  totalsupply */\n  0x04\n    /* \"B226328_part1.sol\":970:991  totalsupply = 1000000 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"B226328_part1.sol\":1020:1031  totalsupply */\n  sload(0x04)\n    /* \"B226328_part1.sol\":1002:1010  balances */\n  0x05\n    /* \"B226328_part1.sol\":1002:1017  balances[owner] */\n  0x00\n    /* \"B226328_part1.sol\":1011:1016  owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"B226328_part1.sol\":1002:1017  balances[owner] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"B226328_part1.sol\":1002:1031  balances[owner] = totalsupply */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"B226328_part1.sol\":1052:1057  owner */\n  0x00\n  dup1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"B226328_part1.sol\":1047:1071  Mint(owner, totalsupply) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885\n    /* \"B226328_part1.sol\":1059:1070  totalsupply */\n  sload(0x04)\n    /* \"B226328_part1.sol\":1047:1071  Mint(owner, totalsupply) */\n  mload(0x40)\n  tag_7\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log2\n    /* \"B226328_part1.sol\":92:3819  contract Part1_token\r... */\n  jump(tag_9)\ntag_5:\n  dup3\n  dup1\n  sload\n  tag_10\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_13\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_12)\ntag_13:\n  dup3\n  0x1f\n  lt\n  tag_14\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_12)\ntag_14:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_12\n  jumpi\n  swap2\n  dup3\n  add\ntag_15:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_16\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_15)\ntag_16:\ntag_12:\n  pop\n  swap1\n  pop\n  tag_17\n  swap2\n  swap1\n  tag_18\n  jump\t// in\ntag_17:\n  pop\n  swap1\n  jump\t// out\ntag_18:\ntag_19:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_20\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_19)\ntag_20:\n  pop\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7:125   */\ntag_22:\n    /* \"#utility.yul\":94:118   */\n  tag_24\n    /* \"#utility.yul\":112:117   */\n  dup2\n    /* \"#utility.yul\":94:118   */\n  tag_25\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":89:92   */\n  dup3\n    /* \"#utility.yul\":82:119   */\n  mstore\n    /* \"#utility.yul\":7:125   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":131:353   */\ntag_8:\n    /* \"#utility.yul\":224:228   */\n  0x00\n    /* \"#utility.yul\":262:264   */\n  0x20\n    /* \"#utility.yul\":251:260   */\n  dup3\n    /* \"#utility.yul\":247:265   */\n  add\n    /* \"#utility.yul\":239:265   */\n  swap1\n  pop\n    /* \"#utility.yul\":275:346   */\n  tag_27\n    /* \"#utility.yul\":343:344   */\n  0x00\n    /* \"#utility.yul\":332:341   */\n  dup4\n    /* \"#utility.yul\":328:345   */\n  add\n    /* \"#utility.yul\":319:325   */\n  dup5\n    /* \"#utility.yul\":275:346   */\n  tag_22\n  jump\t// in\ntag_27:\n    /* \"#utility.yul\":131:353   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":359:436   */\ntag_25:\n    /* \"#utility.yul\":396:403   */\n  0x00\n    /* \"#utility.yul\":425:430   */\n  dup2\n    /* \"#utility.yul\":414:430   */\n  swap1\n  pop\n    /* \"#utility.yul\":359:436   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":442:762   */\ntag_11:\n    /* \"#utility.yul\":486:492   */\n  0x00\n    /* \"#utility.yul\":523:524   */\n  0x02\n    /* \"#utility.yul\":517:521   */\n  dup3\n    /* \"#utility.yul\":513:525   */\n  div\n    /* \"#utility.yul\":503:525   */\n  swap1\n  pop\n    /* \"#utility.yul\":570:571   */\n  0x01\n    /* \"#utility.yul\":564:568   */\n  dup3\n    /* \"#utility.yul\":560:572   */\n  and\n    /* \"#utility.yul\":591:609   */\n  dup1\n    /* \"#utility.yul\":581:662   */\n  tag_30\n  jumpi\n    /* \"#utility.yul\":647:651   */\n  0x7f\n    /* \"#utility.yul\":639:645   */\n  dup3\n    /* \"#utility.yul\":635:652   */\n  and\n    /* \"#utility.yul\":625:652   */\n  swap2\n  pop\n    /* \"#utility.yul\":581:662   */\ntag_30:\n    /* \"#utility.yul\":709:711   */\n  0x20\n    /* \"#utility.yul\":701:707   */\n  dup3\n    /* \"#utility.yul\":698:712   */\n  lt\n    /* \"#utility.yul\":678:696   */\n  dup2\n    /* \"#utility.yul\":675:713   */\n  eq\n    /* \"#utility.yul\":672:756   */\n  iszero\n  tag_31\n  jumpi\n    /* \"#utility.yul\":728:746   */\n  tag_32\n  tag_33\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":672:756   */\ntag_31:\n    /* \"#utility.yul\":493:762   */\n  pop\n    /* \"#utility.yul\":442:762   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":768:948   */\ntag_33:\n    /* \"#utility.yul\":816:893   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":813:814   */\n  0x00\n    /* \"#utility.yul\":806:894   */\n  mstore\n    /* \"#utility.yul\":913:917   */\n  0x22\n    /* \"#utility.yul\":910:911   */\n  0x04\n    /* \"#utility.yul\":903:918   */\n  mstore\n    /* \"#utility.yul\":937:941   */\n  0x24\n    /* \"#utility.yul\":934:935   */\n  0x00\n    /* \"#utility.yul\":927:942   */\n  revert\n    /* \"B226328_part1.sol\":92:3819  contract Part1_token\r... */\ntag_9:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"B226328_part1.sol\":92:3819  contract Part1_token\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x43d726d6\n      gt\n      tag_12\n      jumpi\n      dup1\n      0x43d726d6\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x98d5fdca\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xe4849b32\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_12:\n      dup1\n      0x15070401\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x17d7de7c\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_6\n      jumpi\n      jump(tag_2)\n    tag_1:\n    tag_2:\n      stop\n        /* \"B226328_part1.sol\":1291:1388  function getSymbol() public view returns ( string memory )\r... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n      pop\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"B226328_part1.sol\":1195:1283  function getName()public view returns(string memory)\r... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      pop\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"B226328_part1.sol\":1091:1187  function totalSupply() public view returns(uint256)\r... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      pop\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"B226328_part1.sol\":2001:2320  function  mint (address to, uint256 value) public returns (bool)\r... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      pop\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"B226328_part1.sol\":3457:3727  function close() public {\r... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_36\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      pop\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      stop\n        /* \"B226328_part1.sol\":2381:2497  function balanceOf(address _account) public view returns (uint256)\r... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_39\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      pop\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"B226328_part1.sol\":1396:1485  function getPrice() public view returns ( uint256 )\r... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_45\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_45:\n      pop\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"B226328_part1.sol\":1493:1989  function transfer(address to, uint256 value) public returns (bool) {\r... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_49\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n      pop\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"B226328_part1.sol\":2503:3449  function sell(uint256 value) public payable returns (bool)\r... */\n    tag_11:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      tag_57\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"B226328_part1.sol\":1291:1388  function getSymbol() public view returns ( string memory )\r... */\n    tag_17:\n        /* \"B226328_part1.sol\":1334:1347  string memory */\n      0x60\n        /* \"B226328_part1.sol\":1373:1379  symbol */\n      0x02\n        /* \"B226328_part1.sol\":1366:1379  return symbol */\n      dup1\n      sload\n      tag_60\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_62\n      swap1\n      tag_61\n      jump\t// in\n    tag_62:\n      dup1\n      iszero\n      tag_63\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_64\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_63)\n    tag_64:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_65:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_65\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_63:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"B226328_part1.sol\":1291:1388  function getSymbol() public view returns ( string memory )\r... */\n      swap1\n      jump\t// out\n        /* \"B226328_part1.sol\":1195:1283  function getName()public view returns(string memory)\r... */\n    tag_22:\n        /* \"B226328_part1.sol\":1233:1246  string memory */\n      0x60\n        /* \"B226328_part1.sol\":1271:1275  name */\n      0x01\n        /* \"B226328_part1.sol\":1264:1275  return name */\n      dup1\n      sload\n      tag_67\n      swap1\n      tag_61\n      jump\t// in\n    tag_67:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_68\n      swap1\n      tag_61\n      jump\t// in\n    tag_68:\n      dup1\n      iszero\n      tag_69\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_70\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_69)\n    tag_70:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_71:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_71\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_69:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"B226328_part1.sol\":1195:1283  function getName()public view returns(string memory)\r... */\n      swap1\n      jump\t// out\n        /* \"B226328_part1.sol\":1091:1187  function totalSupply() public view returns(uint256)\r... */\n    tag_26:\n        /* \"B226328_part1.sol\":1134:1141  uint256 */\n      0x00\n        /* \"B226328_part1.sol\":1168:1179  totalsupply */\n      sload(0x04)\n        /* \"B226328_part1.sol\":1161:1179  return totalsupply */\n      swap1\n      pop\n        /* \"B226328_part1.sol\":1091:1187  function totalSupply() public view returns(uint256)\r... */\n      swap1\n      jump\t// out\n        /* \"B226328_part1.sol\":2001:2320  function  mint (address to, uint256 value) public returns (bool)\r... */\n    tag_33:\n        /* \"B226328_part1.sol\":2060:2064  bool */\n      0x00\n        /* \"B226328_part1.sol\":2111:2115  true */\n      0x01\n        /* \"B226328_part1.sol\":2090:2115  roles[msg.sender] == true */\n      iszero\n      iszero\n        /* \"B226328_part1.sol\":2090:2095  roles */\n      0x06\n        /* \"B226328_part1.sol\":2090:2107  roles[msg.sender] */\n      0x00\n        /* \"B226328_part1.sol\":2096:2106  msg.sender */\n      caller\n        /* \"B226328_part1.sol\":2090:2107  roles[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"B226328_part1.sol\":2090:2115  roles[msg.sender] == true */\n      iszero\n      iszero\n      eq\n        /* \"B226328_part1.sol\":2082:2154  require(roles[msg.sender] == true, \"Only the owner can mint new tokens\") */\n      tag_74\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_75\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_74:\n        /* \"B226328_part1.sol\":2179:2201  totalsupply.add(value) */\n      tag_77\n        /* \"B226328_part1.sol\":2195:2200  value */\n      dup3\n        /* \"B226328_part1.sol\":2179:2190  totalsupply */\n      sload(0x04)\n        /* \"B226328_part1.sol\":2179:2194  totalsupply.add */\n      tag_78\n      swap1\n        /* \"B226328_part1.sol\":2179:2201  totalsupply.add(value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_77:\n        /* \"B226328_part1.sol\":2165:2176  totalsupply */\n      0x04\n        /* \"B226328_part1.sol\":2165:2201  totalsupply = totalsupply.add(value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"B226328_part1.sol\":2228:2255  (balances[ to ]).add(value) */\n      tag_79\n        /* \"B226328_part1.sol\":2249:2254  value */\n      dup3\n        /* \"B226328_part1.sol\":2229:2237  balances */\n      0x05\n        /* \"B226328_part1.sol\":2229:2243  balances[ to ] */\n      0x00\n        /* \"B226328_part1.sol\":2239:2241  to */\n      dup7\n        /* \"B226328_part1.sol\":2229:2243  balances[ to ] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"B226328_part1.sol\":2228:2248  (balances[ to ]).add */\n      tag_78\n      swap1\n        /* \"B226328_part1.sol\":2228:2255  (balances[ to ]).add(value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_79:\n        /* \"B226328_part1.sol\":2212:2220  balances */\n      0x05\n        /* \"B226328_part1.sol\":2212:2224  balances[to] */\n      0x00\n        /* \"B226328_part1.sol\":2221:2223  to */\n      dup6\n        /* \"B226328_part1.sol\":2212:2224  balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"B226328_part1.sol\":2212:2255  balances[to] =  (balances[ to ]).add(value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"B226328_part1.sol\":2278:2280  to */\n      dup3\n        /* \"B226328_part1.sol\":2271:2289  Mint ( to , value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885\n        /* \"B226328_part1.sol\":2283:2288  value */\n      dup4\n        /* \"B226328_part1.sol\":2271:2289  Mint ( to , value) */\n      mload(0x40)\n      tag_80\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"B226328_part1.sol\":2308:2312  true */\n      0x01\n        /* \"B226328_part1.sol\":2301:2312  return true */\n      swap1\n      pop\n        /* \"B226328_part1.sol\":2001:2320  function  mint (address to, uint256 value) public returns (bool)\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"B226328_part1.sol\":3457:3727  function close() public {\r... */\n    tag_38:\n        /* \"B226328_part1.sol\":3569:3573  true */\n      0x01\n        /* \"B226328_part1.sol\":3548:3573  roles[msg.sender] == true */\n      iszero\n      iszero\n        /* \"B226328_part1.sol\":3548:3553  roles */\n      0x06\n        /* \"B226328_part1.sol\":3548:3565  roles[msg.sender] */\n      0x00\n        /* \"B226328_part1.sol\":3554:3564  msg.sender */\n      caller\n        /* \"B226328_part1.sol\":3548:3565  roles[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"B226328_part1.sol\":3548:3573  roles[msg.sender] == true */\n      iszero\n      iszero\n      eq\n        /* \"B226328_part1.sol\":3540:3617  require(roles[msg.sender] == true, \"Only the owner can destroy the contract\") */\n      tag_82\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_83\n      swap1\n      tag_84\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_82:\n        /* \"B226328_part1.sol\":3713:3718  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"B226328_part1.sol\":3700:3719  selfdestruct(owner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      selfdestruct\n        /* \"B226328_part1.sol\":2381:2497  function balanceOf(address _account) public view returns (uint256)\r... */\n    tag_43:\n        /* \"B226328_part1.sol\":2439:2446  uint256 */\n      0x00\n        /* \"B226328_part1.sol\":2471:2479  balances */\n      0x05\n        /* \"B226328_part1.sol\":2471:2489  balances[_account] */\n      0x00\n        /* \"B226328_part1.sol\":2480:2488  _account */\n      dup4\n        /* \"B226328_part1.sol\":2471:2489  balances[_account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"B226328_part1.sol\":2464:2489  return balances[_account] */\n      swap1\n      pop\n        /* \"B226328_part1.sol\":2381:2497  function balanceOf(address _account) public view returns (uint256)\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"B226328_part1.sol\":1396:1485  function getPrice() public view returns ( uint256 )\r... */\n    tag_47:\n        /* \"B226328_part1.sol\":1438:1445  uint256 */\n      0x00\n        /* \"B226328_part1.sol\":1471:1476  price */\n      sload(0x03)\n        /* \"B226328_part1.sol\":1464:1476  return price */\n      swap1\n      pop\n        /* \"B226328_part1.sol\":1396:1485  function getPrice() public view returns ( uint256 )\r... */\n      swap1\n      jump\t// out\n        /* \"B226328_part1.sol\":1493:1989  function transfer(address to, uint256 value) public returns (bool) {\r... */\n    tag_52:\n        /* \"B226328_part1.sol\":1554:1558  bool */\n      0x00\n        /* \"B226328_part1.sol\":1663:1664  0 */\n      dup1\n        /* \"B226328_part1.sol\":1628:1659  balances[msg.sender].sub(value) */\n      tag_88\n        /* \"B226328_part1.sol\":1653:1658  value */\n      dup4\n        /* \"B226328_part1.sol\":1628:1636  balances */\n      0x05\n        /* \"B226328_part1.sol\":1628:1648  balances[msg.sender] */\n      0x00\n        /* \"B226328_part1.sol\":1637:1647  msg.sender */\n      caller\n        /* \"B226328_part1.sol\":1628:1648  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"B226328_part1.sol\":1628:1652  balances[msg.sender].sub */\n      tag_89\n      swap1\n        /* \"B226328_part1.sol\":1628:1659  balances[msg.sender].sub(value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_88:\n        /* \"B226328_part1.sol\":1628:1664  balances[msg.sender].sub(value) >= 0 */\n      lt\n      iszero\n        /* \"B226328_part1.sol\":1620:1703  require(balances[msg.sender].sub(value) >= 0, \"You do not have sufficient balance\") */\n      tag_90\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_91\n      swap1\n      tag_92\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_90:\n        /* \"B226328_part1.sol\":1787:1818  balances[msg.sender].sub(value) */\n      tag_93\n        /* \"B226328_part1.sol\":1812:1817  value */\n      dup3\n        /* \"B226328_part1.sol\":1787:1795  balances */\n      0x05\n        /* \"B226328_part1.sol\":1787:1807  balances[msg.sender] */\n      0x00\n        /* \"B226328_part1.sol\":1796:1806  msg.sender */\n      caller\n        /* \"B226328_part1.sol\":1787:1807  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"B226328_part1.sol\":1787:1811  balances[msg.sender].sub */\n      tag_89\n      swap1\n        /* \"B226328_part1.sol\":1787:1818  balances[msg.sender].sub(value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_93:\n        /* \"B226328_part1.sol\":1764:1772  balances */\n      0x05\n        /* \"B226328_part1.sol\":1764:1784  balances[msg.sender] */\n      0x00\n        /* \"B226328_part1.sol\":1773:1783  msg.sender */\n      caller\n        /* \"B226328_part1.sol\":1764:1784  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"B226328_part1.sol\":1764:1818  balances[msg.sender] = balances[msg.sender].sub(value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"B226328_part1.sol\":1844:1867  balances[to].add(value) */\n      tag_94\n        /* \"B226328_part1.sol\":1861:1866  value */\n      dup3\n        /* \"B226328_part1.sol\":1844:1852  balances */\n      0x05\n        /* \"B226328_part1.sol\":1844:1856  balances[to] */\n      0x00\n        /* \"B226328_part1.sol\":1853:1855  to */\n      dup7\n        /* \"B226328_part1.sol\":1844:1856  balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"B226328_part1.sol\":1844:1860  balances[to].add */\n      tag_78\n      swap1\n        /* \"B226328_part1.sol\":1844:1867  balances[to].add(value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_94:\n        /* \"B226328_part1.sol\":1829:1837  balances */\n      0x05\n        /* \"B226328_part1.sol\":1829:1841  balances[to] */\n      0x00\n        /* \"B226328_part1.sol\":1838:1840  to */\n      dup6\n        /* \"B226328_part1.sol\":1829:1841  balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"B226328_part1.sol\":1829:1867  balances[to] = balances[to].add(value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"B226328_part1.sol\":1948:1950  to */\n      dup3\n        /* \"B226328_part1.sol\":1927:1958  Transfer(msg.sender, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"B226328_part1.sol\":1936:1946  msg.sender */\n      caller\n        /* \"B226328_part1.sol\":1927:1958  Transfer(msg.sender, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"B226328_part1.sol\":1952:1957  value */\n      dup5\n        /* \"B226328_part1.sol\":1927:1958  Transfer(msg.sender, to, value) */\n      mload(0x40)\n      tag_95\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"B226328_part1.sol\":1976:1980  true */\n      0x01\n        /* \"B226328_part1.sol\":1969:1980  return true */\n      swap1\n      pop\n        /* \"B226328_part1.sol\":1493:1989  function transfer(address to, uint256 value) public returns (bool) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"B226328_part1.sol\":2503:3449  function sell(uint256 value) public payable returns (bool)\r... */\n    tag_57:\n        /* \"B226328_part1.sol\":2556:2560  bool */\n      0x00\n        /* \"B226328_part1.sol\":2619:2620  0 */\n      dup1\n        /* \"B226328_part1.sol\":2586:2617  balances[msg.sender].sub(value) */\n      tag_97\n        /* \"B226328_part1.sol\":2611:2616  value */\n      dup4\n        /* \"B226328_part1.sol\":2586:2594  balances */\n      0x05\n        /* \"B226328_part1.sol\":2586:2606  balances[msg.sender] */\n      0x00\n        /* \"B226328_part1.sol\":2595:2605  msg.sender */\n      caller\n        /* \"B226328_part1.sol\":2586:2606  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"B226328_part1.sol\":2586:2610  balances[msg.sender].sub */\n      tag_89\n      swap1\n        /* \"B226328_part1.sol\":2586:2617  balances[msg.sender].sub(value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_97:\n        /* \"B226328_part1.sol\":2586:2620  balances[msg.sender].sub(value)>=0 */\n      lt\n      iszero\n        /* \"B226328_part1.sol\":2578:2645  require(balances[msg.sender].sub(value)>=0, \"Insufficient balance\") */\n      tag_98\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_99\n      swap1\n      tag_100\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_98:\n        /* \"B226328_part1.sol\":2726:2743  uint256 weiAmount */\n      0x00\n        /* \"B226328_part1.sol\":2754:2757  600 */\n      0x0258\n        /* \"B226328_part1.sol\":2746:2751  value */\n      dup4\n        /* \"B226328_part1.sol\":2746:2757  value * 600 */\n      tag_101\n      swap2\n      swap1\n      tag_102\n      jump\t// in\n    tag_101:\n        /* \"B226328_part1.sol\":2726:2757  uint256 weiAmount = value * 600 */\n      swap1\n      pop\n        /* \"B226328_part1.sol\":3045:3046  0 */\n      0x00\n        /* \"B226328_part1.sol\":3007:3043  address(this).balance.sub(weiAmount) */\n      tag_103\n        /* \"B226328_part1.sol\":3033:3042  weiAmount */\n      dup3\n        /* \"B226328_part1.sol\":3007:3028  address(this).balance */\n      selfbalance\n        /* \"B226328_part1.sol\":3007:3032  address(this).balance.sub */\n      tag_89\n      swap1\n        /* \"B226328_part1.sol\":3007:3043  address(this).balance.sub(weiAmount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_103:\n        /* \"B226328_part1.sol\":3007:3046  address(this).balance.sub(weiAmount)>=0 */\n      lt\n      iszero\n        /* \"B226328_part1.sol\":2999:3083  require(address(this).balance.sub(weiAmount)>=0, \"Contract balance is insufficient\") */\n      tag_104\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_105\n      swap1\n      tag_106\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_104:\n        /* \"B226328_part1.sol\":3102:3112  msg.sender */\n      caller\n        /* \"B226328_part1.sol\":3094:3122  payable(msg.sender).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"B226328_part1.sol\":3094:3133  payable(msg.sender).transfer(weiAmount) */\n      0x08fc\n        /* \"B226328_part1.sol\":3123:3132  weiAmount */\n      dup3\n        /* \"B226328_part1.sol\":3094:3133  payable(msg.sender).transfer(weiAmount) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_108\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_108:\n      pop\n        /* \"B226328_part1.sol\":3167:3198  balances[msg.sender].sub(value) */\n      tag_109\n        /* \"B226328_part1.sol\":3192:3197  value */\n      dup4\n        /* \"B226328_part1.sol\":3167:3175  balances */\n      0x05\n        /* \"B226328_part1.sol\":3167:3187  balances[msg.sender] */\n      0x00\n        /* \"B226328_part1.sol\":3176:3186  msg.sender */\n      caller\n        /* \"B226328_part1.sol\":3167:3187  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"B226328_part1.sol\":3167:3191  balances[msg.sender].sub */\n      tag_89\n      swap1\n        /* \"B226328_part1.sol\":3167:3198  balances[msg.sender].sub(value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_109:\n        /* \"B226328_part1.sol\":3144:3152  balances */\n      0x05\n        /* \"B226328_part1.sol\":3144:3164  balances[msg.sender] */\n      0x00\n        /* \"B226328_part1.sol\":3153:3163  msg.sender */\n      caller\n        /* \"B226328_part1.sol\":3144:3164  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"B226328_part1.sol\":3144:3198  balances[msg.sender] = balances[msg.sender].sub(value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"B226328_part1.sol\":3271:3293  totalsupply.sub(value) */\n      tag_110\n        /* \"B226328_part1.sol\":3287:3292  value */\n      dup4\n        /* \"B226328_part1.sol\":3271:3282  totalsupply */\n      sload(0x04)\n        /* \"B226328_part1.sol\":3271:3286  totalsupply.sub */\n      tag_89\n      swap1\n        /* \"B226328_part1.sol\":3271:3293  totalsupply.sub(value) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_110:\n        /* \"B226328_part1.sol\":3257:3268  totalsupply */\n      0x04\n        /* \"B226328_part1.sol\":3257:3293  totalsupply = totalsupply.sub(value) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"B226328_part1.sol\":3374:3384  msg.sender */\n      caller\n        /* \"B226328_part1.sol\":3369:3392  Sell(msg.sender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x5e5e995ce3133561afceaa51a9a154d5db228cd7525d34df5185582c18d3df09\n        /* \"B226328_part1.sol\":3386:3391  value */\n      dup5\n        /* \"B226328_part1.sol\":3369:3392  Sell(msg.sender, value) */\n      mload(0x40)\n      tag_111\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_111:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"B226328_part1.sol\":3437:3441  true */\n      0x01\n        /* \"B226328_part1.sol\":3430:3441  return true */\n      swap2\n      pop\n      pop\n        /* \"B226328_part1.sol\":2503:3449  function sell(uint256 value) public payable returns (bool)\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_78:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2813:2820  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2843:2844  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2840  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_113\n      swap2\n      swap1\n      tag_114\n      jump\t// in\n    tag_113:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2832:2844  return a + b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_89:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3180:3187  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3210:3211  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3207  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3211  a - b */\n      tag_116\n      swap2\n      swap1\n      tag_117\n      jump\t// in\n    tag_116:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3199:3211  return a - b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_119:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_121\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_122\n      jump\t// in\n    tag_121:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:291   */\n    tag_123:\n        /* \"#utility.yul\":198:203   */\n      0x00\n        /* \"#utility.yul\":236:242   */\n      dup2\n        /* \"#utility.yul\":223:243   */\n      calldataload\n        /* \"#utility.yul\":214:243   */\n      swap1\n      pop\n        /* \"#utility.yul\":252:285   */\n      tag_125\n        /* \"#utility.yul\":279:284   */\n      dup2\n        /* \"#utility.yul\":252:285   */\n      tag_126\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":152:291   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":297:626   */\n    tag_42:\n        /* \"#utility.yul\":356:362   */\n      0x00\n        /* \"#utility.yul\":405:407   */\n      0x20\n        /* \"#utility.yul\":393:402   */\n      dup3\n        /* \"#utility.yul\":384:391   */\n      dup5\n        /* \"#utility.yul\":380:403   */\n      sub\n        /* \"#utility.yul\":376:408   */\n      slt\n        /* \"#utility.yul\":373:492   */\n      iszero\n      tag_128\n      jumpi\n        /* \"#utility.yul\":411:490   */\n      tag_129\n      tag_130\n      jump\t// in\n    tag_129:\n        /* \"#utility.yul\":373:492   */\n    tag_128:\n        /* \"#utility.yul\":531:532   */\n      0x00\n        /* \"#utility.yul\":556:609   */\n      tag_131\n        /* \"#utility.yul\":601:608   */\n      dup5\n        /* \"#utility.yul\":592:598   */\n      dup3\n        /* \"#utility.yul\":581:590   */\n      dup6\n        /* \"#utility.yul\":577:599   */\n      add\n        /* \"#utility.yul\":556:609   */\n      tag_119\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":546:609   */\n      swap2\n      pop\n        /* \"#utility.yul\":502:619   */\n      pop\n        /* \"#utility.yul\":297:626   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":632:1106   */\n    tag_32:\n        /* \"#utility.yul\":700:706   */\n      0x00\n        /* \"#utility.yul\":708:714   */\n      dup1\n        /* \"#utility.yul\":757:759   */\n      0x40\n        /* \"#utility.yul\":745:754   */\n      dup4\n        /* \"#utility.yul\":736:743   */\n      dup6\n        /* \"#utility.yul\":732:755   */\n      sub\n        /* \"#utility.yul\":728:760   */\n      slt\n        /* \"#utility.yul\":725:844   */\n      iszero\n      tag_133\n      jumpi\n        /* \"#utility.yul\":763:842   */\n      tag_134\n      tag_130\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":725:844   */\n    tag_133:\n        /* \"#utility.yul\":883:884   */\n      0x00\n        /* \"#utility.yul\":908:961   */\n      tag_135\n        /* \"#utility.yul\":953:960   */\n      dup6\n        /* \"#utility.yul\":944:950   */\n      dup3\n        /* \"#utility.yul\":933:942   */\n      dup7\n        /* \"#utility.yul\":929:951   */\n      add\n        /* \"#utility.yul\":908:961   */\n      tag_119\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":898:961   */\n      swap3\n      pop\n        /* \"#utility.yul\":854:971   */\n      pop\n        /* \"#utility.yul\":1010:1012   */\n      0x20\n        /* \"#utility.yul\":1036:1089   */\n      tag_136\n        /* \"#utility.yul\":1081:1088   */\n      dup6\n        /* \"#utility.yul\":1072:1078   */\n      dup3\n        /* \"#utility.yul\":1061:1070   */\n      dup7\n        /* \"#utility.yul\":1057:1079   */\n      add\n        /* \"#utility.yul\":1036:1089   */\n      tag_123\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":1026:1089   */\n      swap2\n      pop\n        /* \"#utility.yul\":981:1099   */\n      pop\n        /* \"#utility.yul\":632:1106   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1112:1441   */\n    tag_56:\n        /* \"#utility.yul\":1171:1177   */\n      0x00\n        /* \"#utility.yul\":1220:1222   */\n      0x20\n        /* \"#utility.yul\":1208:1217   */\n      dup3\n        /* \"#utility.yul\":1199:1206   */\n      dup5\n        /* \"#utility.yul\":1195:1218   */\n      sub\n        /* \"#utility.yul\":1191:1223   */\n      slt\n        /* \"#utility.yul\":1188:1307   */\n      iszero\n      tag_138\n      jumpi\n        /* \"#utility.yul\":1226:1305   */\n      tag_139\n      tag_130\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":1188:1307   */\n    tag_138:\n        /* \"#utility.yul\":1346:1347   */\n      0x00\n        /* \"#utility.yul\":1371:1424   */\n      tag_140\n        /* \"#utility.yul\":1416:1423   */\n      dup5\n        /* \"#utility.yul\":1407:1413   */\n      dup3\n        /* \"#utility.yul\":1396:1405   */\n      dup6\n        /* \"#utility.yul\":1392:1414   */\n      add\n        /* \"#utility.yul\":1371:1424   */\n      tag_123\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":1361:1424   */\n      swap2\n      pop\n        /* \"#utility.yul\":1317:1434   */\n      pop\n        /* \"#utility.yul\":1112:1441   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1447:1556   */\n    tag_141:\n        /* \"#utility.yul\":1528:1549   */\n      tag_143\n        /* \"#utility.yul\":1543:1548   */\n      dup2\n        /* \"#utility.yul\":1528:1549   */\n      tag_144\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":1523:1526   */\n      dup3\n        /* \"#utility.yul\":1516:1550   */\n      mstore\n        /* \"#utility.yul\":1447:1556   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1562:1926   */\n    tag_145:\n        /* \"#utility.yul\":1650:1653   */\n      0x00\n        /* \"#utility.yul\":1678:1717   */\n      tag_147\n        /* \"#utility.yul\":1711:1716   */\n      dup3\n        /* \"#utility.yul\":1678:1717   */\n      tag_148\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":1733:1804   */\n      tag_149\n        /* \"#utility.yul\":1797:1803   */\n      dup2\n        /* \"#utility.yul\":1792:1795   */\n      dup6\n        /* \"#utility.yul\":1733:1804   */\n      tag_150\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":1726:1804   */\n      swap4\n      pop\n        /* \"#utility.yul\":1813:1865   */\n      tag_151\n        /* \"#utility.yul\":1858:1864   */\n      dup2\n        /* \"#utility.yul\":1853:1856   */\n      dup6\n        /* \"#utility.yul\":1846:1850   */\n      0x20\n        /* \"#utility.yul\":1839:1844   */\n      dup7\n        /* \"#utility.yul\":1835:1851   */\n      add\n        /* \"#utility.yul\":1813:1865   */\n      tag_152\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":1890:1919   */\n      tag_153\n        /* \"#utility.yul\":1912:1918   */\n      dup2\n        /* \"#utility.yul\":1890:1919   */\n      tag_154\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":1885:1888   */\n      dup5\n        /* \"#utility.yul\":1881:1920   */\n      add\n        /* \"#utility.yul\":1874:1920   */\n      swap2\n      pop\n        /* \"#utility.yul\":1654:1926   */\n      pop\n        /* \"#utility.yul\":1562:1926   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1932:2298   */\n    tag_155:\n        /* \"#utility.yul\":2074:2077   */\n      0x00\n        /* \"#utility.yul\":2095:2162   */\n      tag_157\n        /* \"#utility.yul\":2159:2161   */\n      0x22\n        /* \"#utility.yul\":2154:2157   */\n      dup4\n        /* \"#utility.yul\":2095:2162   */\n      tag_150\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":2088:2162   */\n      swap2\n      pop\n        /* \"#utility.yul\":2171:2264   */\n      tag_158\n        /* \"#utility.yul\":2260:2263   */\n      dup3\n        /* \"#utility.yul\":2171:2264   */\n      tag_159\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":2289:2291   */\n      0x40\n        /* \"#utility.yul\":2284:2287   */\n      dup3\n        /* \"#utility.yul\":2280:2292   */\n      add\n        /* \"#utility.yul\":2273:2292   */\n      swap1\n      pop\n        /* \"#utility.yul\":1932:2298   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2304:2670   */\n    tag_160:\n        /* \"#utility.yul\":2446:2449   */\n      0x00\n        /* \"#utility.yul\":2467:2534   */\n      tag_162\n        /* \"#utility.yul\":2531:2533   */\n      0x14\n        /* \"#utility.yul\":2526:2529   */\n      dup4\n        /* \"#utility.yul\":2467:2534   */\n      tag_150\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":2460:2534   */\n      swap2\n      pop\n        /* \"#utility.yul\":2543:2636   */\n      tag_163\n        /* \"#utility.yul\":2632:2635   */\n      dup3\n        /* \"#utility.yul\":2543:2636   */\n      tag_164\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":2661:2663   */\n      0x20\n        /* \"#utility.yul\":2656:2659   */\n      dup3\n        /* \"#utility.yul\":2652:2664   */\n      add\n        /* \"#utility.yul\":2645:2664   */\n      swap1\n      pop\n        /* \"#utility.yul\":2304:2670   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2676:3042   */\n    tag_165:\n        /* \"#utility.yul\":2818:2821   */\n      0x00\n        /* \"#utility.yul\":2839:2906   */\n      tag_167\n        /* \"#utility.yul\":2903:2905   */\n      0x20\n        /* \"#utility.yul\":2898:2901   */\n      dup4\n        /* \"#utility.yul\":2839:2906   */\n      tag_150\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":2832:2906   */\n      swap2\n      pop\n        /* \"#utility.yul\":2915:3008   */\n      tag_168\n        /* \"#utility.yul\":3004:3007   */\n      dup3\n        /* \"#utility.yul\":2915:3008   */\n      tag_169\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":3033:3035   */\n      0x20\n        /* \"#utility.yul\":3028:3031   */\n      dup3\n        /* \"#utility.yul\":3024:3036   */\n      add\n        /* \"#utility.yul\":3017:3036   */\n      swap1\n      pop\n        /* \"#utility.yul\":2676:3042   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3048:3414   */\n    tag_170:\n        /* \"#utility.yul\":3190:3193   */\n      0x00\n        /* \"#utility.yul\":3211:3278   */\n      tag_172\n        /* \"#utility.yul\":3275:3277   */\n      0x27\n        /* \"#utility.yul\":3270:3273   */\n      dup4\n        /* \"#utility.yul\":3211:3278   */\n      tag_150\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":3204:3278   */\n      swap2\n      pop\n        /* \"#utility.yul\":3287:3380   */\n      tag_173\n        /* \"#utility.yul\":3376:3379   */\n      dup3\n        /* \"#utility.yul\":3287:3380   */\n      tag_174\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":3405:3407   */\n      0x40\n        /* \"#utility.yul\":3400:3403   */\n      dup3\n        /* \"#utility.yul\":3396:3408   */\n      add\n        /* \"#utility.yul\":3389:3408   */\n      swap1\n      pop\n        /* \"#utility.yul\":3048:3414   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3420:3786   */\n    tag_175:\n        /* \"#utility.yul\":3562:3565   */\n      0x00\n        /* \"#utility.yul\":3583:3650   */\n      tag_177\n        /* \"#utility.yul\":3647:3649   */\n      0x22\n        /* \"#utility.yul\":3642:3645   */\n      dup4\n        /* \"#utility.yul\":3583:3650   */\n      tag_150\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":3576:3650   */\n      swap2\n      pop\n        /* \"#utility.yul\":3659:3752   */\n      tag_178\n        /* \"#utility.yul\":3748:3751   */\n      dup3\n        /* \"#utility.yul\":3659:3752   */\n      tag_179\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":3777:3779   */\n      0x40\n        /* \"#utility.yul\":3772:3775   */\n      dup3\n        /* \"#utility.yul\":3768:3780   */\n      add\n        /* \"#utility.yul\":3761:3780   */\n      swap1\n      pop\n        /* \"#utility.yul\":3420:3786   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3792:3910   */\n    tag_180:\n        /* \"#utility.yul\":3879:3903   */\n      tag_182\n        /* \"#utility.yul\":3897:3902   */\n      dup2\n        /* \"#utility.yul\":3879:3903   */\n      tag_183\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":3874:3877   */\n      dup3\n        /* \"#utility.yul\":3867:3904   */\n      mstore\n        /* \"#utility.yul\":3792:3910   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3916:4126   */\n    tag_35:\n        /* \"#utility.yul\":4003:4007   */\n      0x00\n        /* \"#utility.yul\":4041:4043   */\n      0x20\n        /* \"#utility.yul\":4030:4039   */\n      dup3\n        /* \"#utility.yul\":4026:4044   */\n      add\n        /* \"#utility.yul\":4018:4044   */\n      swap1\n      pop\n        /* \"#utility.yul\":4054:4119   */\n      tag_185\n        /* \"#utility.yul\":4116:4117   */\n      0x00\n        /* \"#utility.yul\":4105:4114   */\n      dup4\n        /* \"#utility.yul\":4101:4118   */\n      add\n        /* \"#utility.yul\":4092:4098   */\n      dup5\n        /* \"#utility.yul\":4054:4119   */\n      tag_141\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":3916:4126   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4132:4445   */\n    tag_19:\n        /* \"#utility.yul\":4245:4249   */\n      0x00\n        /* \"#utility.yul\":4283:4285   */\n      0x20\n        /* \"#utility.yul\":4272:4281   */\n      dup3\n        /* \"#utility.yul\":4268:4286   */\n      add\n        /* \"#utility.yul\":4260:4286   */\n      swap1\n      pop\n        /* \"#utility.yul\":4332:4341   */\n      dup2\n        /* \"#utility.yul\":4326:4330   */\n      dup2\n        /* \"#utility.yul\":4322:4342   */\n      sub\n        /* \"#utility.yul\":4318:4319   */\n      0x00\n        /* \"#utility.yul\":4307:4316   */\n      dup4\n        /* \"#utility.yul\":4303:4320   */\n      add\n        /* \"#utility.yul\":4296:4343   */\n      mstore\n        /* \"#utility.yul\":4360:4438   */\n      tag_187\n        /* \"#utility.yul\":4433:4437   */\n      dup2\n        /* \"#utility.yul\":4424:4430   */\n      dup5\n        /* \"#utility.yul\":4360:4438   */\n      tag_145\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":4352:4438   */\n      swap1\n      pop\n        /* \"#utility.yul\":4132:4445   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4451:4870   */\n    tag_92:\n        /* \"#utility.yul\":4617:4621   */\n      0x00\n        /* \"#utility.yul\":4655:4657   */\n      0x20\n        /* \"#utility.yul\":4644:4653   */\n      dup3\n        /* \"#utility.yul\":4640:4658   */\n      add\n        /* \"#utility.yul\":4632:4658   */\n      swap1\n      pop\n        /* \"#utility.yul\":4704:4713   */\n      dup2\n        /* \"#utility.yul\":4698:4702   */\n      dup2\n        /* \"#utility.yul\":4694:4714   */\n      sub\n        /* \"#utility.yul\":4690:4691   */\n      0x00\n        /* \"#utility.yul\":4679:4688   */\n      dup4\n        /* \"#utility.yul\":4675:4692   */\n      add\n        /* \"#utility.yul\":4668:4715   */\n      mstore\n        /* \"#utility.yul\":4732:4863   */\n      tag_189\n        /* \"#utility.yul\":4858:4862   */\n      dup2\n        /* \"#utility.yul\":4732:4863   */\n      tag_155\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":4724:4863   */\n      swap1\n      pop\n        /* \"#utility.yul\":4451:4870   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4876:5295   */\n    tag_100:\n        /* \"#utility.yul\":5042:5046   */\n      0x00\n        /* \"#utility.yul\":5080:5082   */\n      0x20\n        /* \"#utility.yul\":5069:5078   */\n      dup3\n        /* \"#utility.yul\":5065:5083   */\n      add\n        /* \"#utility.yul\":5057:5083   */\n      swap1\n      pop\n        /* \"#utility.yul\":5129:5138   */\n      dup2\n        /* \"#utility.yul\":5123:5127   */\n      dup2\n        /* \"#utility.yul\":5119:5139   */\n      sub\n        /* \"#utility.yul\":5115:5116   */\n      0x00\n        /* \"#utility.yul\":5104:5113   */\n      dup4\n        /* \"#utility.yul\":5100:5117   */\n      add\n        /* \"#utility.yul\":5093:5140   */\n      mstore\n        /* \"#utility.yul\":5157:5288   */\n      tag_191\n        /* \"#utility.yul\":5283:5287   */\n      dup2\n        /* \"#utility.yul\":5157:5288   */\n      tag_160\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":5149:5288   */\n      swap1\n      pop\n        /* \"#utility.yul\":4876:5295   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5301:5720   */\n    tag_106:\n        /* \"#utility.yul\":5467:5471   */\n      0x00\n        /* \"#utility.yul\":5505:5507   */\n      0x20\n        /* \"#utility.yul\":5494:5503   */\n      dup3\n        /* \"#utility.yul\":5490:5508   */\n      add\n        /* \"#utility.yul\":5482:5508   */\n      swap1\n      pop\n        /* \"#utility.yul\":5554:5563   */\n      dup2\n        /* \"#utility.yul\":5548:5552   */\n      dup2\n        /* \"#utility.yul\":5544:5564   */\n      sub\n        /* \"#utility.yul\":5540:5541   */\n      0x00\n        /* \"#utility.yul\":5529:5538   */\n      dup4\n        /* \"#utility.yul\":5525:5542   */\n      add\n        /* \"#utility.yul\":5518:5565   */\n      mstore\n        /* \"#utility.yul\":5582:5713   */\n      tag_193\n        /* \"#utility.yul\":5708:5712   */\n      dup2\n        /* \"#utility.yul\":5582:5713   */\n      tag_165\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":5574:5713   */\n      swap1\n      pop\n        /* \"#utility.yul\":5301:5720   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5726:6145   */\n    tag_84:\n        /* \"#utility.yul\":5892:5896   */\n      0x00\n        /* \"#utility.yul\":5930:5932   */\n      0x20\n        /* \"#utility.yul\":5919:5928   */\n      dup3\n        /* \"#utility.yul\":5915:5933   */\n      add\n        /* \"#utility.yul\":5907:5933   */\n      swap1\n      pop\n        /* \"#utility.yul\":5979:5988   */\n      dup2\n        /* \"#utility.yul\":5973:5977   */\n      dup2\n        /* \"#utility.yul\":5969:5989   */\n      sub\n        /* \"#utility.yul\":5965:5966   */\n      0x00\n        /* \"#utility.yul\":5954:5963   */\n      dup4\n        /* \"#utility.yul\":5950:5967   */\n      add\n        /* \"#utility.yul\":5943:5990   */\n      mstore\n        /* \"#utility.yul\":6007:6138   */\n      tag_195\n        /* \"#utility.yul\":6133:6137   */\n      dup2\n        /* \"#utility.yul\":6007:6138   */\n      tag_170\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":5999:6138   */\n      swap1\n      pop\n        /* \"#utility.yul\":5726:6145   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6151:6570   */\n    tag_76:\n        /* \"#utility.yul\":6317:6321   */\n      0x00\n        /* \"#utility.yul\":6355:6357   */\n      0x20\n        /* \"#utility.yul\":6344:6353   */\n      dup3\n        /* \"#utility.yul\":6340:6358   */\n      add\n        /* \"#utility.yul\":6332:6358   */\n      swap1\n      pop\n        /* \"#utility.yul\":6404:6413   */\n      dup2\n        /* \"#utility.yul\":6398:6402   */\n      dup2\n        /* \"#utility.yul\":6394:6414   */\n      sub\n        /* \"#utility.yul\":6390:6391   */\n      0x00\n        /* \"#utility.yul\":6379:6388   */\n      dup4\n        /* \"#utility.yul\":6375:6392   */\n      add\n        /* \"#utility.yul\":6368:6415   */\n      mstore\n        /* \"#utility.yul\":6432:6563   */\n      tag_197\n        /* \"#utility.yul\":6558:6562   */\n      dup2\n        /* \"#utility.yul\":6432:6563   */\n      tag_175\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":6424:6563   */\n      swap1\n      pop\n        /* \"#utility.yul\":6151:6570   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6576:6798   */\n    tag_28:\n        /* \"#utility.yul\":6669:6673   */\n      0x00\n        /* \"#utility.yul\":6707:6709   */\n      0x20\n        /* \"#utility.yul\":6696:6705   */\n      dup3\n        /* \"#utility.yul\":6692:6710   */\n      add\n        /* \"#utility.yul\":6684:6710   */\n      swap1\n      pop\n        /* \"#utility.yul\":6720:6791   */\n      tag_199\n        /* \"#utility.yul\":6788:6789   */\n      0x00\n        /* \"#utility.yul\":6777:6786   */\n      dup4\n        /* \"#utility.yul\":6773:6790   */\n      add\n        /* \"#utility.yul\":6764:6770   */\n      dup5\n        /* \"#utility.yul\":6720:6791   */\n      tag_180\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":6576:6798   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6885:6984   */\n    tag_148:\n        /* \"#utility.yul\":6937:6943   */\n      0x00\n        /* \"#utility.yul\":6971:6976   */\n      dup2\n        /* \"#utility.yul\":6965:6977   */\n      mload\n        /* \"#utility.yul\":6955:6977   */\n      swap1\n      pop\n        /* \"#utility.yul\":6885:6984   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6990:7159   */\n    tag_150:\n        /* \"#utility.yul\":7074:7085   */\n      0x00\n        /* \"#utility.yul\":7108:7114   */\n      dup3\n        /* \"#utility.yul\":7103:7106   */\n      dup3\n        /* \"#utility.yul\":7096:7115   */\n      mstore\n        /* \"#utility.yul\":7148:7152   */\n      0x20\n        /* \"#utility.yul\":7143:7146   */\n      dup3\n        /* \"#utility.yul\":7139:7153   */\n      add\n        /* \"#utility.yul\":7124:7153   */\n      swap1\n      pop\n        /* \"#utility.yul\":6990:7159   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7165:7470   */\n    tag_114:\n        /* \"#utility.yul\":7205:7208   */\n      0x00\n        /* \"#utility.yul\":7224:7244   */\n      tag_205\n        /* \"#utility.yul\":7242:7243   */\n      dup3\n        /* \"#utility.yul\":7224:7244   */\n      tag_183\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":7219:7244   */\n      swap2\n      pop\n        /* \"#utility.yul\":7258:7278   */\n      tag_206\n        /* \"#utility.yul\":7276:7277   */\n      dup4\n        /* \"#utility.yul\":7258:7278   */\n      tag_183\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":7253:7278   */\n      swap3\n      pop\n        /* \"#utility.yul\":7412:7413   */\n      dup3\n        /* \"#utility.yul\":7344:7410   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":7340:7414   */\n      sub\n        /* \"#utility.yul\":7337:7338   */\n      dup3\n        /* \"#utility.yul\":7334:7415   */\n      gt\n        /* \"#utility.yul\":7331:7438   */\n      iszero\n      tag_207\n      jumpi\n        /* \"#utility.yul\":7418:7436   */\n      tag_208\n      tag_209\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":7331:7438   */\n    tag_207:\n        /* \"#utility.yul\":7462:7463   */\n      dup3\n        /* \"#utility.yul\":7459:7460   */\n      dup3\n        /* \"#utility.yul\":7455:7464   */\n      add\n        /* \"#utility.yul\":7448:7464   */\n      swap1\n      pop\n        /* \"#utility.yul\":7165:7470   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7476:7824   */\n    tag_102:\n        /* \"#utility.yul\":7516:7523   */\n      0x00\n        /* \"#utility.yul\":7539:7559   */\n      tag_211\n        /* \"#utility.yul\":7557:7558   */\n      dup3\n        /* \"#utility.yul\":7539:7559   */\n      tag_183\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":7534:7559   */\n      swap2\n      pop\n        /* \"#utility.yul\":7573:7593   */\n      tag_212\n        /* \"#utility.yul\":7591:7592   */\n      dup4\n        /* \"#utility.yul\":7573:7593   */\n      tag_183\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":7568:7593   */\n      swap3\n      pop\n        /* \"#utility.yul\":7761:7762   */\n      dup2\n        /* \"#utility.yul\":7693:7759   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":7689:7763   */\n      div\n        /* \"#utility.yul\":7686:7687   */\n      dup4\n        /* \"#utility.yul\":7683:7764   */\n      gt\n        /* \"#utility.yul\":7678:7679   */\n      dup3\n        /* \"#utility.yul\":7671:7680   */\n      iszero\n        /* \"#utility.yul\":7664:7681   */\n      iszero\n        /* \"#utility.yul\":7660:7765   */\n      and\n        /* \"#utility.yul\":7657:7788   */\n      iszero\n      tag_213\n      jumpi\n        /* \"#utility.yul\":7768:7786   */\n      tag_214\n      tag_209\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":7657:7788   */\n    tag_213:\n        /* \"#utility.yul\":7816:7817   */\n      dup3\n        /* \"#utility.yul\":7813:7814   */\n      dup3\n        /* \"#utility.yul\":7809:7818   */\n      mul\n        /* \"#utility.yul\":7798:7818   */\n      swap1\n      pop\n        /* \"#utility.yul\":7476:7824   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7830:8021   */\n    tag_117:\n        /* \"#utility.yul\":7870:7874   */\n      0x00\n        /* \"#utility.yul\":7890:7910   */\n      tag_216\n        /* \"#utility.yul\":7908:7909   */\n      dup3\n        /* \"#utility.yul\":7890:7910   */\n      tag_183\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":7885:7910   */\n      swap2\n      pop\n        /* \"#utility.yul\":7924:7944   */\n      tag_217\n        /* \"#utility.yul\":7942:7943   */\n      dup4\n        /* \"#utility.yul\":7924:7944   */\n      tag_183\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":7919:7944   */\n      swap3\n      pop\n        /* \"#utility.yul\":7963:7964   */\n      dup3\n        /* \"#utility.yul\":7960:7961   */\n      dup3\n        /* \"#utility.yul\":7957:7965   */\n      lt\n        /* \"#utility.yul\":7954:7988   */\n      iszero\n      tag_218\n      jumpi\n        /* \"#utility.yul\":7968:7986   */\n      tag_219\n      tag_209\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":7954:7988   */\n    tag_218:\n        /* \"#utility.yul\":8013:8014   */\n      dup3\n        /* \"#utility.yul\":8010:8011   */\n      dup3\n        /* \"#utility.yul\":8006:8015   */\n      sub\n        /* \"#utility.yul\":7998:8015   */\n      swap1\n      pop\n        /* \"#utility.yul\":7830:8021   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8027:8123   */\n    tag_220:\n        /* \"#utility.yul\":8064:8071   */\n      0x00\n        /* \"#utility.yul\":8093:8117   */\n      tag_222\n        /* \"#utility.yul\":8111:8116   */\n      dup3\n        /* \"#utility.yul\":8093:8117   */\n      tag_223\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":8082:8117   */\n      swap1\n      pop\n        /* \"#utility.yul\":8027:8123   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8129:8219   */\n    tag_144:\n        /* \"#utility.yul\":8163:8170   */\n      0x00\n        /* \"#utility.yul\":8206:8211   */\n      dup2\n        /* \"#utility.yul\":8199:8212   */\n      iszero\n        /* \"#utility.yul\":8192:8213   */\n      iszero\n        /* \"#utility.yul\":8181:8213   */\n      swap1\n      pop\n        /* \"#utility.yul\":8129:8219   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8225:8351   */\n    tag_223:\n        /* \"#utility.yul\":8262:8269   */\n      0x00\n        /* \"#utility.yul\":8302:8344   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":8295:8300   */\n      dup3\n        /* \"#utility.yul\":8291:8345   */\n      and\n        /* \"#utility.yul\":8280:8345   */\n      swap1\n      pop\n        /* \"#utility.yul\":8225:8351   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8357:8434   */\n    tag_183:\n        /* \"#utility.yul\":8394:8401   */\n      0x00\n        /* \"#utility.yul\":8423:8428   */\n      dup2\n        /* \"#utility.yul\":8412:8428   */\n      swap1\n      pop\n        /* \"#utility.yul\":8357:8434   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8440:8747   */\n    tag_152:\n        /* \"#utility.yul\":8508:8509   */\n      0x00\n        /* \"#utility.yul\":8518:8631   */\n    tag_228:\n        /* \"#utility.yul\":8532:8538   */\n      dup4\n        /* \"#utility.yul\":8529:8530   */\n      dup2\n        /* \"#utility.yul\":8526:8539   */\n      lt\n        /* \"#utility.yul\":8518:8631   */\n      iszero\n      tag_230\n      jumpi\n        /* \"#utility.yul\":8617:8618   */\n      dup1\n        /* \"#utility.yul\":8612:8615   */\n      dup3\n        /* \"#utility.yul\":8608:8619   */\n      add\n        /* \"#utility.yul\":8602:8620   */\n      mload\n        /* \"#utility.yul\":8598:8599   */\n      dup2\n        /* \"#utility.yul\":8593:8596   */\n      dup5\n        /* \"#utility.yul\":8589:8600   */\n      add\n        /* \"#utility.yul\":8582:8621   */\n      mstore\n        /* \"#utility.yul\":8554:8556   */\n      0x20\n        /* \"#utility.yul\":8551:8552   */\n      dup2\n        /* \"#utility.yul\":8547:8557   */\n      add\n        /* \"#utility.yul\":8542:8557   */\n      swap1\n      pop\n        /* \"#utility.yul\":8518:8631   */\n      jump(tag_228)\n    tag_230:\n        /* \"#utility.yul\":8649:8655   */\n      dup4\n        /* \"#utility.yul\":8646:8647   */\n      dup2\n        /* \"#utility.yul\":8643:8656   */\n      gt\n        /* \"#utility.yul\":8640:8741   */\n      iszero\n      tag_231\n      jumpi\n        /* \"#utility.yul\":8729:8730   */\n      0x00\n        /* \"#utility.yul\":8720:8726   */\n      dup5\n        /* \"#utility.yul\":8715:8718   */\n      dup5\n        /* \"#utility.yul\":8711:8727   */\n      add\n        /* \"#utility.yul\":8704:8731   */\n      mstore\n        /* \"#utility.yul\":8640:8741   */\n    tag_231:\n        /* \"#utility.yul\":8489:8747   */\n      pop\n        /* \"#utility.yul\":8440:8747   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8753:9073   */\n    tag_61:\n        /* \"#utility.yul\":8797:8803   */\n      0x00\n        /* \"#utility.yul\":8834:8835   */\n      0x02\n        /* \"#utility.yul\":8828:8832   */\n      dup3\n        /* \"#utility.yul\":8824:8836   */\n      div\n        /* \"#utility.yul\":8814:8836   */\n      swap1\n      pop\n        /* \"#utility.yul\":8881:8882   */\n      0x01\n        /* \"#utility.yul\":8875:8879   */\n      dup3\n        /* \"#utility.yul\":8871:8883   */\n      and\n        /* \"#utility.yul\":8902:8920   */\n      dup1\n        /* \"#utility.yul\":8892:8973   */\n      tag_233\n      jumpi\n        /* \"#utility.yul\":8958:8962   */\n      0x7f\n        /* \"#utility.yul\":8950:8956   */\n      dup3\n        /* \"#utility.yul\":8946:8963   */\n      and\n        /* \"#utility.yul\":8936:8963   */\n      swap2\n      pop\n        /* \"#utility.yul\":8892:8973   */\n    tag_233:\n        /* \"#utility.yul\":9020:9022   */\n      0x20\n        /* \"#utility.yul\":9012:9018   */\n      dup3\n        /* \"#utility.yul\":9009:9023   */\n      lt\n        /* \"#utility.yul\":8989:9007   */\n      dup2\n        /* \"#utility.yul\":8986:9024   */\n      eq\n        /* \"#utility.yul\":8983:9067   */\n      iszero\n      tag_234\n      jumpi\n        /* \"#utility.yul\":9039:9057   */\n      tag_235\n      tag_236\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":8983:9067   */\n    tag_234:\n        /* \"#utility.yul\":8804:9073   */\n      pop\n        /* \"#utility.yul\":8753:9073   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9079:9259   */\n    tag_209:\n        /* \"#utility.yul\":9127:9204   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9124:9125   */\n      0x00\n        /* \"#utility.yul\":9117:9205   */\n      mstore\n        /* \"#utility.yul\":9224:9228   */\n      0x11\n        /* \"#utility.yul\":9221:9222   */\n      0x04\n        /* \"#utility.yul\":9214:9229   */\n      mstore\n        /* \"#utility.yul\":9248:9252   */\n      0x24\n        /* \"#utility.yul\":9245:9246   */\n      0x00\n        /* \"#utility.yul\":9238:9253   */\n      revert\n        /* \"#utility.yul\":9265:9445   */\n    tag_236:\n        /* \"#utility.yul\":9313:9390   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9310:9311   */\n      0x00\n        /* \"#utility.yul\":9303:9391   */\n      mstore\n        /* \"#utility.yul\":9410:9414   */\n      0x22\n        /* \"#utility.yul\":9407:9408   */\n      0x04\n        /* \"#utility.yul\":9400:9415   */\n      mstore\n        /* \"#utility.yul\":9434:9438   */\n      0x24\n        /* \"#utility.yul\":9431:9432   */\n      0x00\n        /* \"#utility.yul\":9424:9439   */\n      revert\n        /* \"#utility.yul\":9574:9691   */\n    tag_130:\n        /* \"#utility.yul\":9683:9684   */\n      0x00\n        /* \"#utility.yul\":9680:9681   */\n      dup1\n        /* \"#utility.yul\":9673:9685   */\n      revert\n        /* \"#utility.yul\":9697:9799   */\n    tag_154:\n        /* \"#utility.yul\":9738:9744   */\n      0x00\n        /* \"#utility.yul\":9789:9791   */\n      0x1f\n        /* \"#utility.yul\":9785:9792   */\n      not\n        /* \"#utility.yul\":9780:9782   */\n      0x1f\n        /* \"#utility.yul\":9773:9778   */\n      dup4\n        /* \"#utility.yul\":9769:9783   */\n      add\n        /* \"#utility.yul\":9765:9793   */\n      and\n        /* \"#utility.yul\":9755:9793   */\n      swap1\n      pop\n        /* \"#utility.yul\":9697:9799   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9805:10026   */\n    tag_159:\n        /* \"#utility.yul\":9945:9979   */\n      0x596f7520646f206e6f7420686176652073756666696369656e742062616c616e\n        /* \"#utility.yul\":9941:9942   */\n      0x00\n        /* \"#utility.yul\":9933:9939   */\n      dup3\n        /* \"#utility.yul\":9929:9943   */\n      add\n        /* \"#utility.yul\":9922:9980   */\n      mstore\n        /* \"#utility.yul\":10014:10018   */\n      0x6365000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10009:10011   */\n      0x20\n        /* \"#utility.yul\":10001:10007   */\n      dup3\n        /* \"#utility.yul\":9997:10012   */\n      add\n        /* \"#utility.yul\":9990:10019   */\n      mstore\n        /* \"#utility.yul\":9805:10026   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10032:10202   */\n    tag_164:\n        /* \"#utility.yul\":10172:10194   */\n      0x496e73756666696369656e742062616c616e6365000000000000000000000000\n        /* \"#utility.yul\":10168:10169   */\n      0x00\n        /* \"#utility.yul\":10160:10166   */\n      dup3\n        /* \"#utility.yul\":10156:10170   */\n      add\n        /* \"#utility.yul\":10149:10195   */\n      mstore\n        /* \"#utility.yul\":10032:10202   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10208:10390   */\n    tag_169:\n        /* \"#utility.yul\":10348:10382   */\n      0x436f6e74726163742062616c616e636520697320696e73756666696369656e74\n        /* \"#utility.yul\":10344:10345   */\n      0x00\n        /* \"#utility.yul\":10336:10342   */\n      dup3\n        /* \"#utility.yul\":10332:10346   */\n      add\n        /* \"#utility.yul\":10325:10383   */\n      mstore\n        /* \"#utility.yul\":10208:10390   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10396:10622   */\n    tag_174:\n        /* \"#utility.yul\":10536:10570   */\n      0x4f6e6c7920746865206f776e65722063616e2064657374726f79207468652063\n        /* \"#utility.yul\":10532:10533   */\n      0x00\n        /* \"#utility.yul\":10524:10530   */\n      dup3\n        /* \"#utility.yul\":10520:10534   */\n      add\n        /* \"#utility.yul\":10513:10571   */\n      mstore\n        /* \"#utility.yul\":10605:10614   */\n      0x6f6e747261637400000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10600:10602   */\n      0x20\n        /* \"#utility.yul\":10592:10598   */\n      dup3\n        /* \"#utility.yul\":10588:10603   */\n      add\n        /* \"#utility.yul\":10581:10615   */\n      mstore\n        /* \"#utility.yul\":10396:10622   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10628:10849   */\n    tag_179:\n        /* \"#utility.yul\":10768:10802   */\n      0x4f6e6c7920746865206f776e65722063616e206d696e74206e657720746f6b65\n        /* \"#utility.yul\":10764:10765   */\n      0x00\n        /* \"#utility.yul\":10756:10762   */\n      dup3\n        /* \"#utility.yul\":10752:10766   */\n      add\n        /* \"#utility.yul\":10745:10803   */\n      mstore\n        /* \"#utility.yul\":10837:10841   */\n      0x6e73000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10832:10834   */\n      0x20\n        /* \"#utility.yul\":10824:10830   */\n      dup3\n        /* \"#utility.yul\":10820:10835   */\n      add\n        /* \"#utility.yul\":10813:10842   */\n      mstore\n        /* \"#utility.yul\":10628:10849   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10855:10977   */\n    tag_122:\n        /* \"#utility.yul\":10928:10952   */\n      tag_249\n        /* \"#utility.yul\":10946:10951   */\n      dup2\n        /* \"#utility.yul\":10928:10952   */\n      tag_220\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":10921:10926   */\n      dup2\n        /* \"#utility.yul\":10918:10953   */\n      eq\n        /* \"#utility.yul\":10908:10971   */\n      tag_250\n      jumpi\n        /* \"#utility.yul\":10967:10968   */\n      0x00\n        /* \"#utility.yul\":10964:10965   */\n      dup1\n        /* \"#utility.yul\":10957:10969   */\n      revert\n        /* \"#utility.yul\":10908:10971   */\n    tag_250:\n        /* \"#utility.yul\":10855:10977   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10983:11105   */\n    tag_126:\n        /* \"#utility.yul\":11056:11080   */\n      tag_252\n        /* \"#utility.yul\":11074:11079   */\n      dup2\n        /* \"#utility.yul\":11056:11080   */\n      tag_183\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":11049:11054   */\n      dup2\n        /* \"#utility.yul\":11046:11081   */\n      eq\n        /* \"#utility.yul\":11036:11099   */\n      tag_253\n      jumpi\n        /* \"#utility.yul\":11095:11096   */\n      0x00\n        /* \"#utility.yul\":11092:11093   */\n      dup1\n        /* \"#utility.yul\":11085:11097   */\n      revert\n        /* \"#utility.yul\":11036:11099   */\n    tag_253:\n        /* \"#utility.yul\":10983:11105   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122095a4d0e53d2d3dc54d939c2ffe5db2236a58f79fa5301625a504a1be7276b9b264736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_400": {
									"entryPoint": null,
									"id": 400,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 777,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 794,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 823,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 833,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 887,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:951:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "72:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "89:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "112:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "94:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "94:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "82:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "82:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "60:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "67:3:2",
														"type": ""
													}
												],
												"src": "7:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "229:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "239:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "251:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "262:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "247:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "247:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "239:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "319:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "332:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "343:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "328:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "328:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "275:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "275:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "275:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "201:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "213:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "224:4:2",
														"type": ""
													}
												],
												"src": "131:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "404:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "414:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "425:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "414:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "386:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "396:7:2",
														"type": ""
													}
												],
												"src": "359:77:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "493:269:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "503:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "517:4:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "523:1:2",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "513:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "513:12:2"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "503:6:2"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "534:38:2",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "564:4:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "570:1:2",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "560:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "560:12:2"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "538:18:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "611:51:2",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "625:27:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "639:6:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "647:4:2",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "635:3:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "635:17:2"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "625:6:2"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "591:18:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "584:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "584:26:2"
															},
															"nodeType": "YulIf",
															"src": "581:81:2"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "714:42:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "728:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "728:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "728:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "678:18:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "701:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "709:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "698:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "698:14:2"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "675:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "675:38:2"
															},
															"nodeType": "YulIf",
															"src": "672:84:2"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "477:4:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "486:6:2",
														"type": ""
													}
												],
												"src": "442:320:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "796:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "813:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "816:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "806:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "806:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "806:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "910:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "913:4:2",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "903:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "903:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "903:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "934:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "937:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "927:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "927:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "927:15:2"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "768:180:2"
											}
										]
									},
									"contents": "{\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506040518060400160405280600c81526020017f437573746f6d20546f6b656e0000000000000000000000000000000000000000815250600190805190602001906200005f92919062000259565b506040518060400160405280600281526020017f435400000000000000000000000000000000000000000000000000000000000081525060029080519060200190620000ad92919062000259565b50610258600381905550336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600660008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550620f4240600481905550600454600560008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d41213968856004546040516200024b91906200031a565b60405180910390a2620003a6565b828054620002679062000341565b90600052602060002090601f0160209004810192826200028b5760008555620002d7565b82601f10620002a657805160ff1916838001178555620002d7565b82800160010185558215620002d7579182015b82811115620002d6578251825591602001919060010190620002b9565b5b509050620002e69190620002ea565b5090565b5b8082111562000305576000816000905550600101620002eb565b5090565b620003148162000337565b82525050565b600060208201905062000331600083018462000309565b92915050565b6000819050919050565b600060028204905060018216806200035a57607f821691505b6020821081141562000371576200037062000377565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b61114f80620003b66000396000f3fe60806040526004361061008a5760003560e01c806343d726d61161005957806343d726d61461014b57806370a082311461016257806398d5fdca1461019f578063a9059cbb146101ca578063e4849b32146102075761008b565b8063150704011461008d57806317d7de7c146100b857806318160ddd146100e357806340c10f191461010e5761008b565b5b005b34801561009957600080fd5b506100a2610237565b6040516100af9190610cae565b60405180910390f35b3480156100c457600080fd5b506100cd6102c9565b6040516100da9190610cae565b60405180910390f35b3480156100ef57600080fd5b506100f861035b565b6040516101059190610d70565b60405180910390f35b34801561011a57600080fd5b5061013560048036038101906101309190610b20565b610365565b6040516101429190610c93565b60405180910390f35b34801561015757600080fd5b50610160610502565b005b34801561016e57600080fd5b5061018960048036038101906101849190610af3565b6105ce565b6040516101969190610d70565b60405180910390f35b3480156101ab57600080fd5b506101b4610617565b6040516101c19190610d70565b60405180910390f35b3480156101d657600080fd5b506101f160048036038101906101ec9190610b20565b610621565b6040516101fe9190610c93565b60405180910390f35b610221600480360381019061021c9190610b60565b610850565b60405161022e9190610c93565b60405180910390f35b60606002805461024690610f06565b80601f016020809104026020016040519081016040528092919081815260200182805461027290610f06565b80156102bf5780601f10610294576101008083540402835291602001916102bf565b820191906000526020600020905b8154815290600101906020018083116102a257829003601f168201915b5050505050905090565b6060600180546102d890610f06565b80601f016020809104026020016040519081016040528092919081815260200182805461030490610f06565b80156103515780601f1061032657610100808354040283529160200191610351565b820191906000526020600020905b81548152906001019060200180831161033457829003601f168201915b5050505050905090565b6000600454905090565b600060011515600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515146103fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103f190610d50565b60405180910390fd5b61040f82600454610a9d90919063ffffffff16565b60048190555061046782600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610a9d90919063ffffffff16565b600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff167f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885836040516104f09190610d70565b60405180910390a26001905092915050565b60011515600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514610595576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058c90610d30565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b6000600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600354905090565b60008061067683600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610ab390919063ffffffff16565b10156106b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ae90610cd0565b60405180910390fd5b61070982600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610ab390919063ffffffff16565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061079e82600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610a9d90919063ffffffff16565b600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161083e9190610d70565b60405180910390a36001905092915050565b6000806108a583600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610ab390919063ffffffff16565b10156108e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108dd90610cf0565b60405180910390fd5b6000610258836108f69190610dfd565b9050600061090d8247610ab390919063ffffffff16565b101561094e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161094590610d10565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610994573d6000803e3d6000fd5b506109e783600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610ab390919063ffffffff16565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610a3f83600454610ab390919063ffffffff16565b6004819055503373ffffffffffffffffffffffffffffffffffffffff167f5e5e995ce3133561afceaa51a9a154d5db228cd7525d34df5185582c18d3df0984604051610a8b9190610d70565b60405180910390a26001915050919050565b60008183610aab9190610da7565b905092915050565b60008183610ac19190610e57565b905092915050565b600081359050610ad8816110eb565b92915050565b600081359050610aed81611102565b92915050565b600060208284031215610b0957610b08610f96565b5b6000610b1784828501610ac9565b91505092915050565b60008060408385031215610b3757610b36610f96565b5b6000610b4585828601610ac9565b9250506020610b5685828601610ade565b9150509250929050565b600060208284031215610b7657610b75610f96565b5b6000610b8484828501610ade565b91505092915050565b610b9681610e9d565b82525050565b6000610ba782610d8b565b610bb18185610d96565b9350610bc1818560208601610ed3565b610bca81610f9b565b840191505092915050565b6000610be2602283610d96565b9150610bed82610fac565b604082019050919050565b6000610c05601483610d96565b9150610c1082610ffb565b602082019050919050565b6000610c28602083610d96565b9150610c3382611024565b602082019050919050565b6000610c4b602783610d96565b9150610c568261104d565b604082019050919050565b6000610c6e602283610d96565b9150610c798261109c565b604082019050919050565b610c8d81610ec9565b82525050565b6000602082019050610ca86000830184610b8d565b92915050565b60006020820190508181036000830152610cc88184610b9c565b905092915050565b60006020820190508181036000830152610ce981610bd5565b9050919050565b60006020820190508181036000830152610d0981610bf8565b9050919050565b60006020820190508181036000830152610d2981610c1b565b9050919050565b60006020820190508181036000830152610d4981610c3e565b9050919050565b60006020820190508181036000830152610d6981610c61565b9050919050565b6000602082019050610d856000830184610c84565b92915050565b600081519050919050565b600082825260208201905092915050565b6000610db282610ec9565b9150610dbd83610ec9565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610df257610df1610f38565b5b828201905092915050565b6000610e0882610ec9565b9150610e1383610ec9565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e4c57610e4b610f38565b5b828202905092915050565b6000610e6282610ec9565b9150610e6d83610ec9565b925082821015610e8057610e7f610f38565b5b828203905092915050565b6000610e9682610ea9565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b83811015610ef1578082015181840152602081019050610ed6565b83811115610f00576000848401525b50505050565b60006002820490506001821680610f1e57607f821691505b60208210811415610f3257610f31610f67565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f596f7520646f206e6f7420686176652073756666696369656e742062616c616e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b7f496e73756666696369656e742062616c616e6365000000000000000000000000600082015250565b7f436f6e74726163742062616c616e636520697320696e73756666696369656e74600082015250565b7f4f6e6c7920746865206f776e65722063616e2064657374726f7920746865206360008201527f6f6e747261637400000000000000000000000000000000000000000000000000602082015250565b7f4f6e6c7920746865206f776e65722063616e206d696e74206e657720746f6b6560008201527f6e73000000000000000000000000000000000000000000000000000000000000602082015250565b6110f481610e8b565b81146110ff57600080fd5b50565b61110b81610ec9565b811461111657600080fd5b5056fea264697066735822122095a4d0e53d2d3dc54d939c2ffe5db2236a58f79fa5301625a504a1be7276b9b264736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x437573746F6D20546F6B656E0000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x1 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x5F SWAP3 SWAP2 SWAP1 PUSH3 0x259 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4354000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0xAD SWAP3 SWAP2 SWAP1 PUSH3 0x259 JUMP JUMPDEST POP PUSH2 0x258 PUSH1 0x3 DUP2 SWAP1 SSTORE POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x6 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH3 0xF4240 PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH1 0x4 SLOAD PUSH1 0x5 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF6798A560793A54C3BCFE86A93CDE1E73087D944C0EA20544137D4121396885 PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH3 0x24B SWAP2 SWAP1 PUSH3 0x31A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH3 0x3A6 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x267 SWAP1 PUSH3 0x341 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x28B JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x2D7 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x2A6 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x2D7 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x2D7 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x2D6 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x2B9 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x2E6 SWAP2 SWAP1 PUSH3 0x2EA JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x305 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x2EB JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH3 0x314 DUP2 PUSH3 0x337 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x331 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x309 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x35A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x371 JUMPI PUSH3 0x370 PUSH3 0x377 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x114F DUP1 PUSH3 0x3B6 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x8A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x43D726D6 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x43D726D6 EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0x98D5FDCA EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1CA JUMPI DUP1 PUSH4 0xE4849B32 EQ PUSH2 0x207 JUMPI PUSH2 0x8B JUMP JUMPDEST DUP1 PUSH4 0x15070401 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x17D7DE7C EQ PUSH2 0xB8 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xE3 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x10E JUMPI PUSH2 0x8B JUMP JUMPDEST JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x99 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA2 PUSH2 0x237 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAF SWAP2 SWAP1 PUSH2 0xCAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xCD PUSH2 0x2C9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDA SWAP2 SWAP1 PUSH2 0xCAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF8 PUSH2 0x35B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x105 SWAP2 SWAP1 PUSH2 0xD70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x135 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x130 SWAP2 SWAP1 PUSH2 0xB20 JUMP JUMPDEST PUSH2 0x365 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x142 SWAP2 SWAP1 PUSH2 0xC93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x157 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x160 PUSH2 0x502 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x189 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x184 SWAP2 SWAP1 PUSH2 0xAF3 JUMP JUMPDEST PUSH2 0x5CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x196 SWAP2 SWAP1 PUSH2 0xD70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B4 PUSH2 0x617 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C1 SWAP2 SWAP1 PUSH2 0xD70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EC SWAP2 SWAP1 PUSH2 0xB20 JUMP JUMPDEST PUSH2 0x621 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FE SWAP2 SWAP1 PUSH2 0xC93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x221 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21C SWAP2 SWAP1 PUSH2 0xB60 JUMP JUMPDEST PUSH2 0x850 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22E SWAP2 SWAP1 PUSH2 0xC93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x246 SWAP1 PUSH2 0xF06 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x272 SWAP1 PUSH2 0xF06 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2BF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x294 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2BF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2A2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x2D8 SWAP1 PUSH2 0xF06 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x304 SWAP1 PUSH2 0xF06 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x351 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x326 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x351 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x334 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 ISZERO ISZERO PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x3FA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F1 SWAP1 PUSH2 0xD50 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x40F DUP3 PUSH1 0x4 SLOAD PUSH2 0xA9D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH2 0x467 DUP3 PUSH1 0x5 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xA9D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF6798A560793A54C3BCFE86A93CDE1E73087D944C0EA20544137D4121396885 DUP4 PUSH1 0x40 MLOAD PUSH2 0x4F0 SWAP2 SWAP1 PUSH2 0xD70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x595 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58C SWAP1 PUSH2 0xD30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x676 DUP4 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xAB3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST LT ISZERO PUSH2 0x6B7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AE SWAP1 PUSH2 0xCD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x709 DUP3 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xAB3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x79E DUP3 PUSH1 0x5 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xA9D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x83E SWAP2 SWAP1 PUSH2 0xD70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x8A5 DUP4 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xAB3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST LT ISZERO PUSH2 0x8E6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8DD SWAP1 PUSH2 0xCF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x258 DUP4 PUSH2 0x8F6 SWAP2 SWAP1 PUSH2 0xDFD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x90D DUP3 SELFBALANCE PUSH2 0xAB3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST LT ISZERO PUSH2 0x94E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x945 SWAP1 PUSH2 0xD10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x994 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x9E7 DUP4 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xAB3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xA3F DUP4 PUSH1 0x4 SLOAD PUSH2 0xAB3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5E5E995CE3133561AFCEAA51A9A154D5DB228CD7525D34DF5185582C18D3DF09 DUP5 PUSH1 0x40 MLOAD PUSH2 0xA8B SWAP2 SWAP1 PUSH2 0xD70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xAAB SWAP2 SWAP1 PUSH2 0xDA7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xAC1 SWAP2 SWAP1 PUSH2 0xE57 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xAD8 DUP2 PUSH2 0x10EB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xAED DUP2 PUSH2 0x1102 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB09 JUMPI PUSH2 0xB08 PUSH2 0xF96 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB17 DUP5 DUP3 DUP6 ADD PUSH2 0xAC9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB37 JUMPI PUSH2 0xB36 PUSH2 0xF96 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB45 DUP6 DUP3 DUP7 ADD PUSH2 0xAC9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xB56 DUP6 DUP3 DUP7 ADD PUSH2 0xADE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB76 JUMPI PUSH2 0xB75 PUSH2 0xF96 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB84 DUP5 DUP3 DUP6 ADD PUSH2 0xADE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB96 DUP2 PUSH2 0xE9D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBA7 DUP3 PUSH2 0xD8B JUMP JUMPDEST PUSH2 0xBB1 DUP2 DUP6 PUSH2 0xD96 JUMP JUMPDEST SWAP4 POP PUSH2 0xBC1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xED3 JUMP JUMPDEST PUSH2 0xBCA DUP2 PUSH2 0xF9B JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBE2 PUSH1 0x22 DUP4 PUSH2 0xD96 JUMP JUMPDEST SWAP2 POP PUSH2 0xBED DUP3 PUSH2 0xFAC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC05 PUSH1 0x14 DUP4 PUSH2 0xD96 JUMP JUMPDEST SWAP2 POP PUSH2 0xC10 DUP3 PUSH2 0xFFB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC28 PUSH1 0x20 DUP4 PUSH2 0xD96 JUMP JUMPDEST SWAP2 POP PUSH2 0xC33 DUP3 PUSH2 0x1024 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC4B PUSH1 0x27 DUP4 PUSH2 0xD96 JUMP JUMPDEST SWAP2 POP PUSH2 0xC56 DUP3 PUSH2 0x104D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC6E PUSH1 0x22 DUP4 PUSH2 0xD96 JUMP JUMPDEST SWAP2 POP PUSH2 0xC79 DUP3 PUSH2 0x109C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC8D DUP2 PUSH2 0xEC9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCA8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB8D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xCC8 DUP2 DUP5 PUSH2 0xB9C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xCE9 DUP2 PUSH2 0xBD5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD09 DUP2 PUSH2 0xBF8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD29 DUP2 PUSH2 0xC1B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD49 DUP2 PUSH2 0xC3E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD69 DUP2 PUSH2 0xC61 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD85 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC84 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDB2 DUP3 PUSH2 0xEC9 JUMP JUMPDEST SWAP2 POP PUSH2 0xDBD DUP4 PUSH2 0xEC9 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0xDF2 JUMPI PUSH2 0xDF1 PUSH2 0xF38 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE08 DUP3 PUSH2 0xEC9 JUMP JUMPDEST SWAP2 POP PUSH2 0xE13 DUP4 PUSH2 0xEC9 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xE4C JUMPI PUSH2 0xE4B PUSH2 0xF38 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE62 DUP3 PUSH2 0xEC9 JUMP JUMPDEST SWAP2 POP PUSH2 0xE6D DUP4 PUSH2 0xEC9 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0xE80 JUMPI PUSH2 0xE7F PUSH2 0xF38 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE96 DUP3 PUSH2 0xEA9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xEF1 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xED6 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xF00 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xF1E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xF32 JUMPI PUSH2 0xF31 PUSH2 0xF67 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x596F7520646F206E6F7420686176652073756666696369656E742062616C616E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6365000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x436F6E74726163742062616C616E636520697320696E73756666696369656E74 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F6E6C7920746865206F776E65722063616E2064657374726F79207468652063 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F6E747261637400000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F6E6C7920746865206F776E65722063616E206D696E74206E657720746F6B65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E73000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x10F4 DUP2 PUSH2 0xE8B JUMP JUMPDEST DUP2 EQ PUSH2 0x10FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x110B DUP2 PUSH2 0xEC9 JUMP JUMPDEST DUP2 EQ PUSH2 0x1116 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP6 LOG4 0xD0 0xE5 RETURNDATASIZE 0x2D RETURNDATASIZE 0xC5 0x4D SWAP4 SWAP13 0x2F INVALID 0x5D 0xB2 0x23 PUSH11 0x58F79FA5301625A504A1BE PUSH19 0x76B9B264736F6C634300080700330000000000 ",
							"sourceMap": "92:3727:1:-:0;;;571:508;;;;;;;;;;634:21;;;;;;;;;;;;;;;;;:4;:21;;;;;;;;;;;;:::i;:::-;;666:13;;;;;;;;;;;;;;;;;:6;:13;;;;;;;;;;;;:::i;:::-;;698:3;690:5;:11;;;;802:10;785:5;;:28;;;;;;;;;;;;;;;;;;890:4;877:5;:12;883:5;;;;;;;;;;;877:12;;;;;;;;;;;;;;;;:17;;;;;;;;;;;;;;;;;;984:7;970:11;:21;;;;1020:11;;1002:8;:15;1011:5;;;;;;;;;;;1002:15;;;;;;;;;;;;;;;:29;;;;1052:5;;;;;;;;;;1047:24;;;1059:11;;1047:24;;;;;;:::i;:::-;;;;;;;;92:3727;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:118:2:-;94:24;112:5;94:24;:::i;:::-;89:3;82:37;7:118;;:::o;131:222::-;224:4;262:2;251:9;247:18;239:26;;275:71;343:1;332:9;328:17;319:6;275:71;:::i;:::-;131:222;;;;:::o;359:77::-;396:7;425:5;414:16;;359:77;;;:::o;442:320::-;486:6;523:1;517:4;513:12;503:22;;570:1;564:4;560:12;591:18;581:81;;647:4;639:6;635:17;625:27;;581:81;709:2;701:6;698:14;678:18;675:38;672:84;;;728:18;;:::i;:::-;672:84;493:269;442:320;;;:::o;768:180::-;816:77;813:1;806:88;913:4;910:1;903:15;937:4;934:1;927:15;92:3727:1;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_646": {
									"entryPoint": null,
									"id": 646,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@add_175": {
									"entryPoint": 2717,
									"id": 175,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_546": {
									"entryPoint": 1486,
									"id": 546,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@close_642": {
									"entryPoint": 1282,
									"id": 642,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getName_416": {
									"entryPoint": 713,
									"id": 416,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getPrice_432": {
									"entryPoint": 1559,
									"id": 432,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getSymbol_424": {
									"entryPoint": 567,
									"id": 424,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@mint_534": {
									"entryPoint": 869,
									"id": 534,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@sell_624": {
									"entryPoint": 2128,
									"id": 624,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@sub_190": {
									"entryPoint": 2739,
									"id": 190,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@totalSupply_408": {
									"entryPoint": 859,
									"id": 408,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transfer_488": {
									"entryPoint": 1569,
									"id": 488,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 2761,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2782,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2803,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 2848,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2912,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 2957,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2972,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1cfe29335417d58430919310476bd047bd59346b3a9c3737faf69e319ee4efb7_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3029,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3064,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_63580c8f2f353fc5b6490d467132dc04a523d5a3d9a1206eea4b2a39c4d766db_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3099,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ab5f331f6ba431abbea29f740d3c5ab5f38e45bf730065272d8e796b7e3904ce_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3134,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_dbe0e75e0af93930a70b9625aa5f5d0f68d46c213206bbd891b8ca2b2a563776_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3169,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3204,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 3219,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3246,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1cfe29335417d58430919310476bd047bd59346b3a9c3737faf69e319ee4efb7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3280,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3312,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_63580c8f2f353fc5b6490d467132dc04a523d5a3d9a1206eea4b2a39c4d766db__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3344,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ab5f331f6ba431abbea29f740d3c5ab5f38e45bf730065272d8e796b7e3904ce__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3376,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_dbe0e75e0af93930a70b9625aa5f5d0f68d46c213206bbd891b8ca2b2a563776__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3408,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3440,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 3467,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3478,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3495,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 3581,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 3671,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3723,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3741,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3753,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3785,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 3795,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 3846,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3896,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 3943,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3990,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 3995,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_1cfe29335417d58430919310476bd047bd59346b3a9c3737faf69e319ee4efb7": {
									"entryPoint": 4012,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5": {
									"entryPoint": 4091,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_63580c8f2f353fc5b6490d467132dc04a523d5a3d9a1206eea4b2a39c4d766db": {
									"entryPoint": 4132,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ab5f331f6ba431abbea29f740d3c5ab5f38e45bf730065272d8e796b7e3904ce": {
									"entryPoint": 4173,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_dbe0e75e0af93930a70b9625aa5f5d0f68d46c213206bbd891b8ca2b2a563776": {
									"entryPoint": 4252,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 4331,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4354,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:11108:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:2"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:2",
														"type": ""
													}
												],
												"src": "7:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "204:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "214:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "236:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "223:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "214:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "279:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "252:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "252:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "252:33:2"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "182:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "190:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "198:5:2",
														"type": ""
													}
												],
												"src": "152:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "363:263:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "409:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "411:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "411:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "411:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "384:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "393:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "380:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "380:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "405:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "376:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "376:32:2"
															},
															"nodeType": "YulIf",
															"src": "373:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "502:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "517:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "531:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "521:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "546:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "581:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "592:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "577:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "577:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "601:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "556:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "556:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "546:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "333:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "344:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "356:6:2",
														"type": ""
													}
												],
												"src": "297:329:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "715:391:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "761:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "763:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "763:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "763:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "736:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "745:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "732:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "732:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "757:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "728:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "728:32:2"
															},
															"nodeType": "YulIf",
															"src": "725:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "854:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "869:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "883:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "873:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "898:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "933:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "944:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "929:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "929:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "953:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "908:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "908:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "898:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "981:118:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "996:16:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1010:2:2",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1000:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1026:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1061:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1072:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1057:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1057:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1081:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1036:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1036:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1026:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "677:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "688:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "700:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "708:6:2",
														"type": ""
													}
												],
												"src": "632:474:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1178:263:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1224:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1226:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1226:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1226:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1199:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1208:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1195:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1195:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1220:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1191:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1191:32:2"
															},
															"nodeType": "YulIf",
															"src": "1188:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "1317:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1332:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1346:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1336:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1361:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1396:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1407:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1392:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1392:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1416:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1371:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1371:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1361:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1148:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1159:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1171:6:2",
														"type": ""
													}
												],
												"src": "1112:329:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1506:50:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1523:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1543:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1528:14:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1528:21:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1516:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1516:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1516:34:2"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1494:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1501:3:2",
														"type": ""
													}
												],
												"src": "1447:109:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1654:272:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1664:53:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1711:5:2"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "1678:32:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1678:39:2"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1668:6:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1726:78:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1792:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1797:6:2"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1733:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1733:71:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1726:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1839:5:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1846:4:2",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1835:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1835:16:2"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1853:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1858:6:2"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1813:21:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1813:52:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1813:52:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1874:46:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1885:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1912:6:2"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "1890:21:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1890:29:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1881:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1881:39:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1874:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1635:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1642:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1650:3:2",
														"type": ""
													}
												],
												"src": "1562:364:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2078:220:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2088:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2154:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2159:2:2",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2095:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2095:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2088:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2260:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1cfe29335417d58430919310476bd047bd59346b3a9c3737faf69e319ee4efb7",
																	"nodeType": "YulIdentifier",
																	"src": "2171:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2171:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2171:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2273:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2284:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2289:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2280:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2280:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2273:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1cfe29335417d58430919310476bd047bd59346b3a9c3737faf69e319ee4efb7_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2066:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2074:3:2",
														"type": ""
													}
												],
												"src": "1932:366:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2450:220:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2460:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2526:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2531:2:2",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2467:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2467:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2460:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2632:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																	"nodeType": "YulIdentifier",
																	"src": "2543:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2543:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2543:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2645:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2656:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2661:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2652:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2652:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2645:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2438:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2446:3:2",
														"type": ""
													}
												],
												"src": "2304:366:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2822:220:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2832:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2898:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2903:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2839:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2839:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2832:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3004:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_63580c8f2f353fc5b6490d467132dc04a523d5a3d9a1206eea4b2a39c4d766db",
																	"nodeType": "YulIdentifier",
																	"src": "2915:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2915:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2915:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3017:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3028:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3033:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3024:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3024:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3017:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_63580c8f2f353fc5b6490d467132dc04a523d5a3d9a1206eea4b2a39c4d766db_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2810:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2818:3:2",
														"type": ""
													}
												],
												"src": "2676:366:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3194:220:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3204:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3270:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3275:2:2",
																		"type": "",
																		"value": "39"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3211:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3211:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3204:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3376:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ab5f331f6ba431abbea29f740d3c5ab5f38e45bf730065272d8e796b7e3904ce",
																	"nodeType": "YulIdentifier",
																	"src": "3287:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3287:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3287:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3389:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3400:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3405:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3396:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3396:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3389:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ab5f331f6ba431abbea29f740d3c5ab5f38e45bf730065272d8e796b7e3904ce_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3182:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3190:3:2",
														"type": ""
													}
												],
												"src": "3048:366:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3566:220:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3576:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3642:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3647:2:2",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3583:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3583:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3576:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3748:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_dbe0e75e0af93930a70b9625aa5f5d0f68d46c213206bbd891b8ca2b2a563776",
																	"nodeType": "YulIdentifier",
																	"src": "3659:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3659:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3659:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3761:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3772:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3777:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3768:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3768:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3761:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_dbe0e75e0af93930a70b9625aa5f5d0f68d46c213206bbd891b8ca2b2a563776_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3554:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3562:3:2",
														"type": ""
													}
												],
												"src": "3420:366:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3857:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3874:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3897:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3879:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3879:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3867:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3867:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3867:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3845:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3852:3:2",
														"type": ""
													}
												],
												"src": "3792:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4008:118:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4018:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4030:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4041:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4026:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4026:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4018:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4092:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4105:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4116:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4101:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4101:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4054:37:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4054:65:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4054:65:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3980:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3992:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4003:4:2",
														"type": ""
													}
												],
												"src": "3916:210:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4250:195:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4260:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4272:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4283:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4268:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4268:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4260:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4307:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4318:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4303:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4303:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4326:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4332:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4322:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4322:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4296:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4296:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4296:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4352:86:2",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4424:6:2"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4433:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4360:63:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4360:78:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4352:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4222:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4234:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4245:4:2",
														"type": ""
													}
												],
												"src": "4132:313:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4622:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4632:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4644:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4655:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4640:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4640:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4632:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4679:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4690:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4675:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4675:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4698:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4704:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4694:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4694:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4668:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4668:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4668:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4724:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4858:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1cfe29335417d58430919310476bd047bd59346b3a9c3737faf69e319ee4efb7_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4732:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4732:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4724:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1cfe29335417d58430919310476bd047bd59346b3a9c3737faf69e319ee4efb7__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4602:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4617:4:2",
														"type": ""
													}
												],
												"src": "4451:419:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5047:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5057:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5069:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5080:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5065:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5065:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5057:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5104:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5115:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5100:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5100:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5123:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5129:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5119:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5119:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5093:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5093:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5093:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5149:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "5283:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5157:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5157:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5149:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5027:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5042:4:2",
														"type": ""
													}
												],
												"src": "4876:419:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5472:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5482:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5494:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5505:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5490:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5490:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5482:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5529:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5540:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5525:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5525:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5548:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5554:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5544:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5544:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5518:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5518:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5518:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5574:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "5708:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_63580c8f2f353fc5b6490d467132dc04a523d5a3d9a1206eea4b2a39c4d766db_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5582:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5582:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5574:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_63580c8f2f353fc5b6490d467132dc04a523d5a3d9a1206eea4b2a39c4d766db__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5452:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5467:4:2",
														"type": ""
													}
												],
												"src": "5301:419:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5897:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5907:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5919:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5930:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5915:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5915:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5907:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5954:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5965:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5950:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5950:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5973:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5979:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5969:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5969:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5943:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5943:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5943:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5999:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6133:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ab5f331f6ba431abbea29f740d3c5ab5f38e45bf730065272d8e796b7e3904ce_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6007:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6007:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5999:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ab5f331f6ba431abbea29f740d3c5ab5f38e45bf730065272d8e796b7e3904ce__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5877:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5892:4:2",
														"type": ""
													}
												],
												"src": "5726:419:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6322:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6332:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6344:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6355:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6340:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6340:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6332:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6379:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6390:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6375:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6375:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6398:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6404:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6394:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6394:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6368:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6368:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6368:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6424:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6558:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_dbe0e75e0af93930a70b9625aa5f5d0f68d46c213206bbd891b8ca2b2a563776_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6432:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6432:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6424:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_dbe0e75e0af93930a70b9625aa5f5d0f68d46c213206bbd891b8ca2b2a563776__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6302:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6317:4:2",
														"type": ""
													}
												],
												"src": "6151:419:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6674:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6684:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6696:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6707:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6692:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6692:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6684:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6764:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6777:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6788:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6773:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6773:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6720:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6720:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6720:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6646:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6658:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6669:4:2",
														"type": ""
													}
												],
												"src": "6576:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6844:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6854:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6870:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6864:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6864:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "6854:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6837:6:2",
														"type": ""
													}
												],
												"src": "6804:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6944:40:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6955:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6971:5:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6965:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6965:12:2"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "6955:6:2"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6927:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6937:6:2",
														"type": ""
													}
												],
												"src": "6885:99:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7086:73:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7103:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7108:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7096:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7096:19:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7096:19:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7124:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7143:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7148:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7139:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7139:14:2"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "7124:11:2"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7058:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7063:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "7074:11:2",
														"type": ""
													}
												],
												"src": "6990:169:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7209:261:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7219:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7242:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7224:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7224:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "7219:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7253:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7276:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7258:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7258:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "7253:1:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7416:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7418:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7418:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7418:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7337:1:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7344:66:2",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "7412:1:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7340:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7340:74:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7334:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7334:81:2"
															},
															"nodeType": "YulIf",
															"src": "7331:107:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7448:16:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7459:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7462:1:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7455:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7455:9:2"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "7448:3:2"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7196:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7199:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "7205:3:2",
														"type": ""
													}
												],
												"src": "7165:305:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7524:300:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7534:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7557:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7539:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7539:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "7534:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7568:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7591:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7573:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7573:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "7568:1:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7766:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7768:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7768:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7768:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "7678:1:2"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "7671:6:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7671:9:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "7664:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7664:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "7686:1:2"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7693:66:2",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "7761:1:2"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "7689:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7689:74:2"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "7683:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7683:81:2"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "7660:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7660:105:2"
															},
															"nodeType": "YulIf",
															"src": "7657:131:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7798:20:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7813:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7816:1:2"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "7809:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7809:9:2"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "7798:7:2"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7507:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7510:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "7516:7:2",
														"type": ""
													}
												],
												"src": "7476:348:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7875:146:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7885:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7908:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7890:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7890:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "7885:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7919:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7942:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7924:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7924:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "7919:1:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7966:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7968:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7968:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7968:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7960:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7963:1:2"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "7957:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7957:8:2"
															},
															"nodeType": "YulIf",
															"src": "7954:34:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7998:17:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8010:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8013:1:2"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "8006:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8006:9:2"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "7998:4:2"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7861:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7864:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "7870:4:2",
														"type": ""
													}
												],
												"src": "7830:191:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8072:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8082:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8111:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "8093:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8093:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "8082:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8054:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "8064:7:2",
														"type": ""
													}
												],
												"src": "8027:96:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8171:48:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8181:32:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8206:5:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "8199:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8199:13:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8192:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8192:21:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "8181:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8153:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "8163:7:2",
														"type": ""
													}
												],
												"src": "8129:90:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8270:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8280:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8295:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8302:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "8291:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8291:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "8280:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8252:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "8262:7:2",
														"type": ""
													}
												],
												"src": "8225:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8402:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8412:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "8423:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "8412:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8384:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "8394:7:2",
														"type": ""
													}
												],
												"src": "8357:77:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8489:258:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8499:10:2",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "8508:1:2",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "8503:1:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8568:63:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "8593:3:2"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "8598:1:2"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "8589:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8589:11:2"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "8612:3:2"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "8617:1:2"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "8608:3:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8608:11:2"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "8602:5:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8602:18:2"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8582:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8582:39:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8582:39:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "8529:1:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8532:6:2"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "8526:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8526:13:2"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "8540:19:2",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "8542:15:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "8551:1:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8554:2:2",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "8547:3:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8547:10:2"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "8542:1:2"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "8522:3:2",
																"statements": []
															},
															"src": "8518:113:2"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8665:76:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "8715:3:2"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "8720:6:2"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "8711:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8711:16:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8729:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8704:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8704:27:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8704:27:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "8646:1:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8649:6:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8643:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8643:13:2"
															},
															"nodeType": "YulIf",
															"src": "8640:101:2"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "8471:3:2",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "8476:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8481:6:2",
														"type": ""
													}
												],
												"src": "8440:307:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8804:269:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8814:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "8828:4:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8834:1:2",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "8824:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8824:12:2"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "8814:6:2"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8845:38:2",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "8875:4:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8881:1:2",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "8871:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8871:12:2"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "8849:18:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8922:51:2",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "8936:27:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "8950:6:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8958:4:2",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "8946:3:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8946:17:2"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8936:6:2"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "8902:18:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8895:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8895:26:2"
															},
															"nodeType": "YulIf",
															"src": "8892:81:2"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9025:42:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "9039:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9039:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9039:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "8989:18:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "9012:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9020:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "9009:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9009:14:2"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "8986:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8986:38:2"
															},
															"nodeType": "YulIf",
															"src": "8983:84:2"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "8788:4:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8797:6:2",
														"type": ""
													}
												],
												"src": "8753:320:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9107:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9124:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9127:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9117:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9117:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9117:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9221:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9224:4:2",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9214:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9214:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9214:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9245:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9248:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9238:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9238:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9238:15:2"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "9079:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9293:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9310:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9313:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9303:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9303:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9303:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9407:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9410:4:2",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9400:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9400:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9400:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9431:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9434:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9424:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9424:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9424:15:2"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "9265:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9540:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9557:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9560:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9550:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9550:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9550:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "9451:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9663:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9680:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9683:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9673:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9673:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9673:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "9574:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9745:54:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9755:38:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9773:5:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9780:2:2",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9769:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9769:14:2"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9789:2:2",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "9785:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9785:7:2"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "9765:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9765:28:2"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "9755:6:2"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9728:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "9738:6:2",
														"type": ""
													}
												],
												"src": "9697:102:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9911:115:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9933:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9941:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9929:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9929:14:2"
																	},
																	{
																		"hexValue": "596f7520646f206e6f7420686176652073756666696369656e742062616c616e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9945:34:2",
																		"type": "",
																		"value": "You do not have sufficient balan"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9922:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9922:58:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9922:58:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10001:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10009:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9997:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9997:15:2"
																	},
																	{
																		"hexValue": "6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10014:4:2",
																		"type": "",
																		"value": "ce"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9990:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9990:29:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9990:29:2"
														}
													]
												},
												"name": "store_literal_in_memory_1cfe29335417d58430919310476bd047bd59346b3a9c3737faf69e319ee4efb7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9903:6:2",
														"type": ""
													}
												],
												"src": "9805:221:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10138:64:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10160:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10168:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10156:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10156:14:2"
																	},
																	{
																		"hexValue": "496e73756666696369656e742062616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10172:22:2",
																		"type": "",
																		"value": "Insufficient balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10149:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10149:46:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10149:46:2"
														}
													]
												},
												"name": "store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10130:6:2",
														"type": ""
													}
												],
												"src": "10032:170:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10314:76:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10336:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10344:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10332:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10332:14:2"
																	},
																	{
																		"hexValue": "436f6e74726163742062616c616e636520697320696e73756666696369656e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10348:34:2",
																		"type": "",
																		"value": "Contract balance is insufficient"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10325:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10325:58:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10325:58:2"
														}
													]
												},
												"name": "store_literal_in_memory_63580c8f2f353fc5b6490d467132dc04a523d5a3d9a1206eea4b2a39c4d766db",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10306:6:2",
														"type": ""
													}
												],
												"src": "10208:182:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10502:120:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10524:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10532:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10520:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10520:14:2"
																	},
																	{
																		"hexValue": "4f6e6c7920746865206f776e65722063616e2064657374726f79207468652063",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10536:34:2",
																		"type": "",
																		"value": "Only the owner can destroy the c"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10513:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10513:58:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10513:58:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10592:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10600:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10588:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10588:15:2"
																	},
																	{
																		"hexValue": "6f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10605:9:2",
																		"type": "",
																		"value": "ontract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10581:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10581:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10581:34:2"
														}
													]
												},
												"name": "store_literal_in_memory_ab5f331f6ba431abbea29f740d3c5ab5f38e45bf730065272d8e796b7e3904ce",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10494:6:2",
														"type": ""
													}
												],
												"src": "10396:226:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10734:115:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10756:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10764:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10752:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10752:14:2"
																	},
																	{
																		"hexValue": "4f6e6c7920746865206f776e65722063616e206d696e74206e657720746f6b65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10768:34:2",
																		"type": "",
																		"value": "Only the owner can mint new toke"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10745:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10745:58:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10745:58:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10824:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10832:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10820:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10820:15:2"
																	},
																	{
																		"hexValue": "6e73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10837:4:2",
																		"type": "",
																		"value": "ns"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10813:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10813:29:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10813:29:2"
														}
													]
												},
												"name": "store_literal_in_memory_dbe0e75e0af93930a70b9625aa5f5d0f68d46c213206bbd891b8ca2b2a563776",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10726:6:2",
														"type": ""
													}
												],
												"src": "10628:221:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10898:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10955:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10964:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10967:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10957:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10957:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10957:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10921:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "10946:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "10928:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10928:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "10918:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10918:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10911:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10911:43:2"
															},
															"nodeType": "YulIf",
															"src": "10908:63:2"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10891:5:2",
														"type": ""
													}
												],
												"src": "10855:122:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11026:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11083:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11092:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11095:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "11085:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11085:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11085:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11049:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "11074:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "11056:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11056:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "11046:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11046:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11039:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11039:43:2"
															},
															"nodeType": "YulIf",
															"src": "11036:63:2"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11019:5:2",
														"type": ""
													}
												],
												"src": "10983:122:2"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_1cfe29335417d58430919310476bd047bd59346b3a9c3737faf69e319ee4efb7_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_1cfe29335417d58430919310476bd047bd59346b3a9c3737faf69e319ee4efb7(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_63580c8f2f353fc5b6490d467132dc04a523d5a3d9a1206eea4b2a39c4d766db_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_63580c8f2f353fc5b6490d467132dc04a523d5a3d9a1206eea4b2a39c4d766db(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_ab5f331f6ba431abbea29f740d3c5ab5f38e45bf730065272d8e796b7e3904ce_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 39)\n        store_literal_in_memory_ab5f331f6ba431abbea29f740d3c5ab5f38e45bf730065272d8e796b7e3904ce(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_dbe0e75e0af93930a70b9625aa5f5d0f68d46c213206bbd891b8ca2b2a563776_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_dbe0e75e0af93930a70b9625aa5f5d0f68d46c213206bbd891b8ca2b2a563776(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_1cfe29335417d58430919310476bd047bd59346b3a9c3737faf69e319ee4efb7__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1cfe29335417d58430919310476bd047bd59346b3a9c3737faf69e319ee4efb7_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_63580c8f2f353fc5b6490d467132dc04a523d5a3d9a1206eea4b2a39c4d766db__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_63580c8f2f353fc5b6490d467132dc04a523d5a3d9a1206eea4b2a39c4d766db_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_ab5f331f6ba431abbea29f740d3c5ab5f38e45bf730065272d8e796b7e3904ce__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ab5f331f6ba431abbea29f740d3c5ab5f38e45bf730065272d8e796b7e3904ce_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_dbe0e75e0af93930a70b9625aa5f5d0f68d46c213206bbd891b8ca2b2a563776__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_dbe0e75e0af93930a70b9625aa5f5d0f68d46c213206bbd891b8ca2b2a563776_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_1cfe29335417d58430919310476bd047bd59346b3a9c3737faf69e319ee4efb7(memPtr) {\n\n        mstore(add(memPtr, 0), \"You do not have sufficient balan\")\n\n        mstore(add(memPtr, 32), \"ce\")\n\n    }\n\n    function store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient balance\")\n\n    }\n\n    function store_literal_in_memory_63580c8f2f353fc5b6490d467132dc04a523d5a3d9a1206eea4b2a39c4d766db(memPtr) {\n\n        mstore(add(memPtr, 0), \"Contract balance is insufficient\")\n\n    }\n\n    function store_literal_in_memory_ab5f331f6ba431abbea29f740d3c5ab5f38e45bf730065272d8e796b7e3904ce(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only the owner can destroy the c\")\n\n        mstore(add(memPtr, 32), \"ontract\")\n\n    }\n\n    function store_literal_in_memory_dbe0e75e0af93930a70b9625aa5f5d0f68d46c213206bbd891b8ca2b2a563776(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only the owner can mint new toke\")\n\n        mstore(add(memPtr, 32), \"ns\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061008a5760003560e01c806343d726d61161005957806343d726d61461014b57806370a082311461016257806398d5fdca1461019f578063a9059cbb146101ca578063e4849b32146102075761008b565b8063150704011461008d57806317d7de7c146100b857806318160ddd146100e357806340c10f191461010e5761008b565b5b005b34801561009957600080fd5b506100a2610237565b6040516100af9190610cae565b60405180910390f35b3480156100c457600080fd5b506100cd6102c9565b6040516100da9190610cae565b60405180910390f35b3480156100ef57600080fd5b506100f861035b565b6040516101059190610d70565b60405180910390f35b34801561011a57600080fd5b5061013560048036038101906101309190610b20565b610365565b6040516101429190610c93565b60405180910390f35b34801561015757600080fd5b50610160610502565b005b34801561016e57600080fd5b5061018960048036038101906101849190610af3565b6105ce565b6040516101969190610d70565b60405180910390f35b3480156101ab57600080fd5b506101b4610617565b6040516101c19190610d70565b60405180910390f35b3480156101d657600080fd5b506101f160048036038101906101ec9190610b20565b610621565b6040516101fe9190610c93565b60405180910390f35b610221600480360381019061021c9190610b60565b610850565b60405161022e9190610c93565b60405180910390f35b60606002805461024690610f06565b80601f016020809104026020016040519081016040528092919081815260200182805461027290610f06565b80156102bf5780601f10610294576101008083540402835291602001916102bf565b820191906000526020600020905b8154815290600101906020018083116102a257829003601f168201915b5050505050905090565b6060600180546102d890610f06565b80601f016020809104026020016040519081016040528092919081815260200182805461030490610f06565b80156103515780601f1061032657610100808354040283529160200191610351565b820191906000526020600020905b81548152906001019060200180831161033457829003601f168201915b5050505050905090565b6000600454905090565b600060011515600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515146103fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103f190610d50565b60405180910390fd5b61040f82600454610a9d90919063ffffffff16565b60048190555061046782600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610a9d90919063ffffffff16565b600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff167f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885836040516104f09190610d70565b60405180910390a26001905092915050565b60011515600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514610595576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058c90610d30565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b6000600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600354905090565b60008061067683600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610ab390919063ffffffff16565b10156106b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ae90610cd0565b60405180910390fd5b61070982600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610ab390919063ffffffff16565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061079e82600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610a9d90919063ffffffff16565b600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161083e9190610d70565b60405180910390a36001905092915050565b6000806108a583600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610ab390919063ffffffff16565b10156108e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108dd90610cf0565b60405180910390fd5b6000610258836108f69190610dfd565b9050600061090d8247610ab390919063ffffffff16565b101561094e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161094590610d10565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610994573d6000803e3d6000fd5b506109e783600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610ab390919063ffffffff16565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610a3f83600454610ab390919063ffffffff16565b6004819055503373ffffffffffffffffffffffffffffffffffffffff167f5e5e995ce3133561afceaa51a9a154d5db228cd7525d34df5185582c18d3df0984604051610a8b9190610d70565b60405180910390a26001915050919050565b60008183610aab9190610da7565b905092915050565b60008183610ac19190610e57565b905092915050565b600081359050610ad8816110eb565b92915050565b600081359050610aed81611102565b92915050565b600060208284031215610b0957610b08610f96565b5b6000610b1784828501610ac9565b91505092915050565b60008060408385031215610b3757610b36610f96565b5b6000610b4585828601610ac9565b9250506020610b5685828601610ade565b9150509250929050565b600060208284031215610b7657610b75610f96565b5b6000610b8484828501610ade565b91505092915050565b610b9681610e9d565b82525050565b6000610ba782610d8b565b610bb18185610d96565b9350610bc1818560208601610ed3565b610bca81610f9b565b840191505092915050565b6000610be2602283610d96565b9150610bed82610fac565b604082019050919050565b6000610c05601483610d96565b9150610c1082610ffb565b602082019050919050565b6000610c28602083610d96565b9150610c3382611024565b602082019050919050565b6000610c4b602783610d96565b9150610c568261104d565b604082019050919050565b6000610c6e602283610d96565b9150610c798261109c565b604082019050919050565b610c8d81610ec9565b82525050565b6000602082019050610ca86000830184610b8d565b92915050565b60006020820190508181036000830152610cc88184610b9c565b905092915050565b60006020820190508181036000830152610ce981610bd5565b9050919050565b60006020820190508181036000830152610d0981610bf8565b9050919050565b60006020820190508181036000830152610d2981610c1b565b9050919050565b60006020820190508181036000830152610d4981610c3e565b9050919050565b60006020820190508181036000830152610d6981610c61565b9050919050565b6000602082019050610d856000830184610c84565b92915050565b600081519050919050565b600082825260208201905092915050565b6000610db282610ec9565b9150610dbd83610ec9565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610df257610df1610f38565b5b828201905092915050565b6000610e0882610ec9565b9150610e1383610ec9565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e4c57610e4b610f38565b5b828202905092915050565b6000610e6282610ec9565b9150610e6d83610ec9565b925082821015610e8057610e7f610f38565b5b828203905092915050565b6000610e9682610ea9565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b83811015610ef1578082015181840152602081019050610ed6565b83811115610f00576000848401525b50505050565b60006002820490506001821680610f1e57607f821691505b60208210811415610f3257610f31610f67565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f596f7520646f206e6f7420686176652073756666696369656e742062616c616e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b7f496e73756666696369656e742062616c616e6365000000000000000000000000600082015250565b7f436f6e74726163742062616c616e636520697320696e73756666696369656e74600082015250565b7f4f6e6c7920746865206f776e65722063616e2064657374726f7920746865206360008201527f6f6e747261637400000000000000000000000000000000000000000000000000602082015250565b7f4f6e6c7920746865206f776e65722063616e206d696e74206e657720746f6b6560008201527f6e73000000000000000000000000000000000000000000000000000000000000602082015250565b6110f481610e8b565b81146110ff57600080fd5b50565b61110b81610ec9565b811461111657600080fd5b5056fea264697066735822122095a4d0e53d2d3dc54d939c2ffe5db2236a58f79fa5301625a504a1be7276b9b264736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x8A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x43D726D6 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x43D726D6 EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0x98D5FDCA EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1CA JUMPI DUP1 PUSH4 0xE4849B32 EQ PUSH2 0x207 JUMPI PUSH2 0x8B JUMP JUMPDEST DUP1 PUSH4 0x15070401 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x17D7DE7C EQ PUSH2 0xB8 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xE3 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x10E JUMPI PUSH2 0x8B JUMP JUMPDEST JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x99 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA2 PUSH2 0x237 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAF SWAP2 SWAP1 PUSH2 0xCAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xCD PUSH2 0x2C9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDA SWAP2 SWAP1 PUSH2 0xCAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF8 PUSH2 0x35B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x105 SWAP2 SWAP1 PUSH2 0xD70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x135 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x130 SWAP2 SWAP1 PUSH2 0xB20 JUMP JUMPDEST PUSH2 0x365 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x142 SWAP2 SWAP1 PUSH2 0xC93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x157 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x160 PUSH2 0x502 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x189 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x184 SWAP2 SWAP1 PUSH2 0xAF3 JUMP JUMPDEST PUSH2 0x5CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x196 SWAP2 SWAP1 PUSH2 0xD70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B4 PUSH2 0x617 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C1 SWAP2 SWAP1 PUSH2 0xD70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EC SWAP2 SWAP1 PUSH2 0xB20 JUMP JUMPDEST PUSH2 0x621 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FE SWAP2 SWAP1 PUSH2 0xC93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x221 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21C SWAP2 SWAP1 PUSH2 0xB60 JUMP JUMPDEST PUSH2 0x850 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22E SWAP2 SWAP1 PUSH2 0xC93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x246 SWAP1 PUSH2 0xF06 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x272 SWAP1 PUSH2 0xF06 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2BF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x294 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2BF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2A2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x2D8 SWAP1 PUSH2 0xF06 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x304 SWAP1 PUSH2 0xF06 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x351 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x326 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x351 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x334 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 ISZERO ISZERO PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x3FA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F1 SWAP1 PUSH2 0xD50 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x40F DUP3 PUSH1 0x4 SLOAD PUSH2 0xA9D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH2 0x467 DUP3 PUSH1 0x5 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xA9D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF6798A560793A54C3BCFE86A93CDE1E73087D944C0EA20544137D4121396885 DUP4 PUSH1 0x40 MLOAD PUSH2 0x4F0 SWAP2 SWAP1 PUSH2 0xD70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x595 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58C SWAP1 PUSH2 0xD30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x676 DUP4 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xAB3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST LT ISZERO PUSH2 0x6B7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AE SWAP1 PUSH2 0xCD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x709 DUP3 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xAB3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x79E DUP3 PUSH1 0x5 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xA9D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x83E SWAP2 SWAP1 PUSH2 0xD70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x8A5 DUP4 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xAB3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST LT ISZERO PUSH2 0x8E6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8DD SWAP1 PUSH2 0xCF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x258 DUP4 PUSH2 0x8F6 SWAP2 SWAP1 PUSH2 0xDFD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x90D DUP3 SELFBALANCE PUSH2 0xAB3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST LT ISZERO PUSH2 0x94E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x945 SWAP1 PUSH2 0xD10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x994 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x9E7 DUP4 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xAB3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xA3F DUP4 PUSH1 0x4 SLOAD PUSH2 0xAB3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5E5E995CE3133561AFCEAA51A9A154D5DB228CD7525D34DF5185582C18D3DF09 DUP5 PUSH1 0x40 MLOAD PUSH2 0xA8B SWAP2 SWAP1 PUSH2 0xD70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xAAB SWAP2 SWAP1 PUSH2 0xDA7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xAC1 SWAP2 SWAP1 PUSH2 0xE57 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xAD8 DUP2 PUSH2 0x10EB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xAED DUP2 PUSH2 0x1102 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB09 JUMPI PUSH2 0xB08 PUSH2 0xF96 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB17 DUP5 DUP3 DUP6 ADD PUSH2 0xAC9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB37 JUMPI PUSH2 0xB36 PUSH2 0xF96 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB45 DUP6 DUP3 DUP7 ADD PUSH2 0xAC9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xB56 DUP6 DUP3 DUP7 ADD PUSH2 0xADE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB76 JUMPI PUSH2 0xB75 PUSH2 0xF96 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB84 DUP5 DUP3 DUP6 ADD PUSH2 0xADE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB96 DUP2 PUSH2 0xE9D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBA7 DUP3 PUSH2 0xD8B JUMP JUMPDEST PUSH2 0xBB1 DUP2 DUP6 PUSH2 0xD96 JUMP JUMPDEST SWAP4 POP PUSH2 0xBC1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xED3 JUMP JUMPDEST PUSH2 0xBCA DUP2 PUSH2 0xF9B JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBE2 PUSH1 0x22 DUP4 PUSH2 0xD96 JUMP JUMPDEST SWAP2 POP PUSH2 0xBED DUP3 PUSH2 0xFAC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC05 PUSH1 0x14 DUP4 PUSH2 0xD96 JUMP JUMPDEST SWAP2 POP PUSH2 0xC10 DUP3 PUSH2 0xFFB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC28 PUSH1 0x20 DUP4 PUSH2 0xD96 JUMP JUMPDEST SWAP2 POP PUSH2 0xC33 DUP3 PUSH2 0x1024 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC4B PUSH1 0x27 DUP4 PUSH2 0xD96 JUMP JUMPDEST SWAP2 POP PUSH2 0xC56 DUP3 PUSH2 0x104D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC6E PUSH1 0x22 DUP4 PUSH2 0xD96 JUMP JUMPDEST SWAP2 POP PUSH2 0xC79 DUP3 PUSH2 0x109C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC8D DUP2 PUSH2 0xEC9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCA8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB8D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xCC8 DUP2 DUP5 PUSH2 0xB9C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xCE9 DUP2 PUSH2 0xBD5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD09 DUP2 PUSH2 0xBF8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD29 DUP2 PUSH2 0xC1B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD49 DUP2 PUSH2 0xC3E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD69 DUP2 PUSH2 0xC61 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD85 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC84 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDB2 DUP3 PUSH2 0xEC9 JUMP JUMPDEST SWAP2 POP PUSH2 0xDBD DUP4 PUSH2 0xEC9 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0xDF2 JUMPI PUSH2 0xDF1 PUSH2 0xF38 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE08 DUP3 PUSH2 0xEC9 JUMP JUMPDEST SWAP2 POP PUSH2 0xE13 DUP4 PUSH2 0xEC9 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xE4C JUMPI PUSH2 0xE4B PUSH2 0xF38 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE62 DUP3 PUSH2 0xEC9 JUMP JUMPDEST SWAP2 POP PUSH2 0xE6D DUP4 PUSH2 0xEC9 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0xE80 JUMPI PUSH2 0xE7F PUSH2 0xF38 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE96 DUP3 PUSH2 0xEA9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xEF1 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xED6 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xF00 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xF1E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xF32 JUMPI PUSH2 0xF31 PUSH2 0xF67 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x596F7520646F206E6F7420686176652073756666696369656E742062616C616E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6365000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x436F6E74726163742062616C616E636520697320696E73756666696369656E74 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F6E6C7920746865206F776E65722063616E2064657374726F79207468652063 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F6E747261637400000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F6E6C7920746865206F776E65722063616E206D696E74206E657720746F6B65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E73000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x10F4 DUP2 PUSH2 0xE8B JUMP JUMPDEST DUP2 EQ PUSH2 0x10FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x110B DUP2 PUSH2 0xEC9 JUMP JUMPDEST DUP2 EQ PUSH2 0x1116 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP6 LOG4 0xD0 0xE5 RETURNDATASIZE 0x2D RETURNDATASIZE 0xC5 0x4D SWAP4 SWAP13 0x2F INVALID 0x5D 0xB2 0x23 PUSH11 0x58F79FA5301625A504A1BE PUSH19 0x76B9B264736F6C634300080700330000000000 ",
							"sourceMap": "92:3727:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1291:97;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1195:88;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1091:96;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2001:319;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3457:270;;;;;;;;;;;;;:::i;:::-;;2381:116;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1396:89;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1493:496;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2503:946;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1291:97;1334:13;1373:6;1366:13;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1291:97;:::o;1195:88::-;1233:13;1271:4;1264:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1195:88;:::o;1091:96::-;1134:7;1168:11;;1161:18;;1091:96;:::o;2001:319::-;2060:4;2111;2090:25;;:5;:17;2096:10;2090:17;;;;;;;;;;;;;;;;;;;;;;;;;:25;;;2082:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;2179:22;2195:5;2179:11;;:15;;:22;;;;:::i;:::-;2165:11;:36;;;;2228:27;2249:5;2229:8;:14;2239:2;2229:14;;;;;;;;;;;;;;;;2228:20;;:27;;;;:::i;:::-;2212:8;:12;2221:2;2212:12;;;;;;;;;;;;;;;:43;;;;2278:2;2271:18;;;2283:5;2271:18;;;;;;:::i;:::-;;;;;;;;2308:4;2301:11;;2001:319;;;;:::o;3457:270::-;3569:4;3548:25;;:5;:17;3554:10;3548:17;;;;;;;;;;;;;;;;;;;;;;;;;:25;;;3540:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;3713:5;;;;;;;;;;3700:19;;;2381:116;2439:7;2471:8;:18;2480:8;2471:18;;;;;;;;;;;;;;;;2464:25;;2381:116;;;:::o;1396:89::-;1438:7;1471:5;;1464:12;;1396:89;:::o;1493:496::-;1554:4;1663:1;1628:31;1653:5;1628:8;:20;1637:10;1628:20;;;;;;;;;;;;;;;;:24;;:31;;;;:::i;:::-;:36;;1620:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;1787:31;1812:5;1787:8;:20;1796:10;1787:20;;;;;;;;;;;;;;;;:24;;:31;;;;:::i;:::-;1764:8;:20;1773:10;1764:20;;;;;;;;;;;;;;;:54;;;;1844:23;1861:5;1844:8;:12;1853:2;1844:12;;;;;;;;;;;;;;;;:16;;:23;;;;:::i;:::-;1829:8;:12;1838:2;1829:12;;;;;;;;;;;;;;;:38;;;;1948:2;1927:31;;1936:10;1927:31;;;1952:5;1927:31;;;;;;:::i;:::-;;;;;;;;1976:4;1969:11;;1493:496;;;;:::o;2503:946::-;2556:4;2619:1;2586:31;2611:5;2586:8;:20;2595:10;2586:20;;;;;;;;;;;;;;;;:24;;:31;;;;:::i;:::-;:34;;2578:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;2726:17;2754:3;2746:5;:11;;;;:::i;:::-;2726:31;;3045:1;3007:36;3033:9;3007:21;:25;;:36;;;;:::i;:::-;:39;;2999:84;;;;;;;;;;;;:::i;:::-;;;;;;;;;3102:10;3094:28;;:39;3123:9;3094:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3167:31;3192:5;3167:8;:20;3176:10;3167:20;;;;;;;;;;;;;;;;:24;;:31;;;;:::i;:::-;3144:8;:20;3153:10;3144:20;;;;;;;;;;;;;;;:54;;;;3271:22;3287:5;3271:11;;:15;;:22;;;;:::i;:::-;3257:11;:36;;;;3374:10;3369:23;;;3386:5;3369:23;;;;;;:::i;:::-;;;;;;;;3437:4;3430:11;;;2503:946;;;:::o;2755:96:0:-;2813:7;2843:1;2839;:5;;;;:::i;:::-;2832:12;;2755:96;;;;:::o;3122:::-;3180:7;3210:1;3206;:5;;;;:::i;:::-;3199:12;;3122:96;;;;:::o;7:139:2:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:::-;198:5;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;152:139;;;;:::o;297:329::-;356:6;405:2;393:9;384:7;380:23;376:32;373:119;;;411:79;;:::i;:::-;373:119;531:1;556:53;601:7;592:6;581:9;577:22;556:53;:::i;:::-;546:63;;502:117;297:329;;;;:::o;632:474::-;700:6;708;757:2;745:9;736:7;732:23;728:32;725:119;;;763:79;;:::i;:::-;725:119;883:1;908:53;953:7;944:6;933:9;929:22;908:53;:::i;:::-;898:63;;854:117;1010:2;1036:53;1081:7;1072:6;1061:9;1057:22;1036:53;:::i;:::-;1026:63;;981:118;632:474;;;;;:::o;1112:329::-;1171:6;1220:2;1208:9;1199:7;1195:23;1191:32;1188:119;;;1226:79;;:::i;:::-;1188:119;1346:1;1371:53;1416:7;1407:6;1396:9;1392:22;1371:53;:::i;:::-;1361:63;;1317:117;1112:329;;;;:::o;1447:109::-;1528:21;1543:5;1528:21;:::i;:::-;1523:3;1516:34;1447:109;;:::o;1562:364::-;1650:3;1678:39;1711:5;1678:39;:::i;:::-;1733:71;1797:6;1792:3;1733:71;:::i;:::-;1726:78;;1813:52;1858:6;1853:3;1846:4;1839:5;1835:16;1813:52;:::i;:::-;1890:29;1912:6;1890:29;:::i;:::-;1885:3;1881:39;1874:46;;1654:272;1562:364;;;;:::o;1932:366::-;2074:3;2095:67;2159:2;2154:3;2095:67;:::i;:::-;2088:74;;2171:93;2260:3;2171:93;:::i;:::-;2289:2;2284:3;2280:12;2273:19;;1932:366;;;:::o;2304:::-;2446:3;2467:67;2531:2;2526:3;2467:67;:::i;:::-;2460:74;;2543:93;2632:3;2543:93;:::i;:::-;2661:2;2656:3;2652:12;2645:19;;2304:366;;;:::o;2676:::-;2818:3;2839:67;2903:2;2898:3;2839:67;:::i;:::-;2832:74;;2915:93;3004:3;2915:93;:::i;:::-;3033:2;3028:3;3024:12;3017:19;;2676:366;;;:::o;3048:::-;3190:3;3211:67;3275:2;3270:3;3211:67;:::i;:::-;3204:74;;3287:93;3376:3;3287:93;:::i;:::-;3405:2;3400:3;3396:12;3389:19;;3048:366;;;:::o;3420:::-;3562:3;3583:67;3647:2;3642:3;3583:67;:::i;:::-;3576:74;;3659:93;3748:3;3659:93;:::i;:::-;3777:2;3772:3;3768:12;3761:19;;3420:366;;;:::o;3792:118::-;3879:24;3897:5;3879:24;:::i;:::-;3874:3;3867:37;3792:118;;:::o;3916:210::-;4003:4;4041:2;4030:9;4026:18;4018:26;;4054:65;4116:1;4105:9;4101:17;4092:6;4054:65;:::i;:::-;3916:210;;;;:::o;4132:313::-;4245:4;4283:2;4272:9;4268:18;4260:26;;4332:9;4326:4;4322:20;4318:1;4307:9;4303:17;4296:47;4360:78;4433:4;4424:6;4360:78;:::i;:::-;4352:86;;4132:313;;;;:::o;4451:419::-;4617:4;4655:2;4644:9;4640:18;4632:26;;4704:9;4698:4;4694:20;4690:1;4679:9;4675:17;4668:47;4732:131;4858:4;4732:131;:::i;:::-;4724:139;;4451:419;;;:::o;4876:::-;5042:4;5080:2;5069:9;5065:18;5057:26;;5129:9;5123:4;5119:20;5115:1;5104:9;5100:17;5093:47;5157:131;5283:4;5157:131;:::i;:::-;5149:139;;4876:419;;;:::o;5301:::-;5467:4;5505:2;5494:9;5490:18;5482:26;;5554:9;5548:4;5544:20;5540:1;5529:9;5525:17;5518:47;5582:131;5708:4;5582:131;:::i;:::-;5574:139;;5301:419;;;:::o;5726:::-;5892:4;5930:2;5919:9;5915:18;5907:26;;5979:9;5973:4;5969:20;5965:1;5954:9;5950:17;5943:47;6007:131;6133:4;6007:131;:::i;:::-;5999:139;;5726:419;;;:::o;6151:::-;6317:4;6355:2;6344:9;6340:18;6332:26;;6404:9;6398:4;6394:20;6390:1;6379:9;6375:17;6368:47;6432:131;6558:4;6432:131;:::i;:::-;6424:139;;6151:419;;;:::o;6576:222::-;6669:4;6707:2;6696:9;6692:18;6684:26;;6720:71;6788:1;6777:9;6773:17;6764:6;6720:71;:::i;:::-;6576:222;;;;:::o;6885:99::-;6937:6;6971:5;6965:12;6955:22;;6885:99;;;:::o;6990:169::-;7074:11;7108:6;7103:3;7096:19;7148:4;7143:3;7139:14;7124:29;;6990:169;;;;:::o;7165:305::-;7205:3;7224:20;7242:1;7224:20;:::i;:::-;7219:25;;7258:20;7276:1;7258:20;:::i;:::-;7253:25;;7412:1;7344:66;7340:74;7337:1;7334:81;7331:107;;;7418:18;;:::i;:::-;7331:107;7462:1;7459;7455:9;7448:16;;7165:305;;;;:::o;7476:348::-;7516:7;7539:20;7557:1;7539:20;:::i;:::-;7534:25;;7573:20;7591:1;7573:20;:::i;:::-;7568:25;;7761:1;7693:66;7689:74;7686:1;7683:81;7678:1;7671:9;7664:17;7660:105;7657:131;;;7768:18;;:::i;:::-;7657:131;7816:1;7813;7809:9;7798:20;;7476:348;;;;:::o;7830:191::-;7870:4;7890:20;7908:1;7890:20;:::i;:::-;7885:25;;7924:20;7942:1;7924:20;:::i;:::-;7919:25;;7963:1;7960;7957:8;7954:34;;;7968:18;;:::i;:::-;7954:34;8013:1;8010;8006:9;7998:17;;7830:191;;;;:::o;8027:96::-;8064:7;8093:24;8111:5;8093:24;:::i;:::-;8082:35;;8027:96;;;:::o;8129:90::-;8163:7;8206:5;8199:13;8192:21;8181:32;;8129:90;;;:::o;8225:126::-;8262:7;8302:42;8295:5;8291:54;8280:65;;8225:126;;;:::o;8357:77::-;8394:7;8423:5;8412:16;;8357:77;;;:::o;8440:307::-;8508:1;8518:113;8532:6;8529:1;8526:13;8518:113;;;8617:1;8612:3;8608:11;8602:18;8598:1;8593:3;8589:11;8582:39;8554:2;8551:1;8547:10;8542:15;;8518:113;;;8649:6;8646:1;8643:13;8640:101;;;8729:1;8720:6;8715:3;8711:16;8704:27;8640:101;8489:258;8440:307;;;:::o;8753:320::-;8797:6;8834:1;8828:4;8824:12;8814:22;;8881:1;8875:4;8871:12;8902:18;8892:81;;8958:4;8950:6;8946:17;8936:27;;8892:81;9020:2;9012:6;9009:14;8989:18;8986:38;8983:84;;;9039:18;;:::i;:::-;8983:84;8804:269;8753:320;;;:::o;9079:180::-;9127:77;9124:1;9117:88;9224:4;9221:1;9214:15;9248:4;9245:1;9238:15;9265:180;9313:77;9310:1;9303:88;9410:4;9407:1;9400:15;9434:4;9431:1;9424:15;9574:117;9683:1;9680;9673:12;9697:102;9738:6;9789:2;9785:7;9780:2;9773:5;9769:14;9765:28;9755:38;;9697:102;;;:::o;9805:221::-;9945:34;9941:1;9933:6;9929:14;9922:58;10014:4;10009:2;10001:6;9997:15;9990:29;9805:221;:::o;10032:170::-;10172:22;10168:1;10160:6;10156:14;10149:46;10032:170;:::o;10208:182::-;10348:34;10344:1;10336:6;10332:14;10325:58;10208:182;:::o;10396:226::-;10536:34;10532:1;10524:6;10520:14;10513:58;10605:9;10600:2;10592:6;10588:15;10581:34;10396:226;:::o;10628:221::-;10768:34;10764:1;10756:6;10752:14;10745:58;10837:4;10832:2;10824:6;10820:15;10813:29;10628:221;:::o;10855:122::-;10928:24;10946:5;10928:24;:::i;:::-;10921:5;10918:35;10908:63;;10967:1;10964;10957:12;10908:63;10855:122;:::o;10983:::-;11056:24;11074:5;11056:24;:::i;:::-;11049:5;11046:35;11036:63;;11095:1;11092;11085:12;11036:63;10983:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "886200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "174",
								"balanceOf(address)": "2863",
								"close()": "32137",
								"getName()": "infinite",
								"getPrice()": "2481",
								"getSymbol()": "infinite",
								"mint(address,uint256)": "infinite",
								"sell(uint256)": "infinite",
								"totalSupply()": "2482",
								"transfer(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 92,
									"end": 3819,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 571,
									"end": 1079,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 571,
									"end": 1079,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 571,
									"end": 1079,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 571,
									"end": 1079,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 571,
									"end": 1079,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 571,
									"end": 1079,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 571,
									"end": 1079,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 571,
									"end": 1079,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 571,
									"end": 1079,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 571,
									"end": 1079,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 571,
									"end": 1079,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 634,
									"end": 655,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 634,
									"end": 655,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 634,
									"end": 655,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 634,
									"end": 655,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 634,
									"end": 655,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 634,
									"end": 655,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 634,
									"end": 655,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 634,
									"end": 655,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 634,
									"end": 655,
									"name": "PUSH",
									"source": 1,
									"value": "C"
								},
								{
									"begin": 634,
									"end": 655,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 634,
									"end": 655,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 634,
									"end": 655,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 634,
									"end": 655,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 634,
									"end": 655,
									"name": "PUSH",
									"source": 1,
									"value": "437573746F6D20546F6B656E0000000000000000000000000000000000000000"
								},
								{
									"begin": 634,
									"end": 655,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 634,
									"end": 655,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 634,
									"end": 655,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 634,
									"end": 638,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 634,
									"end": 655,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 634,
									"end": 655,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 634,
									"end": 655,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 634,
									"end": 655,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 634,
									"end": 655,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 634,
									"end": 655,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 634,
									"end": 655,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 634,
									"end": 655,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 634,
									"end": 655,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 634,
									"end": 655,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 634,
									"end": 655,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 634,
									"end": 655,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 634,
									"end": 655,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 634,
									"end": 655,
									"name": "tag",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 634,
									"end": 655,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 634,
									"end": 655,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 666,
									"end": 679,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 666,
									"end": 679,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 666,
									"end": 679,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 666,
									"end": 679,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 666,
									"end": 679,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 666,
									"end": 679,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 666,
									"end": 679,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 666,
									"end": 679,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 666,
									"end": 679,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 666,
									"end": 679,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 666,
									"end": 679,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 666,
									"end": 679,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 666,
									"end": 679,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 666,
									"end": 679,
									"name": "PUSH",
									"source": 1,
									"value": "4354000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 666,
									"end": 679,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 666,
									"end": 679,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 666,
									"end": 679,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 666,
									"end": 672,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 666,
									"end": 679,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 666,
									"end": 679,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 666,
									"end": 679,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 666,
									"end": 679,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 666,
									"end": 679,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 666,
									"end": 679,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 666,
									"end": 679,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 666,
									"end": 679,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 666,
									"end": 679,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 666,
									"end": 679,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 666,
									"end": 679,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 666,
									"end": 679,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 666,
									"end": 679,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 666,
									"end": 679,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 666,
									"end": 679,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 666,
									"end": 679,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 698,
									"end": 701,
									"name": "PUSH",
									"source": 1,
									"value": "258"
								},
								{
									"begin": 690,
									"end": 695,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 690,
									"end": 701,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 690,
									"end": 701,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 690,
									"end": 701,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 690,
									"end": 701,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 802,
									"end": 812,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 785,
									"end": 790,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 785,
									"end": 790,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 785,
									"end": 813,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 785,
									"end": 813,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 785,
									"end": 813,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 785,
									"end": 813,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 785,
									"end": 813,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 785,
									"end": 813,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 785,
									"end": 813,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 785,
									"end": 813,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 785,
									"end": 813,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 785,
									"end": 813,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 785,
									"end": 813,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 785,
									"end": 813,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 785,
									"end": 813,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 785,
									"end": 813,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 785,
									"end": 813,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 785,
									"end": 813,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 785,
									"end": 813,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 785,
									"end": 813,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 890,
									"end": 894,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 877,
									"end": 882,
									"name": "PUSH",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 877,
									"end": 889,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 883,
									"end": 888,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 883,
									"end": 888,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 883,
									"end": 888,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 883,
									"end": 888,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 883,
									"end": 888,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 883,
									"end": 888,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 883,
									"end": 888,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 883,
									"end": 888,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 883,
									"end": 888,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 883,
									"end": 888,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 883,
									"end": 888,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 877,
									"end": 889,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 877,
									"end": 889,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 877,
									"end": 889,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 877,
									"end": 889,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 877,
									"end": 889,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 877,
									"end": 889,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 877,
									"end": 889,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 877,
									"end": 889,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 877,
									"end": 889,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 877,
									"end": 889,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 877,
									"end": 889,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 877,
									"end": 889,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 877,
									"end": 889,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 877,
									"end": 889,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 877,
									"end": 889,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 877,
									"end": 889,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 877,
									"end": 894,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 877,
									"end": 894,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 877,
									"end": 894,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 877,
									"end": 894,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 877,
									"end": 894,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 877,
									"end": 894,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 877,
									"end": 894,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 877,
									"end": 894,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 877,
									"end": 894,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 877,
									"end": 894,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 877,
									"end": 894,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 877,
									"end": 894,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 877,
									"end": 894,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 877,
									"end": 894,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 877,
									"end": 894,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 877,
									"end": 894,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 877,
									"end": 894,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 877,
									"end": 894,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 984,
									"end": 991,
									"name": "PUSH",
									"source": 1,
									"value": "F4240"
								},
								{
									"begin": 970,
									"end": 981,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 970,
									"end": 991,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 970,
									"end": 991,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 970,
									"end": 991,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 970,
									"end": 991,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1020,
									"end": 1031,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1020,
									"end": 1031,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 1002,
									"end": 1010,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1002,
									"end": 1017,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1011,
									"end": 1016,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1011,
									"end": 1016,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1011,
									"end": 1016,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1011,
									"end": 1016,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 1011,
									"end": 1016,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1011,
									"end": 1016,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 1011,
									"end": 1016,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 1011,
									"end": 1016,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1011,
									"end": 1016,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 1011,
									"end": 1016,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1011,
									"end": 1016,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1002,
									"end": 1017,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1002,
									"end": 1017,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1002,
									"end": 1017,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1002,
									"end": 1017,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1002,
									"end": 1017,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1002,
									"end": 1017,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1002,
									"end": 1017,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1002,
									"end": 1017,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1002,
									"end": 1017,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1002,
									"end": 1017,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1002,
									"end": 1017,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1002,
									"end": 1017,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1002,
									"end": 1017,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1002,
									"end": 1017,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1002,
									"end": 1017,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 1002,
									"end": 1031,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1002,
									"end": 1031,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1002,
									"end": 1031,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1002,
									"end": 1031,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1052,
									"end": 1057,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1052,
									"end": 1057,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1052,
									"end": 1057,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 1052,
									"end": 1057,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1052,
									"end": 1057,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 1052,
									"end": 1057,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 1052,
									"end": 1057,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1052,
									"end": 1057,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 1052,
									"end": 1057,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1052,
									"end": 1057,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1047,
									"end": 1071,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1047,
									"end": 1071,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1047,
									"end": 1071,
									"name": "PUSH",
									"source": 1,
									"value": "F6798A560793A54C3BCFE86A93CDE1E73087D944C0EA20544137D4121396885"
								},
								{
									"begin": 1059,
									"end": 1070,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1059,
									"end": 1070,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 1047,
									"end": 1071,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1047,
									"end": 1071,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1047,
									"end": 1071,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1047,
									"end": 1071,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1047,
									"end": 1071,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1047,
									"end": 1071,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1047,
									"end": 1071,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1047,
									"end": 1071,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1047,
									"end": 1071,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1047,
									"end": 1071,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1047,
									"end": 1071,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1047,
									"end": 1071,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1047,
									"end": 1071,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1047,
									"end": 1071,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1047,
									"end": 1071,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1047,
									"end": 1071,
									"name": "LOG2",
									"source": 1
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "tag",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 7,
									"end": 125,
									"name": "tag",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 7,
									"end": 125,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 94,
									"end": 118,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 112,
									"end": 117,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 94,
									"end": 118,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 94,
									"end": 118,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 94,
									"end": 118,
									"name": "tag",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 94,
									"end": 118,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 89,
									"end": 92,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 82,
									"end": 119,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7,
									"end": 125,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7,
									"end": 125,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7,
									"end": 125,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 131,
									"end": 353,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 131,
									"end": 353,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 224,
									"end": 228,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 262,
									"end": 264,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 251,
									"end": 260,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 247,
									"end": 265,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 239,
									"end": 265,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 239,
									"end": 265,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 275,
									"end": 346,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 343,
									"end": 344,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 332,
									"end": 341,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 328,
									"end": 345,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 319,
									"end": 325,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 275,
									"end": 346,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 275,
									"end": 346,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 275,
									"end": 346,
									"name": "tag",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 275,
									"end": 346,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 131,
									"end": 353,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 131,
									"end": 353,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 131,
									"end": 353,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 131,
									"end": 353,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 131,
									"end": 353,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 359,
									"end": 436,
									"name": "tag",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 359,
									"end": 436,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 396,
									"end": 403,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 425,
									"end": 430,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 414,
									"end": 430,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 414,
									"end": 430,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 359,
									"end": 436,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 359,
									"end": 436,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 359,
									"end": 436,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 359,
									"end": 436,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 442,
									"end": 762,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 442,
									"end": 762,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 486,
									"end": 492,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 523,
									"end": 524,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 517,
									"end": 521,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 513,
									"end": 525,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 503,
									"end": 525,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 503,
									"end": 525,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 570,
									"end": 571,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 564,
									"end": 568,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 560,
									"end": 572,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 591,
									"end": 609,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 581,
									"end": 662,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 581,
									"end": 662,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 647,
									"end": 651,
									"name": "PUSH",
									"source": 2,
									"value": "7F"
								},
								{
									"begin": 639,
									"end": 645,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 635,
									"end": 652,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 625,
									"end": 652,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 625,
									"end": 652,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 581,
									"end": 662,
									"name": "tag",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 581,
									"end": 662,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 709,
									"end": 711,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 701,
									"end": 707,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 698,
									"end": 712,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 678,
									"end": 696,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 675,
									"end": 713,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 672,
									"end": 756,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 672,
									"end": 756,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 672,
									"end": 756,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 728,
									"end": 746,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 728,
									"end": 746,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 728,
									"end": 746,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 728,
									"end": 746,
									"name": "tag",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 728,
									"end": 746,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 672,
									"end": 756,
									"name": "tag",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 672,
									"end": 756,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 493,
									"end": 762,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 442,
									"end": 762,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 442,
									"end": 762,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 442,
									"end": 762,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 442,
									"end": 762,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 768,
									"end": 948,
									"name": "tag",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 768,
									"end": 948,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 816,
									"end": 893,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 813,
									"end": 814,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 806,
									"end": 894,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 913,
									"end": 917,
									"name": "PUSH",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 910,
									"end": 911,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 903,
									"end": 918,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 937,
									"end": 941,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 934,
									"end": 935,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 927,
									"end": 942,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 92,
									"end": 3819,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122095a4d0e53d2d3dc54d939c2ffe5db2236a58f79fa5301625a504a1be7276b9b264736f6c63430008070033",
									".code": [
										{
											"begin": 92,
											"end": 3819,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 92,
											"end": 3819,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 92,
											"end": 3819,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 92,
											"end": 3819,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 92,
											"end": 3819,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 92,
											"end": 3819,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 92,
											"end": 3819,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 92,
											"end": 3819,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 92,
											"end": 3819,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 92,
											"end": 3819,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 92,
											"end": 3819,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 92,
											"end": 3819,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 92,
											"end": 3819,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 92,
											"end": 3819,
											"name": "PUSH",
											"source": 1,
											"value": "43D726D6"
										},
										{
											"begin": 92,
											"end": 3819,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 92,
											"end": 3819,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 92,
											"end": 3819,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 92,
											"end": 3819,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 92,
											"end": 3819,
											"name": "PUSH",
											"source": 1,
											"value": "43D726D6"
										},
										{
											"begin": 92,
											"end": 3819,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 92,
											"end": 3819,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 92,
											"end": 3819,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 92,
											"end": 3819,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 92,
											"end": 3819,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 92,
											"end": 3819,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 92,
											"end": 3819,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 92,
											"end": 3819,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 92,
											"end": 3819,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 92,
											"end": 3819,
											"name": "PUSH",
											"source": 1,
											"value": "98D5FDCA"
										},
										{
											"begin": 92,
											"end": 3819,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 92,
											"end": 3819,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 92,
											"end": 3819,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 92,
											"end": 3819,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 92,
											"end": 3819,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 92,
											"end": 3819,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 92,
											"end": 3819,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 92,
											"end": 3819,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 92,
											"end": 3819,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 92,
											"end": 3819,
											"name": "PUSH",
											"source": 1,
											"value": "E4849B32"
										},
										{
											"begin": 92,
											"end": 3819,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 92,
											"end": 3819,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 92,
											"end": 3819,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 92,
											"end": 3819,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 92,
											"end": 3819,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 92,
											"end": 3819,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 92,
											"end": 3819,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 92,
											"end": 3819,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 92,
											"end": 3819,
											"name": "PUSH",
											"source": 1,
											"value": "15070401"
										},
										{
											"begin": 92,
											"end": 3819,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 92,
											"end": 3819,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 92,
											"end": 3819,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 92,
											"end": 3819,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 92,
											"end": 3819,
											"name": "PUSH",
											"source": 1,
											"value": "17D7DE7C"
										},
										{
											"begin": 92,
											"end": 3819,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 92,
											"end": 3819,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 92,
											"end": 3819,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 92,
											"end": 3819,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 92,
											"end": 3819,
											"name": "PUSH",
											"source": 1,
											"value": "18160DDD"
										},
										{
											"begin": 92,
											"end": 3819,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 92,
											"end": 3819,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 92,
											"end": 3819,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 92,
											"end": 3819,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 92,
											"end": 3819,
											"name": "PUSH",
											"source": 1,
											"value": "40C10F19"
										},
										{
											"begin": 92,
											"end": 3819,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 92,
											"end": 3819,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 92,
											"end": 3819,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 92,
											"end": 3819,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 92,
											"end": 3819,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 92,
											"end": 3819,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 92,
											"end": 3819,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 92,
											"end": 3819,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 92,
											"end": 3819,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 92,
											"end": 3819,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1291,
											"end": 1388,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1291,
											"end": 1388,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1291,
											"end": 1388,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1291,
											"end": 1388,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1291,
											"end": 1388,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1291,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1291,
											"end": 1388,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1291,
											"end": 1388,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1291,
											"end": 1388,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1291,
											"end": 1388,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1291,
											"end": 1388,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1291,
											"end": 1388,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1291,
											"end": 1388,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1291,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1291,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1291,
											"end": 1388,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1291,
											"end": 1388,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1291,
											"end": 1388,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1291,
											"end": 1388,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1291,
											"end": 1388,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1291,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1291,
											"end": 1388,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1291,
											"end": 1388,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1291,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1291,
											"end": 1388,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1291,
											"end": 1388,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1291,
											"end": 1388,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1291,
											"end": 1388,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1291,
											"end": 1388,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1291,
											"end": 1388,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1291,
											"end": 1388,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1291,
											"end": 1388,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1291,
											"end": 1388,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1291,
											"end": 1388,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1195,
											"end": 1283,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1195,
											"end": 1283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1195,
											"end": 1283,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1195,
											"end": 1283,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1195,
											"end": 1283,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1195,
											"end": 1283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1195,
											"end": 1283,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1195,
											"end": 1283,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1195,
											"end": 1283,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1195,
											"end": 1283,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1195,
											"end": 1283,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1195,
											"end": 1283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1195,
											"end": 1283,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1195,
											"end": 1283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1195,
											"end": 1283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1195,
											"end": 1283,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1195,
											"end": 1283,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1195,
											"end": 1283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1195,
											"end": 1283,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1195,
											"end": 1283,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1195,
											"end": 1283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1195,
											"end": 1283,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1195,
											"end": 1283,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1195,
											"end": 1283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1195,
											"end": 1283,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1195,
											"end": 1283,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1195,
											"end": 1283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1195,
											"end": 1283,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1195,
											"end": 1283,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1195,
											"end": 1283,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1195,
											"end": 1283,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1195,
											"end": 1283,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1195,
											"end": 1283,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1195,
											"end": 1283,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1187,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1091,
											"end": 1187,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1187,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1187,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1187,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1187,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1091,
											"end": 1187,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1187,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1091,
											"end": 1187,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1187,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1187,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1091,
											"end": 1187,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1187,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1187,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1091,
											"end": 1187,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1091,
											"end": 1187,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1091,
											"end": 1187,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1091,
											"end": 1187,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1187,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1091,
											"end": 1187,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1187,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1091,
											"end": 1187,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1187,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1187,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1091,
											"end": 1187,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1091,
											"end": 1187,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1091,
											"end": 1187,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1187,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1091,
											"end": 1187,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1187,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1187,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1187,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1187,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1187,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2001,
											"end": 2320,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 2001,
											"end": 2320,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2001,
											"end": 2320,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2001,
											"end": 2320,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2001,
											"end": 2320,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2001,
											"end": 2320,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 2001,
											"end": 2320,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2001,
											"end": 2320,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2001,
											"end": 2320,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2001,
											"end": 2320,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2001,
											"end": 2320,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 2001,
											"end": 2320,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2001,
											"end": 2320,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2001,
											"end": 2320,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2001,
											"end": 2320,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2001,
											"end": 2320,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2001,
											"end": 2320,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2001,
											"end": 2320,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2001,
											"end": 2320,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2001,
											"end": 2320,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2001,
											"end": 2320,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2001,
											"end": 2320,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 2001,
											"end": 2320,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2001,
											"end": 2320,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2001,
											"end": 2320,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 2001,
											"end": 2320,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2001,
											"end": 2320,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 2001,
											"end": 2320,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2001,
											"end": 2320,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 2001,
											"end": 2320,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2001,
											"end": 2320,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2001,
											"end": 2320,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2001,
											"end": 2320,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2001,
											"end": 2320,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2001,
											"end": 2320,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 2001,
											"end": 2320,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2001,
											"end": 2320,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2001,
											"end": 2320,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 2001,
											"end": 2320,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2001,
											"end": 2320,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 2001,
											"end": 2320,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2001,
											"end": 2320,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2001,
											"end": 2320,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2001,
											"end": 2320,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2001,
											"end": 2320,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2001,
											"end": 2320,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2001,
											"end": 2320,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2001,
											"end": 2320,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3457,
											"end": 3727,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 3457,
											"end": 3727,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3457,
											"end": 3727,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 3457,
											"end": 3727,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3457,
											"end": 3727,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3457,
											"end": 3727,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 3457,
											"end": 3727,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3457,
											"end": 3727,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3457,
											"end": 3727,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3457,
											"end": 3727,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3457,
											"end": 3727,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 3457,
											"end": 3727,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3457,
											"end": 3727,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3457,
											"end": 3727,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 3457,
											"end": 3727,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 3457,
											"end": 3727,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3457,
											"end": 3727,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 3457,
											"end": 3727,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3457,
											"end": 3727,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 2381,
											"end": 2497,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 2381,
											"end": 2497,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2381,
											"end": 2497,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2381,
											"end": 2497,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2381,
											"end": 2497,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2381,
											"end": 2497,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2381,
											"end": 2497,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2381,
											"end": 2497,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2381,
											"end": 2497,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2381,
											"end": 2497,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2381,
											"end": 2497,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2381,
											"end": 2497,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2381,
											"end": 2497,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2381,
											"end": 2497,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2381,
											"end": 2497,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2381,
											"end": 2497,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2381,
											"end": 2497,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2381,
											"end": 2497,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2381,
											"end": 2497,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2381,
											"end": 2497,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2381,
											"end": 2497,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2381,
											"end": 2497,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 2381,
											"end": 2497,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2381,
											"end": 2497,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2381,
											"end": 2497,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 2381,
											"end": 2497,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2381,
											"end": 2497,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 2381,
											"end": 2497,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2381,
											"end": 2497,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 2381,
											"end": 2497,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2381,
											"end": 2497,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2381,
											"end": 2497,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2381,
											"end": 2497,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2381,
											"end": 2497,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2381,
											"end": 2497,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2381,
											"end": 2497,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2381,
											"end": 2497,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2381,
											"end": 2497,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 2381,
											"end": 2497,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2381,
											"end": 2497,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2381,
											"end": 2497,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2381,
											"end": 2497,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2381,
											"end": 2497,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2381,
											"end": 2497,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2381,
											"end": 2497,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2381,
											"end": 2497,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2381,
											"end": 2497,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2381,
											"end": 2497,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 1485,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1396,
											"end": 1485,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 1485,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 1485,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 1485,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 1485,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1396,
											"end": 1485,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 1485,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1396,
											"end": 1485,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 1485,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 1485,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1396,
											"end": 1485,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 1485,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 1485,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1396,
											"end": 1485,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1396,
											"end": 1485,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1396,
											"end": 1485,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1396,
											"end": 1485,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 1485,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1396,
											"end": 1485,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 1485,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1396,
											"end": 1485,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 1485,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 1485,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1396,
											"end": 1485,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1396,
											"end": 1485,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1396,
											"end": 1485,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 1485,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1396,
											"end": 1485,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 1485,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 1485,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 1485,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 1485,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 1485,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1493,
											"end": 1989,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1493,
											"end": 1989,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1493,
											"end": 1989,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1493,
											"end": 1989,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1493,
											"end": 1989,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1493,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1493,
											"end": 1989,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1493,
											"end": 1989,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1493,
											"end": 1989,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1493,
											"end": 1989,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1493,
											"end": 1989,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1493,
											"end": 1989,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1493,
											"end": 1989,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1493,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1493,
											"end": 1989,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1493,
											"end": 1989,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1493,
											"end": 1989,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1493,
											"end": 1989,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1493,
											"end": 1989,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1493,
											"end": 1989,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1493,
											"end": 1989,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1493,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1493,
											"end": 1989,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1493,
											"end": 1989,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1493,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1493,
											"end": 1989,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1493,
											"end": 1989,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1493,
											"end": 1989,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1493,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1493,
											"end": 1989,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1493,
											"end": 1989,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1493,
											"end": 1989,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1493,
											"end": 1989,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1493,
											"end": 1989,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1493,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1493,
											"end": 1989,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1493,
											"end": 1989,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1493,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1493,
											"end": 1989,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1493,
											"end": 1989,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1493,
											"end": 1989,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1493,
											"end": 1989,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1493,
											"end": 1989,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1493,
											"end": 1989,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1493,
											"end": 1989,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1493,
											"end": 1989,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1493,
											"end": 1989,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1493,
											"end": 1989,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 3449,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2503,
											"end": 3449,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 3449,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2503,
											"end": 3449,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2503,
											"end": 3449,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 3449,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 3449,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 3449,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 3449,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 3449,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 3449,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2503,
											"end": 3449,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 3449,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 3449,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 2503,
											"end": 3449,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2503,
											"end": 3449,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2503,
											"end": 3449,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 3449,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 2503,
											"end": 3449,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2503,
											"end": 3449,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2503,
											"end": 3449,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 3449,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2503,
											"end": 3449,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 3449,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 2503,
											"end": 3449,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 3449,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 3449,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 2503,
											"end": 3449,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2503,
											"end": 3449,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 2503,
											"end": 3449,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 3449,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2503,
											"end": 3449,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 3449,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 3449,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 3449,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 3449,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 3449,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1291,
											"end": 1388,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1291,
											"end": 1388,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1373,
											"end": 1379,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1379,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1291,
											"end": 1388,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1291,
											"end": 1388,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1195,
											"end": 1283,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1195,
											"end": 1283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1233,
											"end": 1246,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1271,
											"end": 1275,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1264,
											"end": 1275,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1275,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 1264,
											"end": 1275,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1264,
											"end": 1275,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1264,
											"end": 1275,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 1264,
											"end": 1275,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1275,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1275,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1264,
											"end": 1275,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1275,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1264,
											"end": 1275,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1275,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1275,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1275,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1275,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1264,
											"end": 1275,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1275,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1264,
											"end": 1275,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1275,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1275,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1275,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1275,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1264,
											"end": 1275,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1275,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1275,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1275,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1275,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1275,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1275,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1275,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1275,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1264,
											"end": 1275,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1275,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1275,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1275,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1264,
											"end": 1275,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1264,
											"end": 1275,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1264,
											"end": 1275,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1264,
											"end": 1275,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1275,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1275,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 1264,
											"end": 1275,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1275,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1275,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1264,
											"end": 1275,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 1264,
											"end": 1275,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1275,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1264,
											"end": 1275,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1275,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1275,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1275,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1275,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1275,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1275,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1275,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1275,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1264,
											"end": 1275,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1275,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 1264,
											"end": 1275,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1275,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 1264,
											"end": 1275,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1275,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1275,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1275,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1275,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1275,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1264,
											"end": 1275,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1275,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1264,
											"end": 1275,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1264,
											"end": 1275,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1275,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1275,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1264,
											"end": 1275,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1275,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1275,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1275,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1275,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1275,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1275,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1264,
											"end": 1275,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1275,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1275,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1264,
											"end": 1275,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1275,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1275,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1275,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1264,
											"end": 1275,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1275,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1275,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1275,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1275,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1264,
											"end": 1275,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1275,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1275,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1275,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1275,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 1264,
											"end": 1275,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1275,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1275,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1275,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1275,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1275,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1275,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1275,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1195,
											"end": 1283,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1195,
											"end": 1283,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1091,
											"end": 1187,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1091,
											"end": 1187,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1134,
											"end": 1141,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1179,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1168,
											"end": 1179,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1161,
											"end": 1179,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1161,
											"end": 1179,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1187,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1187,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2001,
											"end": 2320,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 2001,
											"end": 2320,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2060,
											"end": 2064,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2111,
											"end": 2115,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2090,
											"end": 2115,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2090,
											"end": 2115,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2090,
											"end": 2095,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 2090,
											"end": 2107,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2096,
											"end": 2106,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 2090,
											"end": 2107,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2090,
											"end": 2107,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2090,
											"end": 2107,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2090,
											"end": 2107,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2090,
											"end": 2107,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2090,
											"end": 2107,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2090,
											"end": 2107,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2090,
											"end": 2107,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2090,
											"end": 2107,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2090,
											"end": 2107,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2090,
											"end": 2107,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2090,
											"end": 2107,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2090,
											"end": 2107,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2090,
											"end": 2107,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2090,
											"end": 2107,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2090,
											"end": 2107,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2090,
											"end": 2107,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2090,
											"end": 2107,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2090,
											"end": 2107,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2090,
											"end": 2107,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2090,
											"end": 2107,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2090,
											"end": 2107,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2090,
											"end": 2107,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2090,
											"end": 2107,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 2090,
											"end": 2107,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2090,
											"end": 2115,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2090,
											"end": 2115,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2090,
											"end": 2115,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2082,
											"end": 2154,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 2082,
											"end": 2154,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2082,
											"end": 2154,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2082,
											"end": 2154,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2082,
											"end": 2154,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2082,
											"end": 2154,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2082,
											"end": 2154,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2082,
											"end": 2154,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2082,
											"end": 2154,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2082,
											"end": 2154,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 2082,
											"end": 2154,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2082,
											"end": 2154,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2082,
											"end": 2154,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2082,
											"end": 2154,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 2082,
											"end": 2154,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2082,
											"end": 2154,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2082,
											"end": 2154,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2082,
											"end": 2154,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2082,
											"end": 2154,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2082,
											"end": 2154,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2082,
											"end": 2154,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2082,
											"end": 2154,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2082,
											"end": 2154,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 2082,
											"end": 2154,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2179,
											"end": 2201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 2195,
											"end": 2200,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2179,
											"end": 2190,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2179,
											"end": 2190,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2179,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2179,
											"end": 2194,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2179,
											"end": 2201,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2179,
											"end": 2201,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2179,
											"end": 2201,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2179,
											"end": 2201,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2179,
											"end": 2201,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2179,
											"end": 2201,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 2179,
											"end": 2201,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2165,
											"end": 2176,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2165,
											"end": 2201,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2165,
											"end": 2201,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2165,
											"end": 2201,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2165,
											"end": 2201,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2228,
											"end": 2255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 2249,
											"end": 2254,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2229,
											"end": 2237,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2229,
											"end": 2243,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2239,
											"end": 2241,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2229,
											"end": 2243,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2229,
											"end": 2243,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2229,
											"end": 2243,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2229,
											"end": 2243,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2229,
											"end": 2243,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2229,
											"end": 2243,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2229,
											"end": 2243,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2229,
											"end": 2243,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2229,
											"end": 2243,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2229,
											"end": 2243,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2229,
											"end": 2243,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2229,
											"end": 2243,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2229,
											"end": 2243,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2229,
											"end": 2243,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2229,
											"end": 2243,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2229,
											"end": 2243,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2228,
											"end": 2248,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2228,
											"end": 2248,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2228,
											"end": 2255,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2228,
											"end": 2255,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2228,
											"end": 2255,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2228,
											"end": 2255,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2228,
											"end": 2255,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2228,
											"end": 2255,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 2228,
											"end": 2255,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2212,
											"end": 2220,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2212,
											"end": 2224,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2221,
											"end": 2223,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2212,
											"end": 2224,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2212,
											"end": 2224,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2212,
											"end": 2224,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2212,
											"end": 2224,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2212,
											"end": 2224,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2212,
											"end": 2224,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2212,
											"end": 2224,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2212,
											"end": 2224,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2212,
											"end": 2224,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2212,
											"end": 2224,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2212,
											"end": 2224,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2212,
											"end": 2224,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2212,
											"end": 2224,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2212,
											"end": 2224,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2212,
											"end": 2224,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2212,
											"end": 2255,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2212,
											"end": 2255,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2212,
											"end": 2255,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2212,
											"end": 2255,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2278,
											"end": 2280,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2271,
											"end": 2289,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2271,
											"end": 2289,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2271,
											"end": 2289,
											"name": "PUSH",
											"source": 1,
											"value": "F6798A560793A54C3BCFE86A93CDE1E73087D944C0EA20544137D4121396885"
										},
										{
											"begin": 2283,
											"end": 2288,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2271,
											"end": 2289,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2271,
											"end": 2289,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2271,
											"end": 2289,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2271,
											"end": 2289,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2271,
											"end": 2289,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2271,
											"end": 2289,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 2271,
											"end": 2289,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2271,
											"end": 2289,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2271,
											"end": 2289,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2271,
											"end": 2289,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2271,
											"end": 2289,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2271,
											"end": 2289,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2271,
											"end": 2289,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2271,
											"end": 2289,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2271,
											"end": 2289,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2271,
											"end": 2289,
											"name": "LOG2",
											"source": 1
										},
										{
											"begin": 2308,
											"end": 2312,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2301,
											"end": 2312,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2301,
											"end": 2312,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2001,
											"end": 2320,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2001,
											"end": 2320,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2001,
											"end": 2320,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2001,
											"end": 2320,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2001,
											"end": 2320,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3457,
											"end": 3727,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 3457,
											"end": 3727,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3569,
											"end": 3573,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3548,
											"end": 3573,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3548,
											"end": 3573,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3548,
											"end": 3553,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 3548,
											"end": 3565,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3554,
											"end": 3564,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 3548,
											"end": 3565,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3548,
											"end": 3565,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3548,
											"end": 3565,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3548,
											"end": 3565,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3548,
											"end": 3565,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3548,
											"end": 3565,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3548,
											"end": 3565,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3548,
											"end": 3565,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3548,
											"end": 3565,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3548,
											"end": 3565,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3548,
											"end": 3565,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3548,
											"end": 3565,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3548,
											"end": 3565,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3548,
											"end": 3565,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3548,
											"end": 3565,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3548,
											"end": 3565,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3548,
											"end": 3565,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3548,
											"end": 3565,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3548,
											"end": 3565,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3548,
											"end": 3565,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3548,
											"end": 3565,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3548,
											"end": 3565,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3548,
											"end": 3565,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3548,
											"end": 3565,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3548,
											"end": 3565,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3548,
											"end": 3573,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3548,
											"end": 3573,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3548,
											"end": 3573,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3540,
											"end": 3617,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 3540,
											"end": 3617,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3540,
											"end": 3617,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3540,
											"end": 3617,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3540,
											"end": 3617,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3540,
											"end": 3617,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3540,
											"end": 3617,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3540,
											"end": 3617,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3540,
											"end": 3617,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3540,
											"end": 3617,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 3540,
											"end": 3617,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3540,
											"end": 3617,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3540,
											"end": 3617,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3540,
											"end": 3617,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 3540,
											"end": 3617,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3540,
											"end": 3617,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3540,
											"end": 3617,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3540,
											"end": 3617,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3540,
											"end": 3617,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3540,
											"end": 3617,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3540,
											"end": 3617,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3540,
											"end": 3617,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3540,
											"end": 3617,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 3540,
											"end": 3617,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3718,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3713,
											"end": 3718,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3718,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3718,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3718,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3713,
											"end": 3718,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3718,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3718,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3718,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3713,
											"end": 3718,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3700,
											"end": 3719,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3700,
											"end": 3719,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3700,
											"end": 3719,
											"name": "SELFDESTRUCT",
											"source": 1
										},
										{
											"begin": 2381,
											"end": 2497,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 2381,
											"end": 2497,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2439,
											"end": 2446,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2471,
											"end": 2479,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2471,
											"end": 2489,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2480,
											"end": 2488,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2471,
											"end": 2489,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2471,
											"end": 2489,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2471,
											"end": 2489,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2471,
											"end": 2489,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2471,
											"end": 2489,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2471,
											"end": 2489,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2471,
											"end": 2489,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2471,
											"end": 2489,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2471,
											"end": 2489,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2471,
											"end": 2489,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2471,
											"end": 2489,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2471,
											"end": 2489,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2471,
											"end": 2489,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2471,
											"end": 2489,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2471,
											"end": 2489,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2471,
											"end": 2489,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2464,
											"end": 2489,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2464,
											"end": 2489,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2381,
											"end": 2497,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2381,
											"end": 2497,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2381,
											"end": 2497,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2381,
											"end": 2497,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1396,
											"end": 1485,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1396,
											"end": 1485,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1445,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1471,
											"end": 1476,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1471,
											"end": 1476,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1464,
											"end": 1476,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1464,
											"end": 1476,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 1485,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 1485,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1493,
											"end": 1989,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1493,
											"end": 1989,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1554,
											"end": 1558,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1663,
											"end": 1664,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1628,
											"end": 1659,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 1653,
											"end": 1658,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1628,
											"end": 1636,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1628,
											"end": 1648,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1637,
											"end": 1647,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1628,
											"end": 1648,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1628,
											"end": 1648,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1628,
											"end": 1648,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1628,
											"end": 1648,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1628,
											"end": 1648,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1628,
											"end": 1648,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1628,
											"end": 1648,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1628,
											"end": 1648,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1628,
											"end": 1648,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1628,
											"end": 1648,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1628,
											"end": 1648,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1628,
											"end": 1648,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1628,
											"end": 1648,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1628,
											"end": 1648,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1628,
											"end": 1648,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1628,
											"end": 1648,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1628,
											"end": 1652,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 1628,
											"end": 1652,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1628,
											"end": 1659,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1628,
											"end": 1659,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1628,
											"end": 1659,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1628,
											"end": 1659,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1628,
											"end": 1659,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1628,
											"end": 1659,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 1628,
											"end": 1659,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1628,
											"end": 1664,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1628,
											"end": 1664,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1620,
											"end": 1703,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 1620,
											"end": 1703,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1620,
											"end": 1703,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1620,
											"end": 1703,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1620,
											"end": 1703,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1620,
											"end": 1703,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1620,
											"end": 1703,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1620,
											"end": 1703,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1620,
											"end": 1703,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1620,
											"end": 1703,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 1620,
											"end": 1703,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1620,
											"end": 1703,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 1620,
											"end": 1703,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1620,
											"end": 1703,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 1620,
											"end": 1703,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1620,
											"end": 1703,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1620,
											"end": 1703,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1620,
											"end": 1703,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1620,
											"end": 1703,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1620,
											"end": 1703,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1620,
											"end": 1703,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1620,
											"end": 1703,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1620,
											"end": 1703,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 1620,
											"end": 1703,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1787,
											"end": 1818,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 1812,
											"end": 1817,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1787,
											"end": 1795,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1787,
											"end": 1807,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1796,
											"end": 1806,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1787,
											"end": 1807,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1787,
											"end": 1807,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1787,
											"end": 1807,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1787,
											"end": 1807,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1787,
											"end": 1807,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1787,
											"end": 1807,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1787,
											"end": 1807,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1787,
											"end": 1807,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1787,
											"end": 1807,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1787,
											"end": 1807,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1787,
											"end": 1807,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1787,
											"end": 1807,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1787,
											"end": 1807,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1787,
											"end": 1807,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1787,
											"end": 1807,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1787,
											"end": 1807,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1787,
											"end": 1811,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 1787,
											"end": 1811,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1787,
											"end": 1818,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1787,
											"end": 1818,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1787,
											"end": 1818,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1787,
											"end": 1818,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1787,
											"end": 1818,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1787,
											"end": 1818,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 1787,
											"end": 1818,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1764,
											"end": 1772,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1764,
											"end": 1784,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1773,
											"end": 1783,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1764,
											"end": 1784,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1764,
											"end": 1784,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1764,
											"end": 1784,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1764,
											"end": 1784,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1764,
											"end": 1784,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1764,
											"end": 1784,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1764,
											"end": 1784,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1764,
											"end": 1784,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1764,
											"end": 1784,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1764,
											"end": 1784,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1764,
											"end": 1784,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1764,
											"end": 1784,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1764,
											"end": 1784,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1764,
											"end": 1784,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1764,
											"end": 1784,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1764,
											"end": 1818,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1764,
											"end": 1818,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1764,
											"end": 1818,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1764,
											"end": 1818,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1844,
											"end": 1867,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 1861,
											"end": 1866,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1844,
											"end": 1852,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1844,
											"end": 1856,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1853,
											"end": 1855,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1844,
											"end": 1856,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1844,
											"end": 1856,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1844,
											"end": 1856,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1844,
											"end": 1856,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1844,
											"end": 1856,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1844,
											"end": 1856,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1844,
											"end": 1856,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1844,
											"end": 1856,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1844,
											"end": 1856,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1844,
											"end": 1856,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1844,
											"end": 1856,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1844,
											"end": 1856,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1844,
											"end": 1856,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1844,
											"end": 1856,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1844,
											"end": 1856,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1844,
											"end": 1856,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1844,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 1844,
											"end": 1860,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1844,
											"end": 1867,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1844,
											"end": 1867,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1844,
											"end": 1867,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1844,
											"end": 1867,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1844,
											"end": 1867,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1844,
											"end": 1867,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 1844,
											"end": 1867,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1829,
											"end": 1837,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1829,
											"end": 1841,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1838,
											"end": 1840,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1829,
											"end": 1841,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1829,
											"end": 1841,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1829,
											"end": 1841,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1829,
											"end": 1841,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1829,
											"end": 1841,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1829,
											"end": 1841,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1829,
											"end": 1841,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1829,
											"end": 1841,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1829,
											"end": 1841,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1829,
											"end": 1841,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1829,
											"end": 1841,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1829,
											"end": 1841,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1829,
											"end": 1841,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1829,
											"end": 1841,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1829,
											"end": 1841,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1829,
											"end": 1867,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1829,
											"end": 1867,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1829,
											"end": 1867,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1829,
											"end": 1867,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1948,
											"end": 1950,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1927,
											"end": 1958,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1927,
											"end": 1958,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1936,
											"end": 1946,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1927,
											"end": 1958,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1927,
											"end": 1958,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1927,
											"end": 1958,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 1952,
											"end": 1957,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1927,
											"end": 1958,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1927,
											"end": 1958,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1927,
											"end": 1958,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 1927,
											"end": 1958,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1927,
											"end": 1958,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1927,
											"end": 1958,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1927,
											"end": 1958,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1927,
											"end": 1958,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 1927,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1927,
											"end": 1958,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1927,
											"end": 1958,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1927,
											"end": 1958,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1927,
											"end": 1958,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1927,
											"end": 1958,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1927,
											"end": 1958,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1927,
											"end": 1958,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 1976,
											"end": 1980,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1969,
											"end": 1980,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1969,
											"end": 1980,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1493,
											"end": 1989,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1493,
											"end": 1989,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1493,
											"end": 1989,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1493,
											"end": 1989,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1493,
											"end": 1989,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2503,
											"end": 3449,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 2503,
											"end": 3449,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2556,
											"end": 2560,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2619,
											"end": 2620,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2586,
											"end": 2617,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 2611,
											"end": 2616,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2586,
											"end": 2594,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2586,
											"end": 2606,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2595,
											"end": 2605,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 2586,
											"end": 2606,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2586,
											"end": 2606,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2586,
											"end": 2606,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2586,
											"end": 2606,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2586,
											"end": 2606,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2586,
											"end": 2606,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2586,
											"end": 2606,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2586,
											"end": 2606,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2586,
											"end": 2606,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2586,
											"end": 2606,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2586,
											"end": 2606,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2586,
											"end": 2606,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2586,
											"end": 2606,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2586,
											"end": 2606,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2586,
											"end": 2606,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2586,
											"end": 2606,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2586,
											"end": 2610,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 2586,
											"end": 2610,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2586,
											"end": 2617,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2586,
											"end": 2617,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2586,
											"end": 2617,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2586,
											"end": 2617,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2586,
											"end": 2617,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2586,
											"end": 2617,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 2586,
											"end": 2617,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2586,
											"end": 2620,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2586,
											"end": 2620,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2578,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 2578,
											"end": 2645,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2578,
											"end": 2645,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2578,
											"end": 2645,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2578,
											"end": 2645,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2578,
											"end": 2645,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2578,
											"end": 2645,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2578,
											"end": 2645,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2578,
											"end": 2645,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2578,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 2578,
											"end": 2645,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2578,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2578,
											"end": 2645,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2578,
											"end": 2645,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 2578,
											"end": 2645,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2578,
											"end": 2645,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2578,
											"end": 2645,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2578,
											"end": 2645,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2578,
											"end": 2645,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2578,
											"end": 2645,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2578,
											"end": 2645,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2578,
											"end": 2645,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2578,
											"end": 2645,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 2578,
											"end": 2645,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2726,
											"end": 2743,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2754,
											"end": 2757,
											"name": "PUSH",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 2746,
											"end": 2751,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2746,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 2746,
											"end": 2757,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2746,
											"end": 2757,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2746,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 2746,
											"end": 2757,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2746,
											"end": 2757,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 2746,
											"end": 2757,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2726,
											"end": 2757,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2726,
											"end": 2757,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3045,
											"end": 3046,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3007,
											"end": 3043,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 3033,
											"end": 3042,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3007,
											"end": 3028,
											"name": "SELFBALANCE",
											"source": 1
										},
										{
											"begin": 3007,
											"end": 3032,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 3007,
											"end": 3032,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3007,
											"end": 3043,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3007,
											"end": 3043,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3007,
											"end": 3043,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3007,
											"end": 3043,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3007,
											"end": 3043,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3007,
											"end": 3043,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 3007,
											"end": 3043,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3007,
											"end": 3046,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3007,
											"end": 3046,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2999,
											"end": 3083,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 2999,
											"end": 3083,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2999,
											"end": 3083,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2999,
											"end": 3083,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2999,
											"end": 3083,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2999,
											"end": 3083,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2999,
											"end": 3083,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2999,
											"end": 3083,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2999,
											"end": 3083,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2999,
											"end": 3083,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 2999,
											"end": 3083,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2999,
											"end": 3083,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 2999,
											"end": 3083,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2999,
											"end": 3083,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 2999,
											"end": 3083,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2999,
											"end": 3083,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2999,
											"end": 3083,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2999,
											"end": 3083,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2999,
											"end": 3083,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2999,
											"end": 3083,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2999,
											"end": 3083,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2999,
											"end": 3083,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2999,
											"end": 3083,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 2999,
											"end": 3083,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3102,
											"end": 3112,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 3094,
											"end": 3122,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3094,
											"end": 3122,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3094,
											"end": 3133,
											"name": "PUSH",
											"source": 1,
											"value": "8FC"
										},
										{
											"begin": 3123,
											"end": 3132,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3094,
											"end": 3133,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3094,
											"end": 3133,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3094,
											"end": 3133,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3094,
											"end": 3133,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3094,
											"end": 3133,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3094,
											"end": 3133,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3094,
											"end": 3133,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3094,
											"end": 3133,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3094,
											"end": 3133,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3094,
											"end": 3133,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3094,
											"end": 3133,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3094,
											"end": 3133,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3094,
											"end": 3133,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3094,
											"end": 3133,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3094,
											"end": 3133,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3094,
											"end": 3133,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 3094,
											"end": 3133,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 3094,
											"end": 3133,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 3094,
											"end": 3133,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3094,
											"end": 3133,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3094,
											"end": 3133,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3094,
											"end": 3133,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3094,
											"end": 3133,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3094,
											"end": 3133,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3094,
											"end": 3133,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3094,
											"end": 3133,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3094,
											"end": 3133,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 3094,
											"end": 3133,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3094,
											"end": 3133,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3094,
											"end": 3133,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3094,
											"end": 3133,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3094,
											"end": 3133,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 3094,
											"end": 3133,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3094,
											"end": 3133,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3094,
											"end": 3133,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3094,
											"end": 3133,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 3094,
											"end": 3133,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3094,
											"end": 3133,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3167,
											"end": 3198,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3167,
											"end": 3175,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3167,
											"end": 3187,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3176,
											"end": 3186,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 3167,
											"end": 3187,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3167,
											"end": 3187,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3167,
											"end": 3187,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3167,
											"end": 3187,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3167,
											"end": 3187,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3167,
											"end": 3187,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3167,
											"end": 3187,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3167,
											"end": 3187,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3167,
											"end": 3187,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3167,
											"end": 3187,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3167,
											"end": 3187,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3167,
											"end": 3187,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3167,
											"end": 3187,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3167,
											"end": 3187,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3167,
											"end": 3187,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3167,
											"end": 3187,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3167,
											"end": 3191,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 3167,
											"end": 3191,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3167,
											"end": 3198,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3167,
											"end": 3198,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3167,
											"end": 3198,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3167,
											"end": 3198,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3167,
											"end": 3198,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3167,
											"end": 3198,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 3167,
											"end": 3198,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3152,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3144,
											"end": 3164,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3153,
											"end": 3163,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3164,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3144,
											"end": 3164,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3164,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3144,
											"end": 3164,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3164,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3164,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3164,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3144,
											"end": 3164,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3164,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3164,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3164,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3164,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3144,
											"end": 3164,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3164,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3144,
											"end": 3164,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3198,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3198,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3198,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3198,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3271,
											"end": 3293,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 3287,
											"end": 3292,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3271,
											"end": 3282,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3271,
											"end": 3282,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3271,
											"end": 3286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 3271,
											"end": 3286,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3271,
											"end": 3293,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3271,
											"end": 3293,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3271,
											"end": 3293,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3271,
											"end": 3293,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3271,
											"end": 3293,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3271,
											"end": 3293,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 3271,
											"end": 3293,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3257,
											"end": 3268,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3257,
											"end": 3293,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3257,
											"end": 3293,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3257,
											"end": 3293,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3257,
											"end": 3293,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3384,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 3369,
											"end": 3392,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3369,
											"end": 3392,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3369,
											"end": 3392,
											"name": "PUSH",
											"source": 1,
											"value": "5E5E995CE3133561AFCEAA51A9A154D5DB228CD7525D34DF5185582C18D3DF09"
										},
										{
											"begin": 3386,
											"end": 3391,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3369,
											"end": 3392,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3369,
											"end": 3392,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3369,
											"end": 3392,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 3369,
											"end": 3392,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3369,
											"end": 3392,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3369,
											"end": 3392,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3369,
											"end": 3392,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3369,
											"end": 3392,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 3369,
											"end": 3392,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3369,
											"end": 3392,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3369,
											"end": 3392,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3369,
											"end": 3392,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3369,
											"end": 3392,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3369,
											"end": 3392,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3369,
											"end": 3392,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3369,
											"end": 3392,
											"name": "LOG2",
											"source": 1
										},
										{
											"begin": 3437,
											"end": 3441,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3430,
											"end": 3441,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3430,
											"end": 3441,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3430,
											"end": 3441,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 3449,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 3449,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 3449,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 3449,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2813,
											"end": 2820,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2843,
											"end": 2844,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2839,
											"end": 2840,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3180,
											"end": 3187,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3210,
											"end": 3211,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3207,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 198,
											"end": 203,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 236,
											"end": 242,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 223,
											"end": 243,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 214,
											"end": 243,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 214,
											"end": 243,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 279,
											"end": 284,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 152,
											"end": 291,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 152,
											"end": 291,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 152,
											"end": 291,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 152,
											"end": 291,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 152,
											"end": 291,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 297,
											"end": 626,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 297,
											"end": 626,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 356,
											"end": 362,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 405,
											"end": 407,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 393,
											"end": 402,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 384,
											"end": 391,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 380,
											"end": 403,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 376,
											"end": 408,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 373,
											"end": 492,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 373,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 373,
											"end": 492,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 411,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 411,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 411,
											"end": 490,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 411,
											"end": 490,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 411,
											"end": 490,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 373,
											"end": 492,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 373,
											"end": 492,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 531,
											"end": 532,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 601,
											"end": 608,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 592,
											"end": 598,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 581,
											"end": 590,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 577,
											"end": 599,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 556,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 546,
											"end": 609,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 546,
											"end": 609,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 502,
											"end": 619,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 297,
											"end": 626,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 297,
											"end": 626,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 297,
											"end": 626,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 297,
											"end": 626,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 297,
											"end": 626,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 700,
											"end": 706,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 708,
											"end": 714,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 757,
											"end": 759,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 745,
											"end": 754,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 736,
											"end": 743,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 732,
											"end": 755,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 728,
											"end": 760,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 725,
											"end": 844,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 725,
											"end": 844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 725,
											"end": 844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 763,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 763,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 763,
											"end": 842,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 763,
											"end": 842,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 763,
											"end": 842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 725,
											"end": 844,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 725,
											"end": 844,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 883,
											"end": 884,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 908,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 953,
											"end": 960,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 944,
											"end": 950,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 933,
											"end": 942,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 929,
											"end": 951,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 908,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 908,
											"end": 961,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 908,
											"end": 961,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 908,
											"end": 961,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 898,
											"end": 961,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 898,
											"end": 961,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 854,
											"end": 971,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1012,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1036,
											"end": 1089,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 1081,
											"end": 1088,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1072,
											"end": 1078,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1061,
											"end": 1070,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1079,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1036,
											"end": 1089,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 1036,
											"end": 1089,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1089,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 1036,
											"end": 1089,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1026,
											"end": 1089,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1026,
											"end": 1089,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 981,
											"end": 1099,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1112,
											"end": 1441,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1112,
											"end": 1441,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1171,
											"end": 1177,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1220,
											"end": 1222,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1208,
											"end": 1217,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1199,
											"end": 1206,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1195,
											"end": 1218,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1191,
											"end": 1223,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 1188,
											"end": 1307,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1188,
											"end": 1307,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 1188,
											"end": 1307,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1305,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 1226,
											"end": 1305,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 1226,
											"end": 1305,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1226,
											"end": 1305,
											"name": "tag",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 1226,
											"end": 1305,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1188,
											"end": 1307,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 1188,
											"end": 1307,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1346,
											"end": 1347,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1371,
											"end": 1424,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 1416,
											"end": 1423,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1407,
											"end": 1413,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1396,
											"end": 1405,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1392,
											"end": 1414,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1371,
											"end": 1424,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 1371,
											"end": 1424,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1371,
											"end": 1424,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 1371,
											"end": 1424,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1361,
											"end": 1424,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1361,
											"end": 1424,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1317,
											"end": 1434,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1112,
											"end": 1441,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1112,
											"end": 1441,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1112,
											"end": 1441,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1112,
											"end": 1441,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1112,
											"end": 1441,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1447,
											"end": 1556,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 1447,
											"end": 1556,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1528,
											"end": 1549,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 1543,
											"end": 1548,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1528,
											"end": 1549,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 1528,
											"end": 1549,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1528,
											"end": 1549,
											"name": "tag",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 1528,
											"end": 1549,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1523,
											"end": 1526,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1516,
											"end": 1550,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1447,
											"end": 1556,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1447,
											"end": 1556,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1447,
											"end": 1556,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1562,
											"end": 1926,
											"name": "tag",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 1562,
											"end": 1926,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1650,
											"end": 1653,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1678,
											"end": 1717,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 1711,
											"end": 1716,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1678,
											"end": 1717,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 1678,
											"end": 1717,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1678,
											"end": 1717,
											"name": "tag",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 1678,
											"end": 1717,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1804,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 1797,
											"end": 1803,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1792,
											"end": 1795,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1733,
											"end": 1804,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 1733,
											"end": 1804,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1733,
											"end": 1804,
											"name": "tag",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 1733,
											"end": 1804,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1804,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1804,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1813,
											"end": 1865,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 1858,
											"end": 1864,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1853,
											"end": 1856,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 1850,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1839,
											"end": 1844,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1835,
											"end": 1851,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1813,
											"end": 1865,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 1813,
											"end": 1865,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1813,
											"end": 1865,
											"name": "tag",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 1813,
											"end": 1865,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1890,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 1912,
											"end": 1918,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1890,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 1890,
											"end": 1919,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1890,
											"end": 1919,
											"name": "tag",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 1890,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1885,
											"end": 1888,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1881,
											"end": 1920,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1874,
											"end": 1920,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1874,
											"end": 1920,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1654,
											"end": 1926,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1562,
											"end": 1926,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1562,
											"end": 1926,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1562,
											"end": 1926,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1562,
											"end": 1926,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1562,
											"end": 1926,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1932,
											"end": 2298,
											"name": "tag",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 1932,
											"end": 2298,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2077,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 2159,
											"end": 2161,
											"name": "PUSH",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 2154,
											"end": 2157,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "tag",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 2095,
											"end": 2162,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2088,
											"end": 2162,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2088,
											"end": 2162,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2171,
											"end": 2264,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 2260,
											"end": 2263,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2171,
											"end": 2264,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 2171,
											"end": 2264,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2171,
											"end": 2264,
											"name": "tag",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 2171,
											"end": 2264,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2289,
											"end": 2291,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2284,
											"end": 2287,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2280,
											"end": 2292,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2273,
											"end": 2292,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2273,
											"end": 2292,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1932,
											"end": 2298,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1932,
											"end": 2298,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1932,
											"end": 2298,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1932,
											"end": 2298,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2304,
											"end": 2670,
											"name": "tag",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 2304,
											"end": 2670,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2446,
											"end": 2449,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2467,
											"end": 2534,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 2531,
											"end": 2533,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 2526,
											"end": 2529,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2467,
											"end": 2534,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 2467,
											"end": 2534,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2467,
											"end": 2534,
											"name": "tag",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 2467,
											"end": 2534,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2534,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2534,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2636,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 2632,
											"end": 2635,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2636,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 2543,
											"end": 2636,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2543,
											"end": 2636,
											"name": "tag",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 2543,
											"end": 2636,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2661,
											"end": 2663,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2656,
											"end": 2659,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2652,
											"end": 2664,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2645,
											"end": 2664,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2645,
											"end": 2664,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2304,
											"end": 2670,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2304,
											"end": 2670,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2304,
											"end": 2670,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2304,
											"end": 2670,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2676,
											"end": 3042,
											"name": "tag",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 2676,
											"end": 3042,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2818,
											"end": 2821,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2839,
											"end": 2906,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 2903,
											"end": 2905,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2898,
											"end": 2901,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2906,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 2839,
											"end": 2906,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2839,
											"end": 2906,
											"name": "tag",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 2839,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2832,
											"end": 2906,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2832,
											"end": 2906,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2915,
											"end": 3008,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 3004,
											"end": 3007,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2915,
											"end": 3008,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 2915,
											"end": 3008,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2915,
											"end": 3008,
											"name": "tag",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 2915,
											"end": 3008,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3033,
											"end": 3035,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3028,
											"end": 3031,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3024,
											"end": 3036,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3017,
											"end": 3036,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3017,
											"end": 3036,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2676,
											"end": 3042,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2676,
											"end": 3042,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2676,
											"end": 3042,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2676,
											"end": 3042,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3048,
											"end": 3414,
											"name": "tag",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 3048,
											"end": 3414,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3190,
											"end": 3193,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3211,
											"end": 3278,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 3275,
											"end": 3277,
											"name": "PUSH",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 3270,
											"end": 3273,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3211,
											"end": 3278,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 3211,
											"end": 3278,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3211,
											"end": 3278,
											"name": "tag",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 3211,
											"end": 3278,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3204,
											"end": 3278,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3204,
											"end": 3278,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3287,
											"end": 3380,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 3376,
											"end": 3379,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3287,
											"end": 3380,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 3287,
											"end": 3380,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3287,
											"end": 3380,
											"name": "tag",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 3287,
											"end": 3380,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3405,
											"end": 3407,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3400,
											"end": 3403,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3396,
											"end": 3408,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3389,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3389,
											"end": 3408,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3048,
											"end": 3414,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3048,
											"end": 3414,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3048,
											"end": 3414,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3048,
											"end": 3414,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3420,
											"end": 3786,
											"name": "tag",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 3420,
											"end": 3786,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3562,
											"end": 3565,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3583,
											"end": 3650,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 3647,
											"end": 3649,
											"name": "PUSH",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 3642,
											"end": 3645,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3650,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 3583,
											"end": 3650,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3583,
											"end": 3650,
											"name": "tag",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 3583,
											"end": 3650,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3576,
											"end": 3650,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3576,
											"end": 3650,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3659,
											"end": 3752,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 3748,
											"end": 3751,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3659,
											"end": 3752,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 3659,
											"end": 3752,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3659,
											"end": 3752,
											"name": "tag",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 3659,
											"end": 3752,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3779,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3772,
											"end": 3775,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3768,
											"end": 3780,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3761,
											"end": 3780,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3761,
											"end": 3780,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3420,
											"end": 3786,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3420,
											"end": 3786,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3420,
											"end": 3786,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3420,
											"end": 3786,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3792,
											"end": 3910,
											"name": "tag",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 3792,
											"end": 3910,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3879,
											"end": 3903,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 3897,
											"end": 3902,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3879,
											"end": 3903,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 3879,
											"end": 3903,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3879,
											"end": 3903,
											"name": "tag",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 3879,
											"end": 3903,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3874,
											"end": 3877,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3867,
											"end": 3904,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3792,
											"end": 3910,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3792,
											"end": 3910,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3792,
											"end": 3910,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3916,
											"end": 4126,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3916,
											"end": 4126,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4003,
											"end": 4007,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4041,
											"end": 4043,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4030,
											"end": 4039,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4026,
											"end": 4044,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4018,
											"end": 4044,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4018,
											"end": 4044,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4054,
											"end": 4119,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 4116,
											"end": 4117,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4105,
											"end": 4114,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4101,
											"end": 4118,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 4098,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4054,
											"end": 4119,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 4054,
											"end": 4119,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4054,
											"end": 4119,
											"name": "tag",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 4054,
											"end": 4119,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3916,
											"end": 4126,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3916,
											"end": 4126,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3916,
											"end": 4126,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3916,
											"end": 4126,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3916,
											"end": 4126,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4132,
											"end": 4445,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 4132,
											"end": 4445,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4245,
											"end": 4249,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4283,
											"end": 4285,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4272,
											"end": 4281,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4268,
											"end": 4286,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4260,
											"end": 4286,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4260,
											"end": 4286,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4332,
											"end": 4341,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4326,
											"end": 4330,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4322,
											"end": 4342,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4318,
											"end": 4319,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4307,
											"end": 4316,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4303,
											"end": 4320,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4296,
											"end": 4343,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4360,
											"end": 4438,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 4433,
											"end": 4437,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4424,
											"end": 4430,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4360,
											"end": 4438,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 4360,
											"end": 4438,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4360,
											"end": 4438,
											"name": "tag",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 4360,
											"end": 4438,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4352,
											"end": 4438,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4352,
											"end": 4438,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4132,
											"end": 4445,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4132,
											"end": 4445,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4132,
											"end": 4445,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4132,
											"end": 4445,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4132,
											"end": 4445,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4451,
											"end": 4870,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 4451,
											"end": 4870,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4617,
											"end": 4621,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4655,
											"end": 4657,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4644,
											"end": 4653,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4640,
											"end": 4658,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4632,
											"end": 4658,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4632,
											"end": 4658,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4704,
											"end": 4713,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4698,
											"end": 4702,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4694,
											"end": 4714,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4690,
											"end": 4691,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4679,
											"end": 4688,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4675,
											"end": 4692,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4668,
											"end": 4715,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4732,
											"end": 4863,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 4858,
											"end": 4862,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4732,
											"end": 4863,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 4732,
											"end": 4863,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4732,
											"end": 4863,
											"name": "tag",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 4732,
											"end": 4863,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4724,
											"end": 4863,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4724,
											"end": 4863,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4451,
											"end": 4870,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4451,
											"end": 4870,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4451,
											"end": 4870,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4451,
											"end": 4870,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4876,
											"end": 5295,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4876,
											"end": 5295,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5042,
											"end": 5046,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5080,
											"end": 5082,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5069,
											"end": 5078,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5065,
											"end": 5083,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5057,
											"end": 5083,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5057,
											"end": 5083,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5129,
											"end": 5138,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5123,
											"end": 5127,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5119,
											"end": 5139,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5115,
											"end": 5116,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5104,
											"end": 5113,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5100,
											"end": 5117,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5093,
											"end": 5140,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5157,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 5283,
											"end": 5287,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5157,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 5157,
											"end": 5288,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5157,
											"end": 5288,
											"name": "tag",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 5157,
											"end": 5288,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5149,
											"end": 5288,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5149,
											"end": 5288,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4876,
											"end": 5295,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4876,
											"end": 5295,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4876,
											"end": 5295,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4876,
											"end": 5295,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5301,
											"end": 5720,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 5301,
											"end": 5720,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5467,
											"end": 5471,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5505,
											"end": 5507,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5494,
											"end": 5503,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5490,
											"end": 5508,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5482,
											"end": 5508,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5482,
											"end": 5508,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5554,
											"end": 5563,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5548,
											"end": 5552,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5544,
											"end": 5564,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5540,
											"end": 5541,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5529,
											"end": 5538,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5525,
											"end": 5542,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5518,
											"end": 5565,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5582,
											"end": 5713,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 5708,
											"end": 5712,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5582,
											"end": 5713,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 5582,
											"end": 5713,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5582,
											"end": 5713,
											"name": "tag",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 5582,
											"end": 5713,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5574,
											"end": 5713,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5574,
											"end": 5713,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5301,
											"end": 5720,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5301,
											"end": 5720,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5301,
											"end": 5720,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5301,
											"end": 5720,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5726,
											"end": 6145,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 5726,
											"end": 6145,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5892,
											"end": 5896,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5930,
											"end": 5932,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5919,
											"end": 5928,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5915,
											"end": 5933,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5907,
											"end": 5933,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5907,
											"end": 5933,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5979,
											"end": 5988,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5973,
											"end": 5977,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5969,
											"end": 5989,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5965,
											"end": 5966,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5954,
											"end": 5963,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5950,
											"end": 5967,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5943,
											"end": 5990,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6007,
											"end": 6138,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 6133,
											"end": 6137,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6007,
											"end": 6138,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 6007,
											"end": 6138,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6007,
											"end": 6138,
											"name": "tag",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 6007,
											"end": 6138,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5999,
											"end": 6138,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5999,
											"end": 6138,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5726,
											"end": 6145,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5726,
											"end": 6145,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5726,
											"end": 6145,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5726,
											"end": 6145,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 6151,
											"end": 6570,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 6151,
											"end": 6570,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6321,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6355,
											"end": 6357,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6344,
											"end": 6353,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6340,
											"end": 6358,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6332,
											"end": 6358,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6332,
											"end": 6358,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6404,
											"end": 6413,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6398,
											"end": 6402,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6394,
											"end": 6414,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6390,
											"end": 6391,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6379,
											"end": 6388,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6375,
											"end": 6392,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6368,
											"end": 6415,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6563,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 6558,
											"end": 6562,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6563,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 6432,
											"end": 6563,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6432,
											"end": 6563,
											"name": "tag",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 6432,
											"end": 6563,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6424,
											"end": 6563,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6424,
											"end": 6563,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6570,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6570,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6570,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6570,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 6576,
											"end": 6798,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 6576,
											"end": 6798,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6669,
											"end": 6673,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6707,
											"end": 6709,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6696,
											"end": 6705,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6692,
											"end": 6710,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6684,
											"end": 6710,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6684,
											"end": 6710,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6720,
											"end": 6791,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 6788,
											"end": 6789,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6777,
											"end": 6786,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6773,
											"end": 6790,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6764,
											"end": 6770,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6720,
											"end": 6791,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 6720,
											"end": 6791,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6720,
											"end": 6791,
											"name": "tag",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 6720,
											"end": 6791,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6576,
											"end": 6798,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6576,
											"end": 6798,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6576,
											"end": 6798,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6576,
											"end": 6798,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6576,
											"end": 6798,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 6885,
											"end": 6984,
											"name": "tag",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 6885,
											"end": 6984,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6937,
											"end": 6943,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6971,
											"end": 6976,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6965,
											"end": 6977,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6955,
											"end": 6977,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6955,
											"end": 6977,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6885,
											"end": 6984,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6885,
											"end": 6984,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6885,
											"end": 6984,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6885,
											"end": 6984,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 6990,
											"end": 7159,
											"name": "tag",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 6990,
											"end": 7159,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7074,
											"end": 7085,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7108,
											"end": 7114,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7103,
											"end": 7106,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7096,
											"end": 7115,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7148,
											"end": 7152,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7143,
											"end": 7146,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7139,
											"end": 7153,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7124,
											"end": 7153,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7124,
											"end": 7153,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6990,
											"end": 7159,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6990,
											"end": 7159,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6990,
											"end": 7159,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6990,
											"end": 7159,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6990,
											"end": 7159,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7165,
											"end": 7470,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 7165,
											"end": 7470,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7205,
											"end": 7208,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7224,
											"end": 7244,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 7242,
											"end": 7243,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7224,
											"end": 7244,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 7224,
											"end": 7244,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7224,
											"end": 7244,
											"name": "tag",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 7224,
											"end": 7244,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7219,
											"end": 7244,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7219,
											"end": 7244,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7258,
											"end": 7278,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 7276,
											"end": 7277,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7258,
											"end": 7278,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 7258,
											"end": 7278,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7258,
											"end": 7278,
											"name": "tag",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 7258,
											"end": 7278,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7253,
											"end": 7278,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7253,
											"end": 7278,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7412,
											"end": 7413,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7344,
											"end": 7410,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7340,
											"end": 7414,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7337,
											"end": 7338,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7334,
											"end": 7415,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 7331,
											"end": 7438,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7331,
											"end": 7438,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 7331,
											"end": 7438,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7418,
											"end": 7436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 7418,
											"end": 7436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 7418,
											"end": 7436,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7418,
											"end": 7436,
											"name": "tag",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 7418,
											"end": 7436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7331,
											"end": 7438,
											"name": "tag",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 7331,
											"end": 7438,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7462,
											"end": 7463,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7459,
											"end": 7460,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7455,
											"end": 7464,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7448,
											"end": 7464,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7448,
											"end": 7464,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7165,
											"end": 7470,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7165,
											"end": 7470,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7165,
											"end": 7470,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7165,
											"end": 7470,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7165,
											"end": 7470,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7476,
											"end": 7824,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 7476,
											"end": 7824,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7516,
											"end": 7523,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7539,
											"end": 7559,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 7557,
											"end": 7558,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7539,
											"end": 7559,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 7539,
											"end": 7559,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7539,
											"end": 7559,
											"name": "tag",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 7539,
											"end": 7559,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7534,
											"end": 7559,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7534,
											"end": 7559,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7573,
											"end": 7593,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 7591,
											"end": 7592,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7573,
											"end": 7593,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 7573,
											"end": 7593,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7573,
											"end": 7593,
											"name": "tag",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 7573,
											"end": 7593,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7568,
											"end": 7593,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7568,
											"end": 7593,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7761,
											"end": 7762,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7693,
											"end": 7759,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7689,
											"end": 7763,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 7686,
											"end": 7687,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7683,
											"end": 7764,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 7678,
											"end": 7679,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7671,
											"end": 7680,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7664,
											"end": 7681,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7660,
											"end": 7765,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7657,
											"end": 7788,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7657,
											"end": 7788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 7657,
											"end": 7788,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7786,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 7768,
											"end": 7786,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 7768,
											"end": 7786,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7768,
											"end": 7786,
											"name": "tag",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 7768,
											"end": 7786,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7657,
											"end": 7788,
											"name": "tag",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 7657,
											"end": 7788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7816,
											"end": 7817,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7813,
											"end": 7814,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7809,
											"end": 7818,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 7798,
											"end": 7818,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7798,
											"end": 7818,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7476,
											"end": 7824,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7476,
											"end": 7824,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7476,
											"end": 7824,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7476,
											"end": 7824,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7476,
											"end": 7824,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7830,
											"end": 8021,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 7830,
											"end": 8021,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7870,
											"end": 7874,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7890,
											"end": 7910,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 7908,
											"end": 7909,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7890,
											"end": 7910,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 7890,
											"end": 7910,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7890,
											"end": 7910,
											"name": "tag",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 7890,
											"end": 7910,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7885,
											"end": 7910,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7885,
											"end": 7910,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7924,
											"end": 7944,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 7942,
											"end": 7943,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7924,
											"end": 7944,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 7924,
											"end": 7944,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7924,
											"end": 7944,
											"name": "tag",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 7924,
											"end": 7944,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7919,
											"end": 7944,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7919,
											"end": 7944,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7963,
											"end": 7964,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7960,
											"end": 7961,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7957,
											"end": 7965,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 7954,
											"end": 7988,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7954,
											"end": 7988,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "218"
										},
										{
											"begin": 7954,
											"end": 7988,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7968,
											"end": 7986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 7968,
											"end": 7986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 7968,
											"end": 7986,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7968,
											"end": 7986,
											"name": "tag",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 7968,
											"end": 7986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7954,
											"end": 7988,
											"name": "tag",
											"source": 2,
											"value": "218"
										},
										{
											"begin": 7954,
											"end": 7988,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8013,
											"end": 8014,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8010,
											"end": 8011,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8006,
											"end": 8015,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7998,
											"end": 8015,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7998,
											"end": 8015,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7830,
											"end": 8021,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7830,
											"end": 8021,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7830,
											"end": 8021,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7830,
											"end": 8021,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7830,
											"end": 8021,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 8027,
											"end": 8123,
											"name": "tag",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 8027,
											"end": 8123,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8064,
											"end": 8071,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8093,
											"end": 8117,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 8111,
											"end": 8116,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8093,
											"end": 8117,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 8093,
											"end": 8117,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8093,
											"end": 8117,
											"name": "tag",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 8093,
											"end": 8117,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8082,
											"end": 8117,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8082,
											"end": 8117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8027,
											"end": 8123,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8027,
											"end": 8123,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8027,
											"end": 8123,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8027,
											"end": 8123,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 8129,
											"end": 8219,
											"name": "tag",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 8129,
											"end": 8219,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8170,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8206,
											"end": 8211,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8199,
											"end": 8212,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8192,
											"end": 8213,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8181,
											"end": 8213,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8181,
											"end": 8213,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8129,
											"end": 8219,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8129,
											"end": 8219,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8129,
											"end": 8219,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8129,
											"end": 8219,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 8225,
											"end": 8351,
											"name": "tag",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 8225,
											"end": 8351,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8262,
											"end": 8269,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8302,
											"end": 8344,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8295,
											"end": 8300,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8291,
											"end": 8345,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8280,
											"end": 8345,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8280,
											"end": 8345,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8225,
											"end": 8351,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8225,
											"end": 8351,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8225,
											"end": 8351,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8225,
											"end": 8351,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 8357,
											"end": 8434,
											"name": "tag",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 8357,
											"end": 8434,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8394,
											"end": 8401,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8423,
											"end": 8428,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8412,
											"end": 8428,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8412,
											"end": 8428,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8357,
											"end": 8434,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8357,
											"end": 8434,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8357,
											"end": 8434,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8357,
											"end": 8434,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 8440,
											"end": 8747,
											"name": "tag",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 8440,
											"end": 8747,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8508,
											"end": 8509,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8518,
											"end": 8631,
											"name": "tag",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 8518,
											"end": 8631,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8532,
											"end": 8538,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8529,
											"end": 8530,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8526,
											"end": 8539,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 8518,
											"end": 8631,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8518,
											"end": 8631,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 8518,
											"end": 8631,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8617,
											"end": 8618,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8612,
											"end": 8615,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8608,
											"end": 8619,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8602,
											"end": 8620,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8598,
											"end": 8599,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8593,
											"end": 8596,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8589,
											"end": 8600,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8582,
											"end": 8621,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8554,
											"end": 8556,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8551,
											"end": 8552,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8547,
											"end": 8557,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8542,
											"end": 8557,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8542,
											"end": 8557,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8518,
											"end": 8631,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 8518,
											"end": 8631,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8518,
											"end": 8631,
											"name": "tag",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 8518,
											"end": 8631,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8649,
											"end": 8655,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8646,
											"end": 8647,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8643,
											"end": 8656,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 8640,
											"end": 8741,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8640,
											"end": 8741,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 8640,
											"end": 8741,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8729,
											"end": 8730,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8720,
											"end": 8726,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8715,
											"end": 8718,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8711,
											"end": 8727,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8704,
											"end": 8731,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8640,
											"end": 8741,
											"name": "tag",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 8640,
											"end": 8741,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8489,
											"end": 8747,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8440,
											"end": 8747,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8440,
											"end": 8747,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8440,
											"end": 8747,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8440,
											"end": 8747,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 8753,
											"end": 9073,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 8753,
											"end": 9073,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8797,
											"end": 8803,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8834,
											"end": 8835,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 8828,
											"end": 8832,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8824,
											"end": 8836,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 8814,
											"end": 8836,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8814,
											"end": 8836,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8881,
											"end": 8882,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 8875,
											"end": 8879,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8871,
											"end": 8883,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8902,
											"end": 8920,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8892,
											"end": 8973,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 8892,
											"end": 8973,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8958,
											"end": 8962,
											"name": "PUSH",
											"source": 2,
											"value": "7F"
										},
										{
											"begin": 8950,
											"end": 8956,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8946,
											"end": 8963,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8936,
											"end": 8963,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8936,
											"end": 8963,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8892,
											"end": 8973,
											"name": "tag",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 8892,
											"end": 8973,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9020,
											"end": 9022,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9012,
											"end": 9018,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9009,
											"end": 9023,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9007,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8986,
											"end": 9024,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 8983,
											"end": 9067,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8983,
											"end": 9067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 8983,
											"end": 9067,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9039,
											"end": 9057,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 9039,
											"end": 9057,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 9039,
											"end": 9057,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9039,
											"end": 9057,
											"name": "tag",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 9039,
											"end": 9057,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8983,
											"end": 9067,
											"name": "tag",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 8983,
											"end": 9067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8804,
											"end": 9073,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8753,
											"end": 9073,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8753,
											"end": 9073,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8753,
											"end": 9073,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8753,
											"end": 9073,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 9079,
											"end": 9259,
											"name": "tag",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 9079,
											"end": 9259,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9127,
											"end": 9204,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9124,
											"end": 9125,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9117,
											"end": 9205,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9224,
											"end": 9228,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 9221,
											"end": 9222,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9214,
											"end": 9229,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9248,
											"end": 9252,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 9245,
											"end": 9246,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9238,
											"end": 9253,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9265,
											"end": 9445,
											"name": "tag",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 9265,
											"end": 9445,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9313,
											"end": 9390,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9310,
											"end": 9311,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9303,
											"end": 9391,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9410,
											"end": 9414,
											"name": "PUSH",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 9407,
											"end": 9408,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9400,
											"end": 9415,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9434,
											"end": 9438,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 9431,
											"end": 9432,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9424,
											"end": 9439,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9574,
											"end": 9691,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 9574,
											"end": 9691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9683,
											"end": 9684,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9680,
											"end": 9681,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9673,
											"end": 9685,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9697,
											"end": 9799,
											"name": "tag",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 9697,
											"end": 9799,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9738,
											"end": 9744,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9789,
											"end": 9791,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 9785,
											"end": 9792,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 9780,
											"end": 9782,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 9773,
											"end": 9778,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9769,
											"end": 9783,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9765,
											"end": 9793,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9755,
											"end": 9793,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9755,
											"end": 9793,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9697,
											"end": 9799,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9697,
											"end": 9799,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9697,
											"end": 9799,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9697,
											"end": 9799,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 9805,
											"end": 10026,
											"name": "tag",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 9805,
											"end": 10026,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9945,
											"end": 9979,
											"name": "PUSH",
											"source": 2,
											"value": "596F7520646F206E6F7420686176652073756666696369656E742062616C616E"
										},
										{
											"begin": 9941,
											"end": 9942,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9933,
											"end": 9939,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9929,
											"end": 9943,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9922,
											"end": 9980,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10014,
											"end": 10018,
											"name": "PUSH",
											"source": 2,
											"value": "6365000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10009,
											"end": 10011,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10001,
											"end": 10007,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9997,
											"end": 10012,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9990,
											"end": 10019,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9805,
											"end": 10026,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9805,
											"end": 10026,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 10032,
											"end": 10202,
											"name": "tag",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 10032,
											"end": 10202,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10172,
											"end": 10194,
											"name": "PUSH",
											"source": 2,
											"value": "496E73756666696369656E742062616C616E6365000000000000000000000000"
										},
										{
											"begin": 10168,
											"end": 10169,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10160,
											"end": 10166,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10156,
											"end": 10170,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10149,
											"end": 10195,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10032,
											"end": 10202,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10032,
											"end": 10202,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 10208,
											"end": 10390,
											"name": "tag",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 10208,
											"end": 10390,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10348,
											"end": 10382,
											"name": "PUSH",
											"source": 2,
											"value": "436F6E74726163742062616C616E636520697320696E73756666696369656E74"
										},
										{
											"begin": 10344,
											"end": 10345,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10336,
											"end": 10342,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10332,
											"end": 10346,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10325,
											"end": 10383,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10208,
											"end": 10390,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10208,
											"end": 10390,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 10396,
											"end": 10622,
											"name": "tag",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 10396,
											"end": 10622,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10536,
											"end": 10570,
											"name": "PUSH",
											"source": 2,
											"value": "4F6E6C7920746865206F776E65722063616E2064657374726F79207468652063"
										},
										{
											"begin": 10532,
											"end": 10533,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10524,
											"end": 10530,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10520,
											"end": 10534,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10513,
											"end": 10571,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10605,
											"end": 10614,
											"name": "PUSH",
											"source": 2,
											"value": "6F6E747261637400000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10600,
											"end": 10602,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10592,
											"end": 10598,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10588,
											"end": 10603,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10581,
											"end": 10615,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10396,
											"end": 10622,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10396,
											"end": 10622,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 10628,
											"end": 10849,
											"name": "tag",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 10628,
											"end": 10849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10768,
											"end": 10802,
											"name": "PUSH",
											"source": 2,
											"value": "4F6E6C7920746865206F776E65722063616E206D696E74206E657720746F6B65"
										},
										{
											"begin": 10764,
											"end": 10765,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10756,
											"end": 10762,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10752,
											"end": 10766,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10745,
											"end": 10803,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10837,
											"end": 10841,
											"name": "PUSH",
											"source": 2,
											"value": "6E73000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10832,
											"end": 10834,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10824,
											"end": 10830,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10820,
											"end": 10835,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10813,
											"end": 10842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10628,
											"end": 10849,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10628,
											"end": 10849,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 10855,
											"end": 10977,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 10855,
											"end": 10977,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10928,
											"end": 10952,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 10946,
											"end": 10951,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10928,
											"end": 10952,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 10928,
											"end": 10952,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10928,
											"end": 10952,
											"name": "tag",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 10928,
											"end": 10952,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10921,
											"end": 10926,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10918,
											"end": 10953,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 10908,
											"end": 10971,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 10908,
											"end": 10971,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10967,
											"end": 10968,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10964,
											"end": 10965,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10957,
											"end": 10969,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10908,
											"end": 10971,
											"name": "tag",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 10908,
											"end": 10971,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10855,
											"end": 10977,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10855,
											"end": 10977,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 10983,
											"end": 11105,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 10983,
											"end": 11105,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11056,
											"end": 11080,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "252"
										},
										{
											"begin": 11074,
											"end": 11079,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11056,
											"end": 11080,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 11056,
											"end": 11080,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 11056,
											"end": 11080,
											"name": "tag",
											"source": 2,
											"value": "252"
										},
										{
											"begin": 11056,
											"end": 11080,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11049,
											"end": 11054,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11046,
											"end": 11081,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 11036,
											"end": 11099,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 11036,
											"end": 11099,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11095,
											"end": 11096,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11092,
											"end": 11093,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11085,
											"end": 11097,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 11036,
											"end": 11099,
											"name": "tag",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 11036,
											"end": 11099,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10983,
											"end": 11105,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10983,
											"end": 11105,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"balanceOf(address)": "70a08231",
							"close()": "43d726d6",
							"getName()": "17d7de7c",
							"getPrice()": "98d5fdca",
							"getSymbol()": "15070401",
							"mint(address,uint256)": "40c10f19",
							"sell(uint256)": "e4849b32",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Sell\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"close\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSymbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"sell\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"B226328_part1.sol\":\"Part1_token\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"B226328_part1.sol\":{\"keccak256\":\"0x78371c1a1670e1ec50c98abe30f10256557d82ea633f74c92dd304ab02b6a3a3\",\"urls\":[\"bzz-raw://ed70f9ed6b9392fc7a5f3e628fb28db859b36692b4bdecea02c996e9f24e4c6e\",\"dweb:/ipfs/QmNZfoR8JDDrudAgsFeZdYPq4cXdLEtjEf6UA1etUHY4YT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 319,
								"contract": "B226328_part1.sol:Part1_token",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address_payable"
							},
							{
								"astId": 321,
								"contract": "B226328_part1.sol:Part1_token",
								"label": "name",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 323,
								"contract": "B226328_part1.sol:Part1_token",
								"label": "symbol",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 325,
								"contract": "B226328_part1.sol:Part1_token",
								"label": "price",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 327,
								"contract": "B226328_part1.sol:Part1_token",
								"label": "totalsupply",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 331,
								"contract": "B226328_part1.sol:Part1_token",
								"label": "balances",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 335,
								"contract": "B226328_part1.sol:Part1_token",
								"label": "roles",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> B226328_part1.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "B226328_part1.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "3628",
				"formattedMessage": "Warning: This contract has a payable fallback function, but no receive ether function. Consider adding a receive ether function.\n --> B226328_part1.sol:3:1:\n  |\n3 | contract Part1_token\n  | ^ (Relevant source part starts here and spans across multiple lines).\nNote: The payable fallback function is defined here.\n   --> B226328_part1.sol:111:5:\n    |\n111 |     fallback() external payable {\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "This contract has a payable fallback function, but no receive ether function. Consider adding a receive ether function.",
				"secondarySourceLocations": [
					{
						"end": 3816,
						"file": "B226328_part1.sol",
						"message": "The payable fallback function is defined here.",
						"start": 3733
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 3819,
					"file": "B226328_part1.sol",
					"start": 92
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2462",
				"formattedMessage": "Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n  --> B226328_part1.sol:18:5:\n   |\n18 |     constructor() public {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1079,
					"file": "B226328_part1.sol",
					"start": 571
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							311
						]
					},
					"id": 312,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:0",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 311,
							"linearizedBaseContracts": [
								311
							],
							"name": "SafeMath",
							"nameLocation": "490:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 33,
										"nodeType": "Block",
										"src": "717:140:0",
										"statements": [
											{
												"id": 32,
												"nodeType": "UncheckedBlock",
												"src": "727:124:0",
												"statements": [
													{
														"assignments": [
															15
														],
														"declarations": [
															{
																"constant": false,
																"id": 15,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 32,
																"src": "751:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 14,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 19,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 18,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 16,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "763:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 17,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 7,
																"src": "767:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 22,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 20,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 15,
																"src": "786:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 21,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "790:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 27,
														"nodeType": "IfStatement",
														"src": "782:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 23,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 24,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 25,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 13,
															"id": 26,
															"nodeType": "Return",
															"src": "793:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 28,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 29,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "838:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 30,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 13,
														"id": 31,
														"nodeType": "Return",
														"src": "824:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:0",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 34,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "657:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "668:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "702:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 9,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "708:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 11,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:0"
									},
									"scope": 311,
									"src": "641:216:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "1078:113:0",
										"statements": [
											{
												"id": 60,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 48,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 46,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 39,
																"src": "1116:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 47,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 37,
																"src": "1120:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 53,
														"nodeType": "IfStatement",
														"src": "1112:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 49,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 50,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 51,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 45,
															"id": 52,
															"nodeType": "Return",
															"src": "1123:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 54,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 57,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 55,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 37,
																		"src": "1168:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 56,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 39,
																		"src": "1172:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 58,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 45,
														"id": 59,
														"nodeType": "Return",
														"src": "1154:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:0",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1018:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 36,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1029:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:0"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1063:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1069:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:0"
									},
									"scope": 311,
									"src": "1002:189:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 103,
										"nodeType": "Block",
										"src": "1415:417:0",
										"statements": [
											{
												"id": 102,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 76,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 74,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1683:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 75,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 81,
														"nodeType": "IfStatement",
														"src": "1679:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 77,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 79,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 73,
															"id": 80,
															"nodeType": "Return",
															"src": "1691:16:0"
														}
													},
													{
														"assignments": [
															83
														],
														"declarations": [
															{
																"constant": false,
																"id": 83,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 102,
																"src": "1721:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 82,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 87,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 86,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 84,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1733:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 85,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1737:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 92,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 90,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 88,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 83,
																	"src": "1756:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 89,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 65,
																	"src": "1760:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 91,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1765:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 97,
														"nodeType": "IfStatement",
														"src": "1752:33:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 93,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 94,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 95,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 73,
															"id": 96,
															"nodeType": "Return",
															"src": "1768:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 98,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 99,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 83,
																	"src": "1813:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 100,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 73,
														"id": 101,
														"nodeType": "Return",
														"src": "1799:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:0",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1355:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1366:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 66,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:0"
									},
									"returnParameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1400:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 69,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1406:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 71,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:0"
									},
									"scope": 311,
									"src": "1339:493:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 131,
										"nodeType": "Block",
										"src": "2057:114:0",
										"statements": [
											{
												"id": 130,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 116,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 109,
																"src": "2095:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 123,
														"nodeType": "IfStatement",
														"src": "2091:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 119,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 120,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 121,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 115,
															"id": 122,
															"nodeType": "Return",
															"src": "2103:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 125,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 107,
																		"src": "2148:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 126,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 109,
																		"src": "2152:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 128,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 115,
														"id": 129,
														"nodeType": "Return",
														"src": "2134:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:0",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 132,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "1997:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2008:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:0"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2042:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 111,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2048:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:0"
									},
									"scope": 311,
									"src": "1981:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 159,
										"nodeType": "Block",
										"src": "2406:114:0",
										"statements": [
											{
												"id": 158,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 144,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 137,
																"src": "2444:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 145,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 151,
														"nodeType": "IfStatement",
														"src": "2440:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 147,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 148,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 149,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 143,
															"id": 150,
															"nodeType": "Return",
															"src": "2452:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 152,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 153,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 135,
																		"src": "2497:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 154,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 137,
																		"src": "2501:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 156,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 143,
														"id": 157,
														"nodeType": "Return",
														"src": "2483:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 133,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2346:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2357:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2391:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 139,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "2397:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:0"
									},
									"scope": 311,
									"src": "2330:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 174,
										"nodeType": "Block",
										"src": "2822:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 170,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 163,
														"src": "2839:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 171,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 165,
														"src": "2843:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 169,
												"id": 173,
												"nodeType": "Return",
												"src": "2832:12:0"
											}
										]
									},
									"documentation": {
										"id": 161,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2768:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2779:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "2813:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:0"
									},
									"scope": 311,
									"src": "2755:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "3189:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 185,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 178,
														"src": "3206:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 186,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 180,
														"src": "3210:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 184,
												"id": 188,
												"nodeType": "Return",
												"src": "3199:12:0"
											}
										]
									},
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3135:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3146:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:0"
									},
									"returnParameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3180:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:0"
									},
									"scope": 311,
									"src": "3122:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 204,
										"nodeType": "Block",
										"src": "3532:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 200,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3549:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 201,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "3553:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 199,
												"id": 203,
												"nodeType": "Return",
												"src": "3542:12:0"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 205,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3478:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3489:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:0"
									},
									"returnParameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "3523:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:0"
									},
									"scope": 311,
									"src": "3465:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 219,
										"nodeType": "Block",
										"src": "3917:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 215,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "3934:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 216,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 210,
														"src": "3938:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 214,
												"id": 218,
												"nodeType": "Return",
												"src": "3927:12:0"
											}
										]
									},
									"documentation": {
										"id": 206,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 220,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3863:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3874:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:0"
									},
									"returnParameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "3908:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:0"
									},
									"scope": 311,
									"src": "3850:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 234,
										"nodeType": "Block",
										"src": "4466:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 230,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 223,
														"src": "4483:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 231,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 225,
														"src": "4487:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 229,
												"id": 233,
												"nodeType": "Return",
												"src": "4476:12:0"
											}
										]
									},
									"documentation": {
										"id": 221,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 235,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4412:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4423:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:0"
									},
									"returnParameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4457:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:0"
									},
									"scope": 311,
									"src": "4399:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 259,
										"nodeType": "Block",
										"src": "5084:106:0",
										"statements": [
											{
												"id": 258,
												"nodeType": "UncheckedBlock",
												"src": "5094:90:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 250,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 248,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 240,
																		"src": "5126:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 249,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 238,
																		"src": "5131:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5126:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 251,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 242,
																	"src": "5134:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 247,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5118:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5118:29:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 253,
														"nodeType": "ExpressionStatement",
														"src": "5118:29:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 254,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 238,
																"src": "5168:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 255,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 240,
																"src": "5172:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5168:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 246,
														"id": 257,
														"nodeType": "Return",
														"src": "5161:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 236,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4989:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "4981:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4981:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5008:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5000:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5033:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5019:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 241,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5019:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:80:0"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "5075:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5074:9:0"
									},
									"scope": 311,
									"src": "4959:231:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 284,
										"nodeType": "Block",
										"src": "5799:105:0",
										"statements": [
											{
												"id": 283,
												"nodeType": "UncheckedBlock",
												"src": "5809:89:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 275,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 273,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 265,
																		"src": "5841:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 274,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5845:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5841:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 276,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 267,
																	"src": "5848:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 272,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5833:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5833:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 278,
														"nodeType": "ExpressionStatement",
														"src": "5833:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 279,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 263,
																"src": "5882:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 280,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 265,
																"src": "5886:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5882:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 271,
														"id": 282,
														"nodeType": "Return",
														"src": "5875:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 261,
										"nodeType": "StructuredDocumentation",
										"src": "5196:473:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 285,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5683:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5704:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5696:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5696:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5723:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5715:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5715:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5748:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5734:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 266,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5734:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5686:80:0"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5790:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5790:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5789:9:0"
									},
									"scope": 311,
									"src": "5674:230:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 309,
										"nodeType": "Block",
										"src": "6675:105:0",
										"statements": [
											{
												"id": 308,
												"nodeType": "UncheckedBlock",
												"src": "6685:89:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 300,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 298,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 290,
																		"src": "6717:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 299,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6721:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6717:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 301,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 292,
																	"src": "6724:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 297,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6709:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6709:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 303,
														"nodeType": "ExpressionStatement",
														"src": "6709:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 304,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 288,
																"src": "6758:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 305,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 290,
																"src": "6762:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6758:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 296,
														"id": 307,
														"nodeType": "Return",
														"src": "6751:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 286,
										"nodeType": "StructuredDocumentation",
										"src": "5910:635:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6559:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6580:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6572:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6572:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6599:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6591:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6591:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6624:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6610:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 291,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6610:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6562:80:0"
									},
									"returnParameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "6666:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6666:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6665:9:0"
									},
									"scope": 311,
									"src": "6550:230:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 312,
							"src": "482:6300:0",
							"usedErrors": []
						}
					],
					"src": "107:6676:0"
				},
				"id": 0
			},
			"B226328_part1.sol": {
				"ast": {
					"absolutePath": "B226328_part1.sol",
					"exportedSymbols": {
						"Part1_token": [
							647
						],
						"SafeMath": [
							311
						]
					},
					"id": 648,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 313,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:31:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 314,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 648,
							"sourceUnit": 312,
							"src": "33:57:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 647,
							"linearizedBaseContracts": [
								647
							],
							"name": "Part1_token",
							"nameLocation": "101:11:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 317,
									"libraryName": {
										"id": 315,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 311,
										"src": "127:8:1"
									},
									"nodeType": "UsingForDirective",
									"src": "121:27:1",
									"typeName": {
										"id": 316,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "140:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "178:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 647,
									"src": "154:29:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 318,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "154:15:1",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 321,
									"mutability": "mutable",
									"name": "name",
									"nameLocation": "198:4:1",
									"nodeType": "VariableDeclaration",
									"scope": 647,
									"src": "190:12:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 320,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "190:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 323,
									"mutability": "mutable",
									"name": "symbol",
									"nameLocation": "217:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 647,
									"src": "209:14:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 322,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "209:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 325,
									"mutability": "mutable",
									"name": "price",
									"nameLocation": "239:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 647,
									"src": "230:14:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 324,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "230:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 327,
									"mutability": "mutable",
									"name": "totalsupply",
									"nameLocation": "260:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 647,
									"src": "251:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 326,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "251:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 331,
									"mutability": "mutable",
									"name": "balances",
									"nameLocation": "315:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 647,
									"src": "278:45:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 330,
										"keyType": {
											"id": 328,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "286:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "278:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 329,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "297:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 335,
									"mutability": "mutable",
									"name": "roles",
									"nameLocation": "363:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 647,
									"src": "330:38:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 334,
										"keyType": {
											"id": 332,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "338:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "330:24:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 333,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "349:4:1",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 343,
									"name": "Transfer",
									"nameLocation": "381:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "406:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "390:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "390:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "428:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "412:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "412:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "440:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "432:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "432:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "389:57:1"
									},
									"src": "375:72:1"
								},
								{
									"anonymous": false,
									"id": 349,
									"name": "Mint",
									"nameLocation": "459:4:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 345,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "480:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "464:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 344,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "464:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 347,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "492:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "484:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 346,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "484:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "463:35:1"
									},
									"src": "453:46:1"
								},
								{
									"anonymous": false,
									"id": 355,
									"name": "Sell",
									"nameLocation": "511:4:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "532:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "516:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 350,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "516:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 353,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "546:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "538:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 352,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "538:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "515:37:1"
									},
									"src": "505:48:1"
								},
								{
									"body": {
										"id": 399,
										"nodeType": "Block",
										"src": "592:487:1",
										"statements": [
											{
												"expression": {
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 358,
														"name": "name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 321,
														"src": "634:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "437573746f6d20546f6b656e",
														"id": 359,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "641:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_075a02e96647aa26137e7aab87cd4d9549a020ba050b859e735a9dff4b726984",
															"typeString": "literal_string \"Custom Token\""
														},
														"value": "Custom Token"
													},
													"src": "634:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 361,
												"nodeType": "ExpressionStatement",
												"src": "634:21:1"
											},
											{
												"expression": {
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 362,
														"name": "symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 323,
														"src": "666:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "4354",
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "675:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_b0ae267f5886f41f13af4b185dfccc0c901c3b3efe1f44065fbb41d74159fc76",
															"typeString": "literal_string \"CT\""
														},
														"value": "CT"
													},
													"src": "666:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 365,
												"nodeType": "ExpressionStatement",
												"src": "666:13:1"
											},
											{
												"expression": {
													"id": 368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 366,
														"name": "price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 325,
														"src": "690:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "363030",
														"id": 367,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "698:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_600_by_1",
															"typeString": "int_const 600"
														},
														"value": "600"
													},
													"src": "690:11:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 369,
												"nodeType": "ExpressionStatement",
												"src": "690:11:1"
											},
											{
												"expression": {
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 370,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "785:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 373,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "802:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 374,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "802:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 372,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "794:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_payable_$",
																"typeString": "type(address payable)"
															},
															"typeName": {
																"id": 371,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "794:8:1",
																"stateMutability": "payable",
																"typeDescriptions": {}
															}
														},
														"id": 375,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "794:19:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "785:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 377,
												"nodeType": "ExpressionStatement",
												"src": "785:28:1"
											},
											{
												"expression": {
													"id": 382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 378,
															"name": "roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 335,
															"src": "877:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 380,
														"indexExpression": {
															"id": 379,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 319,
															"src": "883:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "877:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 381,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "890:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "877:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 383,
												"nodeType": "ExpressionStatement",
												"src": "877:17:1"
											},
											{
												"expression": {
													"id": 386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 384,
														"name": "totalsupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 327,
														"src": "970:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31303030303030",
														"id": 385,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "984:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000_by_1",
															"typeString": "int_const 1000000"
														},
														"value": "1000000"
													},
													"src": "970:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 387,
												"nodeType": "ExpressionStatement",
												"src": "970:21:1"
											},
											{
												"expression": {
													"id": 392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 388,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 331,
															"src": "1002:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 390,
														"indexExpression": {
															"id": 389,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 319,
															"src": "1011:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1002:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 391,
														"name": "totalsupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 327,
														"src": "1020:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1002:29:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 393,
												"nodeType": "ExpressionStatement",
												"src": "1002:29:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 395,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 319,
															"src": "1052:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 396,
															"name": "totalsupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 327,
															"src": "1059:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 394,
														"name": "Mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 349,
														"src": "1047:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1047:24:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 398,
												"nodeType": "EmitStatement",
												"src": "1042:29:1"
											}
										]
									},
									"id": 400,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "582:2:1"
									},
									"returnParameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "592:0:1"
									},
									"scope": 647,
									"src": "571:508:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 407,
										"nodeType": "Block",
										"src": "1148:39:1",
										"statements": [
											{
												"expression": {
													"id": 405,
													"name": "totalsupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 327,
													"src": "1168:11:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 404,
												"id": 406,
												"nodeType": "Return",
												"src": "1161:18:1"
											}
										]
									},
									"functionSelector": "18160ddd",
									"id": 408,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "1100:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1111:2:1"
									},
									"returnParameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "1134:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1134:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1133:9:1"
									},
									"scope": 647,
									"src": "1091:96:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 415,
										"nodeType": "Block",
										"src": "1253:30:1",
										"statements": [
											{
												"expression": {
													"id": 413,
													"name": "name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 321,
													"src": "1271:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 412,
												"id": 414,
												"nodeType": "Return",
												"src": "1264:11:1"
											}
										]
									},
									"functionSelector": "17d7de7c",
									"id": 416,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getName",
									"nameLocation": "1204:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1211:2:1"
									},
									"returnParameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "1233:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 410,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1233:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1232:15:1"
									},
									"scope": 647,
									"src": "1195:88:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 423,
										"nodeType": "Block",
										"src": "1355:33:1",
										"statements": [
											{
												"expression": {
													"id": 421,
													"name": "symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 323,
													"src": "1373:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 420,
												"id": 422,
												"nodeType": "Return",
												"src": "1366:13:1"
											}
										]
									},
									"functionSelector": "15070401",
									"id": 424,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getSymbol",
									"nameLocation": "1300:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 417,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1309:2:1"
									},
									"returnParameters": {
										"id": 420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 424,
												"src": "1334:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 418,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1334:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1332:17:1"
									},
									"scope": 647,
									"src": "1291:97:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 431,
										"nodeType": "Block",
										"src": "1453:32:1",
										"statements": [
											{
												"expression": {
													"id": 429,
													"name": "price",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 325,
													"src": "1471:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 428,
												"id": 430,
												"nodeType": "Return",
												"src": "1464:12:1"
											}
										]
									},
									"functionSelector": "98d5fdca",
									"id": 432,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPrice",
									"nameLocation": "1405:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1413:2:1"
									},
									"returnParameters": {
										"id": 428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 432,
												"src": "1438:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 426,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1438:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1436:11:1"
									},
									"scope": 647,
									"src": "1396:89:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 487,
										"nodeType": "Block",
										"src": "1560:429:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 450,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 447,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 436,
																		"src": "1653:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"baseExpression": {
																			"id": 442,
																			"name": "balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 331,
																			"src": "1628:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 445,
																		"indexExpression": {
																			"expression": {
																				"id": 443,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "1637:3:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 444,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "1637:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1628:20:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 446,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 190,
																	"src": "1628:24:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 448,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1628:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "30",
																"id": 449,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1663:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1628:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520646f206e6f7420686176652073756666696369656e742062616c616e6365",
															"id": 451,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1666:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1cfe29335417d58430919310476bd047bd59346b3a9c3737faf69e319ee4efb7",
																"typeString": "literal_string \"You do not have sufficient balance\""
															},
															"value": "You do not have sufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1cfe29335417d58430919310476bd047bd59346b3a9c3737faf69e319ee4efb7",
																"typeString": "literal_string \"You do not have sufficient balance\""
															}
														],
														"id": 441,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1620:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1620:83:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 453,
												"nodeType": "ExpressionStatement",
												"src": "1620:83:1"
											},
											{
												"expression": {
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 454,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 331,
															"src": "1764:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 457,
														"indexExpression": {
															"expression": {
																"id": 455,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1773:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 456,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1773:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1764:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 463,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 436,
																"src": "1812:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 458,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 331,
																	"src": "1787:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 461,
																"indexExpression": {
																	"expression": {
																		"id": 459,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1796:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 460,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1796:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1787:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 462,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 190,
															"src": "1787:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 464,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1787:31:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1764:54:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 466,
												"nodeType": "ExpressionStatement",
												"src": "1764:54:1"
											},
											{
												"expression": {
													"id": 476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 467,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 331,
															"src": "1829:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 469,
														"indexExpression": {
															"id": 468,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 434,
															"src": "1838:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1829:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 474,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 436,
																"src": "1861:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 470,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 331,
																	"src": "1844:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 472,
																"indexExpression": {
																	"id": 471,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 434,
																	"src": "1853:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1844:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 473,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 175,
															"src": "1844:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 475,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1844:23:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1829:38:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 477,
												"nodeType": "ExpressionStatement",
												"src": "1829:38:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 479,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1936:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 480,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1936:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 481,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 434,
															"src": "1948:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 482,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 436,
															"src": "1952:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 478,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 343,
														"src": "1927:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1927:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 484,
												"nodeType": "EmitStatement",
												"src": "1922:36:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 485,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1976:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 440,
												"id": 486,
												"nodeType": "Return",
												"src": "1969:11:1"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 488,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1502:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1519:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "1511:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1531:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "1523:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 435,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1523:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:27:1"
									},
									"returnParameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "1554:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 438,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1554:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1553:6:1"
									},
									"scope": 647,
									"src": "1493:496:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 533,
										"nodeType": "Block",
										"src": "2071:249:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 503,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 498,
																	"name": "roles",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 335,
																	"src": "2090:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 501,
																"indexExpression": {
																	"expression": {
																		"id": 499,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2096:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 500,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2096:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2090:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2111:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "2090:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c7920746865206f776e65722063616e206d696e74206e657720746f6b656e73",
															"id": 504,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2117:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dbe0e75e0af93930a70b9625aa5f5d0f68d46c213206bbd891b8ca2b2a563776",
																"typeString": "literal_string \"Only the owner can mint new tokens\""
															},
															"value": "Only the owner can mint new tokens"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dbe0e75e0af93930a70b9625aa5f5d0f68d46c213206bbd891b8ca2b2a563776",
																"typeString": "literal_string \"Only the owner can mint new tokens\""
															}
														],
														"id": 497,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2082:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2082:72:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 506,
												"nodeType": "ExpressionStatement",
												"src": "2082:72:1"
											},
											{
												"expression": {
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 507,
														"name": "totalsupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 327,
														"src": "2165:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 510,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 492,
																"src": "2195:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 508,
																"name": "totalsupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 327,
																"src": "2179:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 175,
															"src": "2179:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2179:22:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2165:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 513,
												"nodeType": "ExpressionStatement",
												"src": "2165:36:1"
											},
											{
												"expression": {
													"id": 524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 514,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 331,
															"src": "2212:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 516,
														"indexExpression": {
															"id": 515,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 490,
															"src": "2221:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2212:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 522,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 492,
																"src": "2249:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"components": [
																	{
																		"baseExpression": {
																			"id": 517,
																			"name": "balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 331,
																			"src": "2229:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 519,
																		"indexExpression": {
																			"id": 518,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 490,
																			"src": "2239:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2229:14:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 520,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2228:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 521,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 175,
															"src": "2228:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 523,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2228:27:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2212:43:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 525,
												"nodeType": "ExpressionStatement",
												"src": "2212:43:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 527,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 490,
															"src": "2278:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 528,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 492,
															"src": "2283:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 526,
														"name": "Mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 349,
														"src": "2271:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2271:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 530,
												"nodeType": "EmitStatement",
												"src": "2266:23:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 531,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2308:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 496,
												"id": 532,
												"nodeType": "Return",
												"src": "2301:11:1"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 534,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "2011:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2025:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "2017:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 489,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2017:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2037:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "2029:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 491,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2029:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2016:27:1"
									},
									"returnParameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "2060:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 494,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2060:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2059:6:1"
									},
									"scope": 647,
									"src": "2001:319:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 545,
										"nodeType": "Block",
										"src": "2453:44:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 541,
														"name": "balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 331,
														"src": "2471:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 543,
													"indexExpression": {
														"id": 542,
														"name": "_account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 536,
														"src": "2480:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2471:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 540,
												"id": 544,
												"nodeType": "Return",
												"src": "2464:25:1"
											}
										]
									},
									"functionSelector": "70a08231",
									"id": 546,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2390:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "_account",
												"nameLocation": "2408:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "2400:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 535,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2400:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2399:18:1"
									},
									"returnParameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "2439:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 538,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2439:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2438:9:1"
									},
									"scope": 647,
									"src": "2381:116:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 623,
										"nodeType": "Block",
										"src": "2567:882:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 562,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 559,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 548,
																		"src": "2611:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"baseExpression": {
																			"id": 554,
																			"name": "balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 331,
																			"src": "2586:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 557,
																		"indexExpression": {
																			"expression": {
																				"id": 555,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "2595:3:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 556,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "2595:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2586:20:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 558,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 190,
																	"src": "2586:24:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 560,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2586:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "30",
																"id": 561,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2619:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2586:34:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742062616c616e6365",
															"id": 563,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2622:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															},
															"value": "Insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															}
														],
														"id": 553,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2578:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2578:67:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 565,
												"nodeType": "ExpressionStatement",
												"src": "2578:67:1"
											},
											{
												"assignments": [
													567
												],
												"declarations": [
													{
														"constant": false,
														"id": 567,
														"mutability": "mutable",
														"name": "weiAmount",
														"nameLocation": "2734:9:1",
														"nodeType": "VariableDeclaration",
														"scope": 623,
														"src": "2726:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 566,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2726:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 571,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 568,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 548,
														"src": "2746:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"hexValue": "363030",
														"id": 569,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2754:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_600_by_1",
															"typeString": "int_const 600"
														},
														"value": "600"
													},
													"src": "2746:11:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2726:31:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 582,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 579,
																		"name": "weiAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 567,
																		"src": "3033:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"arguments": [
																				{
																					"id": 575,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "3015:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Part1_token_$647",
																						"typeString": "contract Part1_token"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Part1_token_$647",
																						"typeString": "contract Part1_token"
																					}
																				],
																				"id": 574,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3007:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 573,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "3007:7:1",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 576,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3007:13:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 577,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "3007:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 578,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 190,
																	"src": "3007:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3007:36:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "30",
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3045:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3007:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6e74726163742062616c616e636520697320696e73756666696369656e74",
															"id": 583,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3048:34:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_63580c8f2f353fc5b6490d467132dc04a523d5a3d9a1206eea4b2a39c4d766db",
																"typeString": "literal_string \"Contract balance is insufficient\""
															},
															"value": "Contract balance is insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_63580c8f2f353fc5b6490d467132dc04a523d5a3d9a1206eea4b2a39c4d766db",
																"typeString": "literal_string \"Contract balance is insufficient\""
															}
														],
														"id": 572,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2999:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2999:84:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 585,
												"nodeType": "ExpressionStatement",
												"src": "2999:84:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 592,
															"name": "weiAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 567,
															"src": "3123:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 588,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3102:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 589,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3102:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 587,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3094:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 586,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3094:8:1",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 590,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3094:19:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 591,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "3094:28:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 593,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3094:39:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 594,
												"nodeType": "ExpressionStatement",
												"src": "3094:39:1"
											},
											{
												"expression": {
													"id": 606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 595,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 331,
															"src": "3144:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 598,
														"indexExpression": {
															"expression": {
																"id": 596,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3153:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 597,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3153:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3144:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 604,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 548,
																"src": "3192:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 599,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 331,
																	"src": "3167:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 602,
																"indexExpression": {
																	"expression": {
																		"id": 600,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3176:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 601,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3176:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3167:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 603,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 190,
															"src": "3167:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 605,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3167:31:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3144:54:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 607,
												"nodeType": "ExpressionStatement",
												"src": "3144:54:1"
											},
											{
												"expression": {
													"id": 613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 608,
														"name": "totalsupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 327,
														"src": "3257:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 611,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 548,
																"src": "3287:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 609,
																"name": "totalsupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 327,
																"src": "3271:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 610,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 190,
															"src": "3271:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 612,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3271:22:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3257:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 614,
												"nodeType": "ExpressionStatement",
												"src": "3257:36:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 616,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3374:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 617,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3374:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 618,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 548,
															"src": "3386:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 615,
														"name": "Sell",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 355,
														"src": "3369:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3369:23:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 620,
												"nodeType": "EmitStatement",
												"src": "3364:28:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 621,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3437:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 552,
												"id": 622,
												"nodeType": "Return",
												"src": "3430:11:1"
											}
										]
									},
									"functionSelector": "e4849b32",
									"id": 624,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sell",
									"nameLocation": "2512:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2525:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 624,
												"src": "2517:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 547,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2517:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2516:15:1"
									},
									"returnParameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 624,
												"src": "2556:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 550,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2556:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2555:6:1"
									},
									"scope": 647,
									"src": "2503:946:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 641,
										"nodeType": "Block",
										"src": "3481:246:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 628,
																	"name": "roles",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 335,
																	"src": "3548:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 631,
																"indexExpression": {
																	"expression": {
																		"id": 629,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3554:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 630,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3554:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3548:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 632,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3569:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "3548:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c7920746865206f776e65722063616e2064657374726f792074686520636f6e7472616374",
															"id": 634,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3575:41:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ab5f331f6ba431abbea29f740d3c5ab5f38e45bf730065272d8e796b7e3904ce",
																"typeString": "literal_string \"Only the owner can destroy the contract\""
															},
															"value": "Only the owner can destroy the contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ab5f331f6ba431abbea29f740d3c5ab5f38e45bf730065272d8e796b7e3904ce",
																"typeString": "literal_string \"Only the owner can destroy the contract\""
															}
														],
														"id": 627,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3540:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3540:77:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 636,
												"nodeType": "ExpressionStatement",
												"src": "3540:77:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 638,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 319,
															"src": "3713:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 637,
														"name": "selfdestruct",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967275,
														"src": "3700:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_payable_$returns$__$",
															"typeString": "function (address payable)"
														}
													},
													"id": 639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3700:19:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 640,
												"nodeType": "ExpressionStatement",
												"src": "3700:19:1"
											}
										]
									},
									"functionSelector": "43d726d6",
									"id": 642,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "close",
									"nameLocation": "3466:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 625,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3471:2:1"
									},
									"returnParameters": {
										"id": 626,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3481:0:1"
									},
									"scope": 647,
									"src": "3457:270:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 645,
										"nodeType": "Block",
										"src": "3761:55:1",
										"statements": []
									},
									"id": 646,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 643,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3741:2:1"
									},
									"returnParameters": {
										"id": 644,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3761:0:1"
									},
									"scope": 647,
									"src": "3733:83:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 648,
							"src": "92:3727:1",
							"usedErrors": []
						}
					],
					"src": "0:3821:1"
				},
				"id": 1
			}
		}
	}
}